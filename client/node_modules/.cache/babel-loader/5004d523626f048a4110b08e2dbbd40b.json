{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\";\nimport Http from '../../utils/Http';\nconst user = {\n  user_id: null,\n  steamid: null,\n  nickname: null,\n  avatar: null,\n  balance: null,\n  group: null\n};\nconst initialState = {\n  isAuthenticated: false,\n  user\n};\nexport default function authReducer(state = initialState, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case types.AUTH_LOGIN:\n      return authLogin(state, payload);\n\n    case types.AUTH_CHECK:\n      return checkAuth(state);\n\n    case types.AUTH_LOGOUT:\n      return logout(state);\n\n    default:\n      return state;\n  }\n}\n;\n\nconst authLogin = (state, payload) => {\n  const jwtToken = payload.token;\n  const user = payload.user[0];\n  localStorage.setItem('jwt_token', jwtToken);\n  Http.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\n  return _objectSpread({}, state, {\n    isAuthenticated: true,\n    user\n  });\n};\n\nconst checkAuth = state => {\n  console.log(state);\n  const hasJwt = !!localStorage.getItem('jwt_token');\n\n  if (hasJwt) {\n    Http.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\n  }\n\n  return _objectSpread({}, state, {\n    isAuthenticated: hasJwt\n  });\n};\n\nconst logout = state => {\n  localStorage.removeItem('jwt_token');\n  return _objectSpread({}, state, {\n    isAuthenticated: false,\n    user\n  });\n};","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/reducers.js"],"names":["types","Http","user","user_id","steamid","nickname","avatar","balance","group","initialState","isAuthenticated","authReducer","state","type","payload","AUTH_LOGIN","authLogin","AUTH_CHECK","checkAuth","AUTH_LOGOUT","logout","jwtToken","token","localStorage","setItem","defaults","headers","common","console","log","hasJwt","getItem","removeItem"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE,IADA;AAETC,EAAAA,OAAO,EAAE,IAFA;AAGTC,EAAAA,QAAQ,EAAE,IAHD;AAITC,EAAAA,MAAM,EAAE,IAJC;AAKTC,EAAAA,OAAO,EAAE,IALA;AAMTC,EAAAA,KAAK,EAAE;AANE,CAAb;AASA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBR,EAAAA;AAFiB,CAArB;AAKA,eAAe,SAASS,WAAT,CAAqBC,KAAK,GAAGH,YAA7B,EAA2C;AAACI,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAA3C,EAAmE;AAC9E,UAAQD,IAAR;AACI,SAAKb,KAAK,CAACe,UAAX;AACI,aAAOC,SAAS,CAACJ,KAAD,EAAQE,OAAR,CAAhB;;AACJ,SAAKd,KAAK,CAACiB,UAAX;AACI,aAAOC,SAAS,CAACN,KAAD,CAAhB;;AACJ,SAAKZ,KAAK,CAACmB,WAAX;AACI,aAAOC,MAAM,CAACR,KAAD,CAAb;;AACJ;AACI,aAAOA,KAAP;AARR;AAUH;AAAA;;AAED,MAAMI,SAAS,GAAG,CAACJ,KAAD,EAAQE,OAAR,KAAoB;AAClC,QAAMO,QAAQ,GAAGP,OAAO,CAACQ,KAAzB;AACA,QAAMpB,IAAI,GAAGY,OAAO,CAACZ,IAAR,CAAa,CAAb,CAAb;AACAqB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,QAAlC;AACApB,EAAAA,IAAI,CAACwB,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,eAA7B,IAAiD,UAASN,QAAS,EAAnE;AAEA,2BACOT,KADP;AAEIF,IAAAA,eAAe,EAAE,IAFrB;AAGIR,IAAAA;AAHJ;AAKH,CAXD;;AAaA,MAAMgB,SAAS,GAAIN,KAAD,IAAW;AACzBgB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACA,QAAMkB,MAAM,GAAG,CAAC,CAACP,YAAY,CAACQ,OAAb,CAAqB,WAArB,CAAjB;;AACA,MAAID,MAAJ,EAAY;AACR7B,IAAAA,IAAI,CAACwB,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,eAA7B,IAAiD,UAASJ,YAAY,CAACQ,OAAb,CAAqB,WAArB,CAAkC,EAA5F;AACH;;AAED,2BACOnB,KADP;AAEIF,IAAAA,eAAe,EAAEoB;AAFrB;AAIH,CAXD;;AAaA,MAAMV,MAAM,GAAIR,KAAD,IAAW;AACtBW,EAAAA,YAAY,CAACS,UAAb,CAAwB,WAAxB;AAEA,2BACOpB,KADP;AAEIF,IAAAA,eAAe,EAAE,KAFrB;AAGIR,IAAAA;AAHJ;AAKH,CARD","sourcesContent":["import * as types from \"./types\";\r\nimport Http from '../../utils/Http'\r\n\r\nconst user = {\r\n    user_id: null,\r\n    steamid: null,\r\n    nickname: null,\r\n    avatar: null,\r\n    balance: null,\r\n    group: null,\r\n};\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user\r\n};\r\n\r\nexport default function authReducer(state = initialState, {type, payload = null}) {\r\n    switch (type) {\r\n        case types.AUTH_LOGIN:\r\n            return authLogin(state, payload);\r\n        case types.AUTH_CHECK:\r\n            return checkAuth(state);\r\n        case types.AUTH_LOGOUT:\r\n            return logout(state);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst authLogin = (state, payload) => {\r\n    const jwtToken = payload.token;\r\n    const user = payload.user[0];\r\n    localStorage.setItem('jwt_token', jwtToken);\r\n    Http.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\r\n\r\n    return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user\r\n    }\r\n};\r\n\r\nconst checkAuth = (state) => {\r\n    console.log(state)\r\n    const hasJwt = !!localStorage.getItem('jwt_token')\r\n    if (hasJwt) {\r\n        Http.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        isAuthenticated: hasJwt,\r\n    };\r\n};\r\n\r\nconst logout = (state) => {\r\n    localStorage.removeItem('jwt_token');\r\n\r\n    return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}