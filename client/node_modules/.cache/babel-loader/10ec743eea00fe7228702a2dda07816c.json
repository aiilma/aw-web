{"ast":null,"code":"import { initCompleted, initFailed, init } from './actions';\nimport { me } from \"../auth/operations\";\nimport UserApi from \"../../utils/UserApi\";\nimport { handleHTTPError } from \"../error/operations\";\n\nconst initApp = () => dispatch => {\n  const promises = [];\n  dispatch(init());\n\n  if (UserApi.isAuthenticated) {\n    const authPromise = dispatch(me());\n    promises.push(authPromise);\n  }\n\n  Promise.all(promises).then(() => {\n    dispatch(initCompleted());\n  }).catch(err => {\n    dispatch(initFailed());\n    dispatch(handleHTTPError(err));\n  });\n};\n\nexport { initApp };","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/app/operations.js"],"names":["initCompleted","initFailed","init","me","UserApi","handleHTTPError","initApp","dispatch","promises","isAuthenticated","authPromise","push","Promise","all","then","catch","err"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,IAAnC,QAA8C,WAA9C;AACA,SAAQC,EAAR,QAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAAQC,eAAR,QAA8B,qBAA9B;;AAEA,MAAMC,OAAO,GAAG,MAAOC,QAAD,IAAc;AAChC,QAAMC,QAAQ,GAAG,EAAjB;AAEAD,EAAAA,QAAQ,CAACL,IAAI,EAAL,CAAR;;AAEA,MAAIE,OAAO,CAACK,eAAZ,EAA6B;AACzB,UAAMC,WAAW,GAAGH,QAAQ,CAACJ,EAAE,EAAH,CAA5B;AACAK,IAAAA,QAAQ,CAACG,IAAT,CAAcD,WAAd;AACH;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EACKM,IADL,CACU,MAAM;AACRP,IAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;AACH,GAHL,EAIKe,KAJL,CAIWC,GAAG,IAAI;AACVT,IAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACAM,IAAAA,QAAQ,CAACF,eAAe,CAACW,GAAD,CAAhB,CAAR;AACH,GAPL;AAQH,CAlBD;;AAoBA,SAAQV,OAAR","sourcesContent":["import {initCompleted, initFailed, init} from './actions'\r\nimport {me} from \"../auth/operations\";\r\nimport UserApi from \"../../utils/UserApi\"\r\nimport {handleHTTPError} from \"../error/operations\";\r\n\r\nconst initApp = () => (dispatch) => {\r\n    const promises = []\r\n\r\n    dispatch(init())\r\n\r\n    if (UserApi.isAuthenticated) {\r\n        const authPromise = dispatch(me())\r\n        promises.push(authPromise)\r\n    }\r\n\r\n    Promise.all(promises)\r\n        .then(() => {\r\n            dispatch(initCompleted())\r\n        })\r\n        .catch(err => {\r\n            dispatch(initFailed())\r\n            dispatch(handleHTTPError(err))\r\n        })\r\n}\r\n\r\nexport {initApp}"]},"metadata":{},"sourceType":"module"}