{"ast":null,"code":"import { authCheck, authLogout, authLogin } from \"./actions\";\nimport Http from '../../utils/Http'; // const login = (creds) => {\n//     // if (data.success) {\n//     const {user} = creds\n//     let userData = {\n//         user_id: user.user_id,\n//         steamid: user.steamid,\n//         nickname: user.nickname,\n//         avatar: user.avatar,\n//         balance: user.balance,\n//         group: user.group,\n//         timestamp: new Date().toString()\n//     };\n//     let authData = {\n//         isAuthenticated: true,\n//         token: creds.token,\n//         user: userData\n//     }\n//\n//     // save app state with user date in local storage\n//     localStorage[\"user\"] = JSON.stringify(authData);\n//     return loginAC(authData)\n//     // } else alert(\"failed\");\n// }\n\nconst login = creds => {\n  return dispatch => new Promise((resolve, reject) => {\n    dispatch(authLogin(creds));\n    return resolve();\n    console.log(creds); // const statusCode = err.response.status;\n    // const data = {\n    //     error: null,\n    //     statusCode,\n    // };\n    // if (statusCode === 401 || statusCode === 422) {\n    //     // status 401 means unauthorized\n    //     // status 422 means unprocessable entity\n    //     data.error = err.response.data.message;\n    // }\n    // return reject(data);\n  });\n};\n\nconst logout = () => {\n  return dispatch => new Promise((resolve, reject) => {\n    dispatch(authLogout());\n    return resolve(); // const statusCode = err.response.status;\n    // const data = {\n    //     error: null,\n    //     statusCode,\n    // };\n    // if (statusCode === 401 || statusCode === 422) {\n    //     // status 401 means unauthorized\n    //     // status 422 means unprocessable entity\n    //     data.error = err.response.data.message;\n    // }\n    // return reject(data);\n  });\n};\n\nexport { login, logout };","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/operations.js"],"names":["authCheck","authLogout","authLogin","Http","login","creds","dispatch","Promise","resolve","reject","console","log","logout"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,UAAnB,EAA+BC,SAA/B,QAA+C,WAA/C;AACA,OAAOC,IAAP,MAAiB,kBAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,SAAOC,QAAQ,IACX,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7BH,IAAAA,QAAQ,CAACJ,SAAS,CAACG,KAAD,CAAV,CAAR;AACA,WAAOG,OAAO,EAAd;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAJ6B,CAK7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAhBD,CADJ;AAmBH,CApBD;;AAsBA,MAAMO,MAAM,GAAG,MAAM;AACjB,SAAON,QAAQ,IACX,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7BH,IAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACA,WAAOO,OAAO,EAAd,CAF6B,CAI7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAfD,CADJ;AAkBH,CAnBD;;AAsBA,SACIJ,KADJ,EACWQ,MADX","sourcesContent":["import {authCheck, authLogout, authLogin} from \"./actions\";\r\nimport Http from '../../utils/Http'\r\n\r\n// const login = (creds) => {\r\n//     // if (data.success) {\r\n//     const {user} = creds\r\n//     let userData = {\r\n//         user_id: user.user_id,\r\n//         steamid: user.steamid,\r\n//         nickname: user.nickname,\r\n//         avatar: user.avatar,\r\n//         balance: user.balance,\r\n//         group: user.group,\r\n//         timestamp: new Date().toString()\r\n//     };\r\n//     let authData = {\r\n//         isAuthenticated: true,\r\n//         token: creds.token,\r\n//         user: userData\r\n//     }\r\n//\r\n//     // save app state with user date in local storage\r\n//     localStorage[\"user\"] = JSON.stringify(authData);\r\n//     return loginAC(authData)\r\n//     // } else alert(\"failed\");\r\n// }\r\n\r\nconst login = (creds) => {\r\n    return dispatch => (\r\n        new Promise((resolve, reject) => {\r\n            dispatch(authLogin(creds));\r\n            return resolve();\r\n\r\n            console.log(creds)\r\n            // const statusCode = err.response.status;\r\n            // const data = {\r\n            //     error: null,\r\n            //     statusCode,\r\n            // };\r\n            // if (statusCode === 401 || statusCode === 422) {\r\n            //     // status 401 means unauthorized\r\n            //     // status 422 means unprocessable entity\r\n            //     data.error = err.response.data.message;\r\n            // }\r\n            // return reject(data);\r\n        })\r\n    )\r\n}\r\n\r\nconst logout = () => {\r\n    return dispatch => (\r\n        new Promise((resolve, reject) => {\r\n            dispatch(authLogout())\r\n            return resolve()\r\n\r\n            // const statusCode = err.response.status;\r\n            // const data = {\r\n            //     error: null,\r\n            //     statusCode,\r\n            // };\r\n            // if (statusCode === 401 || statusCode === 422) {\r\n            //     // status 401 means unauthorized\r\n            //     // status 422 means unprocessable entity\r\n            //     data.error = err.response.data.message;\r\n            // }\r\n            // return reject(data);\r\n        })\r\n    )\r\n}\r\n\r\n\r\nexport {\r\n    login, logout\r\n}"]},"metadata":{},"sourceType":"module"}