{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\CompOrderForm\\\\Container.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\nimport { FormWrapper, InnerFormSpacer, Title } from \"../../common/form_components\";\nimport OrderFormInputs from \"./Inputs/Inputs\";\nimport OrderFormSummarize from \"./Summarize/Summarize\";\nimport OrderFormControls from \"./Controls/Controls\";\nimport { Spacer } from \"../../common/layout\";\nimport { withFormik } from 'formik';\n\nconst MyForm = props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.name,\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), errors.name && touched.name && React.createElement(\"div\", {\n    id: \"feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, errors.name), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nconst MyEnhancedForm = withFormik({\n  mapPropsToValues: () => ({\n    name: ''\n  }),\n  // Custom sync validation\n  validate: values => {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = 'Required';\n    }\n\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n  displayName: 'BasicForm'\n})(MyForm);\n\nconst mapStateToProps = state => ({\n  user: state.auth,\n  compData: state.compOrderForm\n});\n\nexport default connect(mapStateToProps, {})(MyEnhancedForm);\n\nconst getDefaultState = composition => {\n  let typeVariant = {\n    long: {\n      value: composition.typeVariant === 1,\n      disabled: composition.typeVariant === 2\n    },\n    short: {\n      value: composition.typeVariant === 2,\n      disabled: composition.typeVariant === 1\n    }\n  };\n  let inputs = {};\n\n  if (Object.entries(composition.inputs).length > 0) {\n    inputs = _objectSpread({}, composition.inputs);\n    Object.keys(inputs).forEach(propName => {\n      inputs[propName] = _objectSpread({}, composition.inputs[propName], {\n        value: ''\n      });\n    });\n  }\n\n  return {\n    typeVariant,\n    inputs\n  };\n};\n\nclass OrderFormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTypeVariant = name => event => {\n      this.setState(_objectSpread({}, this.state, {\n        typeVariant: _objectSpread({}, this.state.typeVariant, {\n          [name]: _objectSpread({}, this.state.typeVariant[name], {\n            value: event.target.checked\n          })\n        })\n      }));\n    };\n\n    this.handleInputs = event => {\n      const inpName = event.target.id;\n      const inpValue = event.target.value;\n      this.setState(_objectSpread({}, this.state, {\n        inputs: _objectSpread({}, this.state.inputs, {\n          [inpName]: _objectSpread({}, this.state.inputs[inpName], {\n            value: inpValue\n          })\n        })\n      }));\n    };\n\n    this.onClear = () => {\n      this.setState(getDefaultState(this.props.compData)); // clear session / localStorage (action)\n    };\n\n    this.onBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault(); // валидация данных в стейте, затем отправка на сервер\n\n      this.props.history.push(`${this.props.location.pathname}/success`);\n    };\n\n    this.state = getDefaultState(props.compData);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(SecondaryLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Spacer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(FormWrapper, {\n      maxWidth: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(InnerFormSpacer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Title, {\n      text: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(OrderFormInputs, {\n      inputs: this.state,\n      handlers: {\n        handleTypeVariant: this.props.compData.typeVariant === 0 ? this.handleTypeVariant : () => {},\n        handleInputs: this.handleInputs\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(OrderFormSummarize, {\n      price: this.props.compData.price,\n      title: this.props.compData.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(OrderFormControls, {\n      onClear: this.onClear,\n      onBack: this.onBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/CompOrderForm/Container.js"],"names":["React","Component","connect","SecondaryLayout","FormWrapper","InnerFormSpacer","Title","OrderFormInputs","OrderFormSummarize","OrderFormControls","Spacer","withFormik","MyForm","props","values","touched","errors","handleChange","handleBlur","handleSubmit","name","MyEnhancedForm","mapPropsToValues","validate","setSubmitting","setTimeout","alert","JSON","stringify","displayName","mapStateToProps","state","user","auth","compData","compOrderForm","getDefaultState","composition","typeVariant","long","value","disabled","short","inputs","Object","entries","length","keys","forEach","propName","OrderFormContainer","constructor","handleTypeVariant","event","setState","target","checked","handleInputs","inpName","id","inpValue","onClear","onBack","history","goBack","onSubmit","e","preventDefault","push","location","pathname","componentDidMount","render","price","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,KAAtC,QAAkD,8BAAlD;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,SAAQC,UAAR,QAAyB,QAAzB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,QAEhBC,MAFgB,GAIhBD,KAJgB,CAEhBC,MAFgB;AAAA,QAERC,OAFQ,GAIhBF,KAJgB,CAERE,OAFQ;AAAA,QAECC,MAFD,GAIhBH,KAJgB,CAECG,MAFD;AAAA,QAGhBC,YAHgB,GAIhBJ,KAJgB,CAGhBI,YAHgB;AAAA,QAGFC,UAHE,GAIhBL,KAJgB,CAGFK,UAHE;AAAA,QAGUC,YAHV,GAIhBN,KAJgB,CAGUM,YAHV;AAKpB,SACI;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,QAAQ,EAAEF,YAFd;AAGI,IAAA,MAAM,EAAEC,UAHZ;AAII,IAAA,KAAK,EAAEJ,MAAM,CAACM,IAJlB;AAKI,IAAA,IAAI,EAAC,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQKJ,MAAM,CAACI,IAAP,IAAeL,OAAO,CAACK,IAAvB,IAA+B;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBJ,MAAM,CAACI,IAA3B,CARpC,EASI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,CADJ;AAaH,CAlBD;;AAoBA,MAAMC,cAAc,GAAGV,UAAU,CAAC;AAC9BW,EAAAA,gBAAgB,EAAE,OAAO;AAACF,IAAAA,IAAI,EAAE;AAAP,GAAP,CADY;AAG9B;AACAG,EAAAA,QAAQ,EAAET,MAAM,IAAI;AAChB,UAAME,MAAM,GAAG,EAAf;;AAEA,QAAI,CAACF,MAAM,CAACM,IAAZ,EAAkB;AACdJ,MAAAA,MAAM,CAACI,IAAP,GAAc,UAAd;AACH;;AAED,WAAOJ,MAAP;AACH,GAZ6B;AAc9BG,EAAAA,YAAY,EAAE,CAACL,MAAD,EAAS;AAACU,IAAAA;AAAD,GAAT,KAA6B;AACvCC,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAed,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAU,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAHS,EAGP,IAHO,CAAV;AAIH,GAnB6B;AAqB9BK,EAAAA,WAAW,EAAE;AArBiB,CAAD,CAAV,CAsBpBjB,MAtBoB,CAAvB;;AAwBA,MAAMkB,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,IAAI,EAAED,KAAK,CAACE,IADoB;AAEhCC,EAAAA,QAAQ,EAAEH,KAAK,CAACI;AAFgB,CAAZ,CAAxB;;AAKA,eAAejC,OAAO,CAAC4B,eAAD,EAAkB,EAAlB,CAAP,CAA6BT,cAA7B,CAAf;;AAGA,MAAMe,eAAe,GAAIC,WAAD,IAAiB;AACrC,MAAIC,WAAW,GAAG;AACdC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAEH,WAAW,CAACC,WAAZ,KAA4B,CADjC;AAEFG,MAAAA,QAAQ,EAAEJ,WAAW,CAACC,WAAZ,KAA4B;AAFpC,KADQ;AAKdI,IAAAA,KAAK,EAAE;AACHF,MAAAA,KAAK,EAAEH,WAAW,CAACC,WAAZ,KAA4B,CADhC;AAEHG,MAAAA,QAAQ,EAAEJ,WAAW,CAACC,WAAZ,KAA4B;AAFnC;AALO,GAAlB;AAUA,MAAIK,MAAM,GAAG,EAAb;;AAEA,MAAIC,MAAM,CAACC,OAAP,CAAeR,WAAW,CAACM,MAA3B,EAAmCG,MAAnC,GAA4C,CAAhD,EAAmD;AAC/CH,IAAAA,MAAM,qBACCN,WAAW,CAACM,MADb,CAAN;AAIAC,IAAAA,MAAM,CAACG,IAAP,CAAYJ,MAAZ,EAAoBK,OAApB,CAA6BC,QAAD,IAAc;AACtCN,MAAAA,MAAM,CAACM,QAAD,CAAN,qBACOZ,WAAW,CAACM,MAAZ,CAAmBM,QAAnB,CADP;AAEIT,QAAAA,KAAK,EAAE;AAFX;AAIH,KALD;AAMH;;AAED,SAAQ;AACJF,IAAAA,WADI;AAEJK,IAAAA;AAFI,GAAR;AAIH,CA9BD;;AAiCA,MAAMO,kBAAN,SAAiCjD,SAAjC,CAA2C;AACvCkD,EAAAA,WAAW,CAACtC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBuC,iBARmB,GAQChC,IAAI,IAAIiC,KAAK,IAAI;AACjC,WAAKC,QAAL,mBACO,KAAKvB,KADZ;AAEIO,QAAAA,WAAW,oBACJ,KAAKP,KAAL,CAAWO,WADP;AAEP,WAAClB,IAAD,qBACO,KAAKW,KAAL,CAAWO,WAAX,CAAuBlB,IAAvB,CADP;AAEIoB,YAAAA,KAAK,EAAEa,KAAK,CAACE,MAAN,CAAaC;AAFxB;AAFO;AAFf;AAUH,KAnBkB;;AAAA,SAqBnBC,YArBmB,GAqBJJ,KAAK,IAAI;AACpB,YAAMK,OAAO,GAAGL,KAAK,CAACE,MAAN,CAAaI,EAA7B;AACA,YAAMC,QAAQ,GAAGP,KAAK,CAACE,MAAN,CAAaf,KAA9B;AAEA,WAAKc,QAAL,mBACO,KAAKvB,KADZ;AAEIY,QAAAA,MAAM,oBACC,KAAKZ,KAAL,CAAWY,MADZ;AAEF,WAACe,OAAD,qBACO,KAAK3B,KAAL,CAAWY,MAAX,CAAkBe,OAAlB,CADP;AAEIlB,YAAAA,KAAK,EAAEoB;AAFX;AAFE;AAFV;AAWH,KApCkB;;AAAA,SAsCnBC,OAtCmB,GAsCT,MAAM;AACZ,WAAKP,QAAL,CAAclB,eAAe,CAAC,KAAKvB,KAAL,CAAWqB,QAAZ,CAA7B,EADY,CAEZ;AACH,KAzCkB;;AAAA,SA2CnB4B,MA3CmB,GA2CV,MAAM;AACX,WAAKjD,KAAL,CAAWkD,OAAX,CAAmBC,MAAnB;AACH,KA7CkB;;AAAA,SA+CnBC,QA/CmB,GA+CRC,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACC,cAAF,GADY,CAEZ;;AACA,WAAKtD,KAAL,CAAWkD,OAAX,CAAmBK,IAAnB,CAAyB,GAAE,KAAKvD,KAAL,CAAWwD,QAAX,CAAoBC,QAAS,UAAxD;AACH,KAnDkB;;AAEf,SAAKvC,KAAL,GAAaK,eAAe,CAACvB,KAAK,CAACqB,QAAP,CAA5B;AACH;;AAEDqC,EAAAA,iBAAiB,GAAG,CACnB;;AA+CDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,qEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAE,KAAKP,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,MAAM,EAAE,KAAKlC,KAA9B;AAAqC,MAAA,QAAQ,EAAE;AAC3CqB,QAAAA,iBAAiB,EAAE,KAAKvC,KAAL,CAAWqB,QAAX,CAAoBI,WAApB,KAAoC,CAApC,GAAwC,KAAKc,iBAA7C,GAAiE,MAAM,CACzF,CAF0C;AAG3CK,QAAAA,YAAY,EAAE,KAAKA;AAHwB,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,kBAAD;AAAoB,MAAA,KAAK,EAAE,KAAK5C,KAAL,CAAWqB,QAAX,CAAoBuC,KAA/C;AAAsD,MAAA,KAAK,EAAE,KAAK5D,KAAL,CAAWqB,QAAX,CAAoBwC,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI,oBAAC,iBAAD;AAAmB,MAAA,OAAO,EAAE,KAAKb,OAAjC;AAA0C,MAAA,MAAM,EAAE,KAAKC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAHJ,CADJ,CAHJ,CADJ;AAuBH;;AA9EsC","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\r\nimport {FormWrapper, InnerFormSpacer, Title} from \"../../common/form_components\";\r\nimport OrderFormInputs from \"./Inputs/Inputs\";\r\nimport OrderFormSummarize from \"./Summarize/Summarize\";\r\nimport OrderFormControls from \"./Controls/Controls\";\r\nimport {Spacer} from \"../../common/layout\";\r\nimport {withFormik} from 'formik';\r\n\r\nconst MyForm = props => {\r\n    const {\r\n        values, touched, errors,\r\n        handleChange, handleBlur, handleSubmit,\r\n    } = props;\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.name}\r\n                name=\"name\"\r\n            />\r\n            {errors.name && touched.name && <div id=\"feedback\">{errors.name}</div>}\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst MyEnhancedForm = withFormik({\r\n    mapPropsToValues: () => ({name: ''}),\r\n\r\n    // Custom sync validation\r\n    validate: values => {\r\n        const errors = {};\r\n\r\n        if (!values.name) {\r\n            errors.name = 'Required';\r\n        }\r\n\r\n        return errors;\r\n    },\r\n\r\n    handleSubmit: (values, {setSubmitting}) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n        }, 1000);\r\n    },\r\n\r\n    displayName: 'BasicForm',\r\n})(MyForm);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth,\r\n    compData: state.compOrderForm\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(MyEnhancedForm)\r\n\r\n\r\nconst getDefaultState = (composition) => {\r\n    let typeVariant = {\r\n        long: {\r\n            value: composition.typeVariant === 1,\r\n            disabled: composition.typeVariant === 2,\r\n        },\r\n        short: {\r\n            value: composition.typeVariant === 2,\r\n            disabled: composition.typeVariant === 1,\r\n        },\r\n    }\r\n    let inputs = {}\r\n\r\n    if (Object.entries(composition.inputs).length > 0) {\r\n        inputs = {\r\n            ...composition.inputs\r\n        }\r\n\r\n        Object.keys(inputs).forEach((propName) => {\r\n            inputs[propName] = {\r\n                ...composition.inputs[propName],\r\n                value: '',\r\n            }\r\n        })\r\n    }\r\n\r\n    return ({\r\n        typeVariant,\r\n        inputs,\r\n    })\r\n}\r\n\r\n\r\nclass OrderFormContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = getDefaultState(props.compData)\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    handleTypeVariant = name => event => {\r\n        this.setState({\r\n            ...this.state,\r\n            typeVariant: {\r\n                ...this.state.typeVariant,\r\n                [name]: {\r\n                    ...this.state.typeVariant[name],\r\n                    value: event.target.checked,\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleInputs = event => {\r\n        const inpName = event.target.id\r\n        const inpValue = event.target.value\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            inputs: {\r\n                ...this.state.inputs,\r\n                [inpName]: {\r\n                    ...this.state.inputs[inpName],\r\n                    value: inpValue\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    onClear = () => {\r\n        this.setState(getDefaultState(this.props.compData))\r\n        // clear session / localStorage (action)\r\n    }\r\n\r\n    onBack = () => {\r\n        this.props.history.goBack()\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        // валидация данных в стейте, затем отправка на сервер\r\n        this.props.history.push(`${this.props.location.pathname}/success`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SecondaryLayout>\r\n                <Spacer/>\r\n\r\n                <FormWrapper maxWidth=\"xl\">\r\n                    <InnerFormSpacer>\r\n                        <Title text=\"Форма заказа\"/>\r\n\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <OrderFormInputs inputs={this.state} handlers={{\r\n                                handleTypeVariant: this.props.compData.typeVariant === 0 ? this.handleTypeVariant : () => {\r\n                                },\r\n                                handleInputs: this.handleInputs\r\n                            }}/>\r\n                            <OrderFormSummarize price={this.props.compData.price} title={this.props.compData.title}/>\r\n                            <OrderFormControls onClear={this.onClear} onBack={this.onBack}/>\r\n                        </form>\r\n\r\n                    </InnerFormSpacer>\r\n                </FormWrapper>\r\n\r\n            </SecondaryLayout>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}