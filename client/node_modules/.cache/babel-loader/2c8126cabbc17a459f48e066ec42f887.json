{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\Home\\\\BoxVariant.js\";\nimport React from 'react';\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from 'styled-components';\nconst BoxBtn = styled(ButtonBase)`\n        will-change: transform;\n        width: 450px;\n        height: 300px;\n        position: relative;\n        margin: 6% 3%;\n        box-shadow: 0 2px 2px 1px rgba(0, 0, 0, .95);\n        transition: all .15s ease-in-out;\n        transform: rotate(${({\n  rotate\n}) => rotate}deg);\n        \n        ${({\n  theme\n}) => `\n            ${theme.breakpoints.down('xs')} {\n                    width: 100% !important;\n                    height: 100px;\n                }\n        `}\n        \n        &:hover {\n            box-shadow: 0 5px 8px 2px rgba(0, 0, 0, .95);\n            z-index: 1;\n        }\n        \n        &:active {\n            color: rgba(255, 255, 255, .95);\n            box-shadow: 0 5px 8px 2px rgba(243, 156, 18, .95);\n            transition: all .75s ease-in-out;\n        }\n`; // imageSrc\n\nconst Image = styled.span`\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        background-size: cover;\n        background-position: center 40%;\n        background-image: url('${({\n  image\n}) => image}');\n`; //imageBackdrop\n\nconst Backdrop = styled.span`\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        opacity: 0.4;\n        \n        background-color: ${({\n  theme\n}) => theme.palette.common.black};\n        transition: ${({\n  theme\n}) => theme.transitions.create('opacity')};\n        \n        ${BoxBtn}:hover & {\n            opacity: 0.15;\n        }\n`;\nconst TitleWrapper = styled.span`\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: ${({\n  theme\n}) => theme.palette.common.white};\n`;\nconst Title = styled(Typography)`\n    position: relative;\n    padding: ${({\n  theme\n}) => `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`};\n    \n    ${BoxBtn}:hover & {\n        border: 4px solid currentColor;\n    }\n`;\nconst BoxVariant = React.memo((_ref) => {\n  let image = _ref.image,\n      props = _objectWithoutProperties(_ref, [\"image\"]);\n\n  return React.createElement(BoxBtn, {\n    component: Link,\n    to: image.to,\n    rotate: image.rotate,\n    focusRipple: true,\n    p: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Image, {\n    image: `process.env.REACT_APP_STORAGE/images/${image.url}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Backdrop, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(TitleWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Title, {\n    component: \"span\",\n    variant: \"subtitle1\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, image.title)));\n});\nexport default BoxVariant;","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/Home/BoxVariant.js"],"names":["React","ButtonBase","Link","Typography","styled","BoxBtn","rotate","theme","breakpoints","down","Image","span","image","Backdrop","palette","common","black","transitions","create","TitleWrapper","white","Title","spacing","BoxVariant","memo","props","to","url","title"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACH,UAAD,CAAa;;;;;;;;4BAQN,CAAC;AAACK,EAAAA;AAAD,CAAD,KAAcA,MAAO;;UAEvC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;cACVA,KAAK,CAACC,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAA6B;;;;SAIjC;;;;;;;;;;;;CAfV,C,CA6BA;;AACA,MAAMC,KAAK,GAAGN,MAAM,CAACO,IAAK;;;;;;;;iCAQO,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAaA,KAAM;CARpD,C,CAWA;;AACA,MAAMC,QAAQ,GAAGT,MAAM,CAACO,IAAK;;;;;;;;4BAQD,CAAC;AAACJ,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAACO,OAAN,CAAcC,MAAd,CAAqBC,KAAM;sBAC9C,CAAC;AAACT,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAACU,WAAN,CAAkBC,MAAlB,CAAyB,SAAzB,CAAoC;;UAE7Db,MAAO;;;CAXjB;AAgBA,MAAMc,YAAY,GAAGf,MAAM,CAACO,IAAK;;;;;;;;;iBAShB,CAAC;AAACJ,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAACO,OAAN,CAAcC,MAAd,CAAqBK,KAAM;CATzD;AAWA,MAAMC,KAAK,GAAGjB,MAAM,CAACD,UAAD,CAAa;;eAElB,CAAC;AAACI,EAAAA;AAAD,CAAD,KAAc,GAAEA,KAAK,CAACe,OAAN,CAAc,CAAd,CAAiB,MAAKf,KAAK,CAACe,OAAN,CAAc,CAAd,CAAiB,MAAKf,KAAK,CAACe,OAAN,CAAc,CAAd,IAAmB,CAAE,IAAI;;MAE9FjB,MAAO;;;CAJb;AAUA,MAAMkB,UAAU,GAAGvB,KAAK,CAACwB,IAAN,CAAW,UAAuB;AAAA,MAArBZ,KAAqB,QAArBA,KAAqB;AAAA,MAAXa,KAAW;;AAEjD,SACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEvB,IAAnB;AAAyB,IAAA,EAAE,EAAEU,KAAK,CAACc,EAAnC;AAAuC,IAAA,MAAM,EAAEd,KAAK,CAACN,MAArD;AAA6D,IAAA,WAAW,MAAxE;AAAyE,IAAA,CAAC,EAAE,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAG,wCAAuCM,KAAK,CAACe,GAAI,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAwB,IAAA,OAAO,EAAC,WAAhC;AAA4C,IAAA,KAAK,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,KAAK,CAACgB,KADX,CADJ,CAHJ,CADJ;AAWH,CAbkB,CAAnB;AAeA,eAAeL,UAAf","sourcesContent":["import React from 'react'\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styled from 'styled-components'\r\n\r\nconst BoxBtn = styled(ButtonBase)`\r\n        will-change: transform;\r\n        width: 450px;\r\n        height: 300px;\r\n        position: relative;\r\n        margin: 6% 3%;\r\n        box-shadow: 0 2px 2px 1px rgba(0, 0, 0, .95);\r\n        transition: all .15s ease-in-out;\r\n        transform: rotate(${({rotate}) => rotate}deg);\r\n        \r\n        ${({theme}) => `\r\n            ${theme.breakpoints.down('xs')} {\r\n                    width: 100% !important;\r\n                    height: 100px;\r\n                }\r\n        `}\r\n        \r\n        &:hover {\r\n            box-shadow: 0 5px 8px 2px rgba(0, 0, 0, .95);\r\n            z-index: 1;\r\n        }\r\n        \r\n        &:active {\r\n            color: rgba(255, 255, 255, .95);\r\n            box-shadow: 0 5px 8px 2px rgba(243, 156, 18, .95);\r\n            transition: all .75s ease-in-out;\r\n        }\r\n`\r\n\r\n// imageSrc\r\nconst Image = styled.span`\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        background-size: cover;\r\n        background-position: center 40%;\r\n        background-image: url('${({image}) => image}');\r\n`\r\n\r\n//imageBackdrop\r\nconst Backdrop = styled.span`\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        opacity: 0.4;\r\n        \r\n        background-color: ${({theme}) => theme.palette.common.black};\r\n        transition: ${({theme}) => theme.transitions.create('opacity')};\r\n        \r\n        ${BoxBtn}:hover & {\r\n            opacity: 0.15;\r\n        }\r\n`\r\n\r\nconst TitleWrapper = styled.span`\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        color: ${({theme}) => theme.palette.common.white};\r\n`\r\nconst Title = styled(Typography)`\r\n    position: relative;\r\n    padding: ${({theme}) => `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`};\r\n    \r\n    ${BoxBtn}:hover & {\r\n        border: 4px solid currentColor;\r\n    }\r\n`\r\n\r\n\r\nconst BoxVariant = React.memo(({image, ...props}) => {\r\n\r\n    return (\r\n        <BoxBtn component={Link} to={image.to} rotate={image.rotate} focusRipple p={5}>\r\n            <Image image={`process.env.REACT_APP_STORAGE/images/${image.url}`}/>\r\n            <Backdrop/>\r\n            <TitleWrapper>\r\n                <Title component=\"span\" variant=\"subtitle1\" color=\"inherit\">\r\n                    {image.title}\r\n                </Title>\r\n            </TitleWrapper>\r\n        </BoxBtn>\r\n    )\r\n})\r\n\r\nexport default BoxVariant"]},"metadata":{},"sourceType":"module"}