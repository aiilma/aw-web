{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\components\\\\CompForm\\\\CompFormContainer.js\";\nimport React from 'react';\nimport SecondaryLayout from \"../_layouts/default/SecondaryLayout\";\nimport PageCaptionSpacer from \"../common/PageCaptionSpacer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FormWrapper, InnerFormSpacer } from \"../common/form_components\";\nimport CompFormInputs from \"./CompFormInputs/CompFormInputs\";\nimport CompFormSummarize from \"./CompFormSummarize/CompFormSummarize\";\nimport CompFormControls from \"./CompFormControls/CompFormControls\";\n\nfunction Title(_ref) {\n  let text = _ref.text,\n      props = _objectWithoutProperties(_ref, [\"text\"]);\n\n  return React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    align: \"center\",\n    color: \"textPrimary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, text);\n}\n\nfunction CompFormContainer(props) {\n  const _React$useState = React.useState({\n    typeVariant: {\n      long: false,\n      short: false\n    },\n    inputs: {\n      username: {\n        label: \"Your nickname\",\n        value: \"\"\n      },\n      channel_name: {\n        label: \"Channel\",\n        value: \"\"\n      }\n    }\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const handleInputs = event => {\n    const inpName = event.target.id;\n    const inpValue = event.target.value;\n    setState(_objectSpread({}, state, {\n      inputs: _objectSpread({}, state.inputs, {\n        [inpName]: _objectSpread({}, state.inputs[inpName], {\n          value: inpValue\n        })\n      })\n    }));\n  };\n\n  const handleTypeVariant = name => event => {\n    setState(_objectSpread({}, state, {\n      typeVariant: _objectSpread({}, state.typeVariant, {\n        [name]: event.target.checked\n      })\n    }));\n  };\n\n  return React.createElement(SecondaryLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(PageCaptionSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(FormWrapper, {\n    maxWidth: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(InnerFormSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Title, {\n    text: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: e => {\n      e.preventDefault();\n      alert('ОК! Повесь обработчик на кнопку или вызови нужную функцию изнутри обработчика формы');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(CompFormInputs, {\n    inputs: state,\n    handlers: {\n      handleTypeVariant,\n      handleInputs\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(CompFormSummarize, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(CompFormControls, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })))));\n}\n\nexport default CompFormContainer;","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/components/CompForm/CompFormContainer.js"],"names":["React","SecondaryLayout","PageCaptionSpacer","Typography","FormWrapper","InnerFormSpacer","CompFormInputs","CompFormSummarize","CompFormControls","Title","text","props","CompFormContainer","useState","typeVariant","long","short","inputs","username","label","value","channel_name","state","setState","handleInputs","event","inpName","target","id","inpValue","handleTypeVariant","name","checked","e","preventDefault","alert"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport SecondaryLayout from \"../_layouts/default/SecondaryLayout\";\r\nimport PageCaptionSpacer from \"../common/PageCaptionSpacer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {FormWrapper, InnerFormSpacer} from \"../common/form_components\";\r\nimport CompFormInputs from \"./CompFormInputs/CompFormInputs\";\r\nimport CompFormSummarize from \"./CompFormSummarize/CompFormSummarize\";\r\nimport CompFormControls from \"./CompFormControls/CompFormControls\";\r\n\r\nfunction Title({text, ...props}) {\r\n    return (\r\n        <Typography component=\"h1\" variant=\"h5\" align=\"center\" color=\"textPrimary\">\r\n            {text}\r\n        </Typography>\r\n    )\r\n}\r\n\r\n\r\nfunction CompFormContainer(props) {\r\n    const [state, setState] = React.useState({\r\n        typeVariant: {\r\n            long: false,\r\n            short: false,\r\n        },\r\n        inputs: {\r\n            username: {\r\n                label: \"Your nickname\",\r\n                value: \"\",\r\n            },\r\n            channel_name: {\r\n                label: \"Channel\",\r\n                value: \"\",\r\n            },\r\n        },\r\n    });\r\n\r\n\r\n    const handleInputs = event => {\r\n        const inpName = event.target.id\r\n        const inpValue = event.target.value\r\n\r\n        setState({\r\n            ...state,\r\n            inputs: {\r\n                ...state.inputs,\r\n                [inpName]: {\r\n                    ...state.inputs[inpName],\r\n                    value: inpValue\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const handleTypeVariant = name => event => {\r\n        setState({\r\n            ...state,\r\n            typeVariant: {\r\n                ...state.typeVariant,\r\n                [name]: event.target.checked,\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <SecondaryLayout>\r\n            <PageCaptionSpacer/>\r\n\r\n            <FormWrapper maxWidth=\"xl\">\r\n                <InnerFormSpacer>\r\n                    <Title text=\"Форма заказа\" />\r\n\r\n                    <form\r\n                        noValidate\r\n                        onSubmit={e => {\r\n                            e.preventDefault();\r\n                            alert('ОК! Повесь обработчик на кнопку или вызови нужную функцию изнутри обработчика формы')\r\n                        }}>\r\n                        <CompFormInputs inputs={state} handlers={{handleTypeVariant, handleInputs}}/>\r\n                        <CompFormSummarize/>\r\n                        <CompFormControls/>\r\n                    </form>\r\n\r\n                </InnerFormSpacer>\r\n            </FormWrapper>\r\n\r\n        </SecondaryLayout>\r\n    );\r\n}\r\n\r\nexport default CompFormContainer"]},"metadata":{},"sourceType":"module"}