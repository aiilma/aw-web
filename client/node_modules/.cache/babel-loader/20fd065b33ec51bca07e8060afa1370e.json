{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\components\\\\Compositions\\\\CompositionList.js\";\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport CompositionCard from \"./CompositionCard\";\nimport styled from 'styled-components';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n\n  },\n  cardContent: {\n    flexGrow: 1\n  }\n}));\nconst cards = [1, 2, 3, 4, 5, 6, 7];\n\nfunction CompCard(_ref) {\n  let props = _extends({}, _ref);\n\n  const classes = useStyles();\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.cardMedia,\n    image: \"https://source.unsplash.com/random\",\n    title: \"Image title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.cardContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Heading\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"This is a media card. You can use this section to describe the content.\")), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"View\"), React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Edit\"))));\n}\n\nconst CompListContainer = styled(Container)`\n        padding-top: ${({\n  theme\n}) => theme.spacing(8)};\n        padding-bottom: ${({\n  theme\n}) => theme.spacing(8)};\n`;\n\nfunction CompositionList(_ref2) {\n  let _ref2$compositions = _ref2.compositions,\n      compositions = _ref2$compositions === void 0 ? '' : _ref2$compositions,\n      props = _objectWithoutProperties(_ref2, [\"compositions\"]);\n\n  // const compositionNodes = compositions ?\n  //     compositions.map(compInfo => <CompositionCard key={compInfo.id} info={compInfo}/>) :\n  //     <div>Не найдено ни одной композиции...</div>\n  const compositionNodes = cards.map(card => React.createElement(CompCard, {\n    key: card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n  return React.createElement(CompListContainer, {\n    maxWidth: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, compositionNodes));\n}\n\nexport default CompositionList;","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/components/Compositions/CompositionList.js"],"names":["React","Grid","CompositionCard","styled","makeStyles","Card","CardMedia","CardContent","Typography","CardActions","Button","Container","useStyles","theme","icon","marginRight","spacing","heroButtons","marginTop","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","cards","CompCard","props","classes","CompListContainer","CompositionList","compositions","compositionNodes","map"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CompositionCard from \"./CompositionCard\";\r\nimport styled from 'styled-components'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7];\r\n\r\nfunction CompCard({...props}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid item xs={12} sm={6} md={4}>\r\n            <Card className={classes.card}>\r\n                <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image=\"https://source.unsplash.com/random\"\r\n                    title=\"Image title\"\r\n                />\r\n                <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Heading\r\n                    </Typography>\r\n                    <Typography>\r\n                        This is a media card. You can use this section to describe the content.\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        View\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        Edit\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst CompListContainer = styled(Container)`\r\n        padding-top: ${({theme}) => theme.spacing(8)};\r\n        padding-bottom: ${({theme}) => theme.spacing(8)};\r\n`\r\n\r\nfunction CompositionList({compositions = '', ...props}) {\r\n    // const compositionNodes = compositions ?\r\n    //     compositions.map(compInfo => <CompositionCard key={compInfo.id} info={compInfo}/>) :\r\n    //     <div>Не найдено ни одной композиции...</div>\r\n    const compositionNodes = cards.map(card => (\r\n        <CompCard key={card} />\r\n    ))\r\n\r\n    return (\r\n        <CompListContainer maxWidth=\"md\">\r\n            <Grid container spacing={2}>\r\n                {compositionNodes}\r\n            </Grid>\r\n        </CompListContainer>\r\n    );\r\n}\r\n\r\nexport default CompositionList"]},"metadata":{},"sourceType":"module"}