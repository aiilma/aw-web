{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { combineReducers } from \"redux\";\nimport * as types from \"./types\";\nimport RCompThumbnail from \"../../../assets/img/compositions/static.png\";\nimport RCompPreview from \"../../../assets/img/compositions/dynamic.gif\";\nexport const initCompList = {\n  compositions: [],\n  isFetching: false,\n  errors: {}\n};\n\nfunction compListReducer(state = initCompList, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case types.CLEAR_LIST:\n      return _objectSpread({}, state, {\n        compositions: [],\n        form: {},\n        errors: {}\n      });\n\n    case types.FETCH_LIST:\n      return _objectSpread({}, state, {\n        form: {},\n        isFetching: true,\n        errors: {}\n      });\n\n    case types.FETCH_LIST_COMPLETED:\n      return _objectSpread({}, state, {\n        compositions: [...payload.data.map(c => {\n          return {\n            title: c.title,\n            link: c.link_alias,\n            price: c.price,\n            thumbnail: RCompThumbnail,\n            preview: RCompPreview\n          };\n        })],\n        form: {},\n        isFetching: false,\n        errors: {}\n      });\n\n    case types.FETCH_LIST_FAILED:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        compositions: [],\n        errors: {\n          message: payload.data.message,\n          status: payload.status\n        }\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport const initCompOrderForm = {\n  form: {},\n  isFetching: false,\n  errors: {}\n};\n\nfunction compOrderFormReducer(state = initCompOrderForm, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case types.SET_COMPOSITION_FORM:\n      return _objectSpread({}, state, {\n        form: {},\n        isFetching: true,\n        errors: {}\n      });\n\n    case types.SET_COMPOSITION_FORM_COMPLETED:\n      return _objectSpread({}, state, {\n        form: {},\n        isFetching: false,\n        errors: {}\n      });\n\n    case types.SET_COMPOSITION_FORM_FAILED:\n      return _objectSpread({}, state, {\n        form: {},\n        isFetching: false,\n        errors: {\n          message: payload.data.message,\n          status: payload.status\n        }\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  list: compListReducer,\n  form: compOrderFormReducer\n});","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/compositions/reducers.js"],"names":["combineReducers","types","RCompThumbnail","RCompPreview","initCompList","compositions","isFetching","errors","compListReducer","state","type","payload","CLEAR_LIST","form","FETCH_LIST","FETCH_LIST_COMPLETED","data","map","c","title","link","link_alias","price","thumbnail","preview","FETCH_LIST_FAILED","message","status","initCompOrderForm","compOrderFormReducer","SET_COMPOSITION_FORM","SET_COMPOSITION_FORM_COMPLETED","SET_COMPOSITION_FORM_FAILED","list"],"mappings":";AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,YAAY,EAAE,EADU;AAExBC,EAAAA,UAAU,EAAE,KAFY;AAGxBC,EAAAA,MAAM,EAAE;AAHgB,CAArB;;AAMP,SAASC,eAAT,CAAyBC,KAAK,GAAGL,YAAjC,EAA+C;AAACM,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAA/C,EAAuE;AACnE,UAAQD,IAAR;AACI,SAAKT,KAAK,CAACW,UAAX;AACI,+BACOH,KADP;AAEIJ,QAAAA,YAAY,EAAE,EAFlB;AAGIQ,QAAAA,IAAI,EAAE,EAHV;AAIIN,QAAAA,MAAM,EAAE;AAJZ;;AAMJ,SAAKN,KAAK,CAACa,UAAX;AACI,+BACOL,KADP;AAEII,QAAAA,IAAI,EAAE,EAFV;AAGIP,QAAAA,UAAU,EAAE,IAHhB;AAIIC,QAAAA,MAAM,EAAE;AAJZ;;AAMJ,SAAKN,KAAK,CAACc,oBAAX;AACI,+BACON,KADP;AAEIJ,QAAAA,YAAY,EAAE,CACV,GAAGM,OAAO,CAACK,IAAR,CAAaC,GAAb,CAAiBC,CAAC,IAAI;AACrB,iBAAO;AACHC,YAAAA,KAAK,EAAED,CAAC,CAACC,KADN;AAEHC,YAAAA,IAAI,EAAEF,CAAC,CAACG,UAFL;AAGHC,YAAAA,KAAK,EAAEJ,CAAC,CAACI,KAHN;AAIHC,YAAAA,SAAS,EAAErB,cAJR;AAKHsB,YAAAA,OAAO,EAAErB;AALN,WAAP;AAOH,SARE,CADO,CAFlB;AAaIU,QAAAA,IAAI,EAAE,EAbV;AAcIP,QAAAA,UAAU,EAAE,KAdhB;AAeIC,QAAAA,MAAM,EAAE;AAfZ;;AAiBJ,SAAKN,KAAK,CAACwB,iBAAX;AACI,+BACOhB,KADP;AAEIH,QAAAA,UAAU,EAAE,KAFhB;AAGID,QAAAA,YAAY,EAAE,EAHlB;AAIIE,QAAAA,MAAM,EAAE;AACJmB,UAAAA,OAAO,EAAEf,OAAO,CAACK,IAAR,CAAaU,OADlB;AAEJC,UAAAA,MAAM,EAAEhB,OAAO,CAACgB;AAFZ;AAJZ;;AASJ;AACI,aAAOlB,KAAP;AA5CR;AA8CH;;AAED,OAAO,MAAMmB,iBAAiB,GAAG;AAC7Bf,EAAAA,IAAI,EAAE,EADuB;AAE7BP,EAAAA,UAAU,EAAE,KAFiB;AAG7BC,EAAAA,MAAM,EAAE;AAHqB,CAA1B;;AAMP,SAASsB,oBAAT,CAA8BpB,KAAK,GAAGmB,iBAAtC,EAAyD;AAAClB,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAAzD,EAAiF;AAC7E,UAAQD,IAAR;AACI,SAAKT,KAAK,CAAC6B,oBAAX;AACI,+BACOrB,KADP;AAEII,QAAAA,IAAI,EAAE,EAFV;AAGIP,QAAAA,UAAU,EAAE,IAHhB;AAIIC,QAAAA,MAAM,EAAE;AAJZ;;AAMJ,SAAKN,KAAK,CAAC8B,8BAAX;AACI,+BACOtB,KADP;AAEII,QAAAA,IAAI,EAAE,EAFV;AAGIP,QAAAA,UAAU,EAAE,KAHhB;AAIIC,QAAAA,MAAM,EAAE;AAJZ;;AAMJ,SAAKN,KAAK,CAAC+B,2BAAX;AACI,+BACOvB,KADP;AAEII,QAAAA,IAAI,EAAE,EAFV;AAGIP,QAAAA,UAAU,EAAE,KAHhB;AAIIC,QAAAA,MAAM,EAAE;AACJmB,UAAAA,OAAO,EAAEf,OAAO,CAACK,IAAR,CAAaU,OADlB;AAEJC,UAAAA,MAAM,EAAEhB,OAAO,CAACgB;AAFZ;AAJZ;;AASJ;AACI,aAAOlB,KAAP;AA1BR;AA4BH;;AAED,eAAeT,eAAe,CAAC;AAC3BiC,EAAAA,IAAI,EAAEzB,eADqB;AAE3BK,EAAAA,IAAI,EAAEgB;AAFqB,CAAD,CAA9B","sourcesContent":["import {combineReducers} from \"redux\";\r\nimport * as types from \"./types\";\r\nimport RCompThumbnail from \"../../../assets/img/compositions/static.png\";\r\nimport RCompPreview from \"../../../assets/img/compositions/dynamic.gif\";\r\n\r\nexport const initCompList = {\r\n    compositions: [],\r\n    isFetching: false,\r\n    errors: {}\r\n}\r\n\r\nfunction compListReducer(state = initCompList, {type, payload = null}) {\r\n    switch (type) {\r\n        case types.CLEAR_LIST:\r\n            return {\r\n                ...state,\r\n                compositions: [],\r\n                form: {},\r\n                errors: {},\r\n            }\r\n        case types.FETCH_LIST:\r\n            return {\r\n                ...state,\r\n                form: {},\r\n                isFetching: true,\r\n                errors: {},\r\n            }\r\n        case types.FETCH_LIST_COMPLETED:\r\n            return {\r\n                ...state,\r\n                compositions: [\r\n                    ...payload.data.map(c => {\r\n                        return {\r\n                            title: c.title,\r\n                            link: c.link_alias,\r\n                            price: c.price,\r\n                            thumbnail: RCompThumbnail,\r\n                            preview: RCompPreview,\r\n                        }\r\n                    })\r\n                ],\r\n                form: {},\r\n                isFetching: false,\r\n                errors: {}\r\n            }\r\n        case types.FETCH_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                compositions: [],\r\n                errors: {\r\n                    message: payload.data.message,\r\n                    status: payload.status\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initCompOrderForm = {\r\n    form: {},\r\n    isFetching: false,\r\n    errors: {}\r\n}\r\n\r\nfunction compOrderFormReducer(state = initCompOrderForm, {type, payload = null}) {\r\n    switch (type) {\r\n        case types.SET_COMPOSITION_FORM:\r\n            return {\r\n                ...state,\r\n                form: {},\r\n                isFetching: true,\r\n                errors: {},\r\n            }\r\n        case types.SET_COMPOSITION_FORM_COMPLETED:\r\n            return {\r\n                ...state,\r\n                form: {},\r\n                isFetching: false,\r\n                errors: {}\r\n            }\r\n        case types.SET_COMPOSITION_FORM_FAILED:\r\n            return {\r\n                ...state,\r\n                form: {},\r\n                isFetching: false,\r\n                errors: {\r\n                    message: payload.data.message,\r\n                    status: payload.status\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    list: compListReducer,\r\n    form: compOrderFormReducer\r\n})"]},"metadata":{},"sourceType":"module"}