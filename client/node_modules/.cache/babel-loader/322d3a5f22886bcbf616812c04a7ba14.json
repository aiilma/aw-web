{"ast":null,"code":"import React from'react';import{Router,Switch}from'react-router-dom';import history from\"../store/utils/history\";import{authRoutes,publicRoutes}from'./routes';import PublicRoute from'./Public';import PrivateRoute from'./Private';var Routes=function Routes(){return React.createElement(Router,{history:history},React.createElement(Switch,null,authRoutes.map(function(route,i){if(route.auth){return React.createElement(PrivateRoute,Object.assign({key:i},route));}else{return React.createElement(PublicRoute,Object.assign({key:i},route));}}),publicRoutes.map(function(route,i){return React.createElement(PublicRoute,Object.assign({key:i},route));})));};export default Routes;","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/routes/index.js"],"names":["React","Router","Switch","history","authRoutes","publicRoutes","PublicRoute","PrivateRoute","Routes","map","route","i","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACIC,MADJ,CAEIC,MAFJ,KAGO,kBAHP,CAIA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CAEA,OAAQC,UAAR,CAAoBC,YAApB,KAAuC,UAAvC,CACA,MAAOC,CAAAA,WAAP,KAAwB,UAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,WAAzB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SACX,qBAAC,MAAD,EAAQ,OAAO,CAAEL,OAAjB,EACI,oBAAC,MAAD,MACKC,UAAU,CAACK,GAAX,CAAe,SAACC,KAAD,CAAQC,CAAR,CAAc,CAC1B,GAAID,KAAK,CAACE,IAAV,CAAgB,CACZ,MAAO,qBAAC,YAAD,gBAAc,GAAG,CAAED,CAAnB,EAA0BD,KAA1B,EAAP,CACH,CAFD,IAEO,CACH,MAAO,qBAAC,WAAD,gBAAa,GAAG,CAAEC,CAAlB,EAAyBD,KAAzB,EAAP,CACH,CACJ,CANA,CADL,CAQKL,YAAY,CAACI,GAAb,CAAiB,SAACC,KAAD,CAAQC,CAAR,CAAc,CAC5B,MAAO,qBAAC,WAAD,gBAAa,GAAG,CAAEA,CAAlB,EAAyBD,KAAzB,EAAP,CACH,CAFA,CARL,CADJ,CADW,EAAf,CAiBA,cAAeF,CAAAA,MAAf","sourcesContent":["import React from 'react'\r\nimport {\r\n    Router,\r\n    Switch\r\n} from 'react-router-dom'\r\nimport history from \"../store/utils/history\";\r\n\r\nimport {authRoutes, publicRoutes} from './routes'\r\nimport PublicRoute from './Public'\r\nimport PrivateRoute from './Private'\r\n\r\nconst Routes = () => (\r\n    <Router history={history}>\r\n        <Switch>\r\n            {authRoutes.map((route, i) => {\r\n                if (route.auth) {\r\n                    return <PrivateRoute key={i} {...route}/>\r\n                } else {\r\n                    return <PublicRoute key={i} {...route}/>\r\n                }\r\n            })}\r\n            {publicRoutes.map((route, i) => {\r\n                return <PublicRoute key={i} {...route}/>\r\n            })}\r\n        </Switch>\r\n    </Router>\r\n);\r\n\r\nexport default Routes;"]},"metadata":{},"sourceType":"module"}