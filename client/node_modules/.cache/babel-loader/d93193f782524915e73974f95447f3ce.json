{"ast":null,"code":"import * as types from \"./types\";\nimport Http from '../../utils/Http';\nconst user = {\n  user_id: null,\n  steamid: null,\n  nickname: null,\n  avatar: null,\n  balance: null,\n  group: null\n};\nconst initialState = {\n  isAuthenticated: false,\n  token: null,\n  user\n};\nexport default function authReducer(state = initialState, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case types.AUTH_LOGIN:\n      return authLogin(state, payload);\n\n    case types.AUTH_CHECK:\n      return checkAuth(state);\n\n    case types.AUTH_LOGOUT:\n      return logout(state);\n\n    default:\n      return state;\n  }\n}\n;\n\nconst authLogin = (state, payload) => {\n  const jwtToken = payload.token;\n  const user = payload.user[0];\n  localStorage.setItem('jwt_token', jwtToken);\n  Http.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\n  state = Object.assign({}, state, {\n    isAuthenticated: true,\n    user\n  });\n  return state;\n};\n\nconst checkAuth = state => {\n  state = Object.assign({}, state, {\n    isAuthenticated: !!localStorage.getItem('jwt_token')\n  });\n\n  if (state.isAuthenticated) {\n    Http.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\n  }\n\n  return state;\n};\n\nconst logout = state => {\n  localStorage.removeItem('jwt_token');\n  state = Object.assign({}, state, {\n    isAuthenticated: false,\n    user\n  });\n  return state;\n};","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/reducers.js"],"names":["types","Http","user","user_id","steamid","nickname","avatar","balance","group","initialState","isAuthenticated","token","authReducer","state","type","payload","AUTH_LOGIN","authLogin","AUTH_CHECK","checkAuth","AUTH_LOGOUT","logout","jwtToken","localStorage","setItem","defaults","headers","common","Object","assign","getItem","removeItem"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE,IADA;AAETC,EAAAA,OAAO,EAAE,IAFA;AAGTC,EAAAA,QAAQ,EAAE,IAHD;AAITC,EAAAA,MAAM,EAAE,IAJC;AAKTC,EAAAA,OAAO,EAAE,IALA;AAMTC,EAAAA,KAAK,EAAE;AANE,CAAb;AASA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBT,EAAAA;AAHiB,CAArB;AAMA,eAAe,SAASU,WAAT,CAAqBC,KAAK,GAAGJ,YAA7B,EAA2C;AAACK,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAA3C,EAAmE;AAC9E,UAAOD,IAAP;AACI,SAAKd,KAAK,CAACgB,UAAX;AACI,aAAOC,SAAS,CAACJ,KAAD,EAAOE,OAAP,CAAhB;;AACJ,SAAKf,KAAK,CAACkB,UAAX;AACI,aAAOC,SAAS,CAACN,KAAD,CAAhB;;AACJ,SAAKb,KAAK,CAACoB,WAAX;AACI,aAAOC,MAAM,CAACR,KAAD,CAAb;;AACJ;AACI,aAAOA,KAAP;AARR;AAUH;AAAA;;AAED,MAAMI,SAAS,GAAG,CAACJ,KAAD,EAAOE,OAAP,KAAmB;AACjC,QAAMO,QAAQ,GAAGP,OAAO,CAACJ,KAAzB;AACA,QAAMT,IAAI,GAAGa,OAAO,CAACb,IAAR,CAAa,CAAb,CAAb;AACAqB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCF,QAAjC;AACArB,EAAAA,IAAI,CAACwB,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,eAA7B,IAAiD,UAASL,QAAS,EAAnE;AACAT,EAAAA,KAAK,GAAGe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,KAAlB,EAAyB;AAC7BH,IAAAA,eAAe,EAAE,IADY;AAE7BR,IAAAA;AAF6B,GAAzB,CAAR;AAIA,SAAOW,KAAP;AAEH,CAXD;;AAaA,MAAMM,SAAS,GAAIN,KAAD,IAAU;AACxBA,EAAAA,KAAK,GAAEe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBhB,KAAjB,EAAuB;AAC1BH,IAAAA,eAAe,EAAG,CAAC,CAACa,YAAY,CAACO,OAAb,CAAqB,WAArB;AADM,GAAvB,CAAP;;AAGA,MAAGjB,KAAK,CAACH,eAAT,EAAyB;AACrBT,IAAAA,IAAI,CAACwB,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,eAA7B,IAAiD,UAASJ,YAAY,CAACO,OAAb,CAAqB,WAArB,CAAkC,EAA5F;AACH;;AACD,SAAOjB,KAAP;AACH,CARD;;AAUA,MAAMQ,MAAM,GAAIR,KAAD,IAAW;AACtBU,EAAAA,YAAY,CAACQ,UAAb,CAAwB,WAAxB;AACAlB,EAAAA,KAAK,GAAGe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBhB,KAAjB,EAAuB;AAC3BH,IAAAA,eAAe,EAAE,KADU;AAE3BR,IAAAA;AAF2B,GAAvB,CAAR;AAIA,SAAOW,KAAP;AACH,CAPD","sourcesContent":["import * as types from \"./types\";\r\nimport Http from '../../utils/Http'\r\n\r\nconst user = {\r\n    user_id: null,\r\n    steamid: null,\r\n    nickname: null,\r\n    avatar: null,\r\n    balance: null,\r\n    group: null,\r\n};\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    token: null,\r\n    user\r\n};\r\n\r\nexport default function authReducer(state = initialState, {type, payload = null}) {\r\n    switch(type){\r\n        case types.AUTH_LOGIN:\r\n            return authLogin(state,payload);\r\n        case types.AUTH_CHECK:\r\n            return checkAuth(state);\r\n        case types.AUTH_LOGOUT:\r\n            return logout(state);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst authLogin = (state,payload) => {\r\n    const jwtToken = payload.token;\r\n    const user = payload.user[0];\r\n    localStorage.setItem('jwt_token',jwtToken);\r\n    Http.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\r\n    state = Object.assign({}, state, {\r\n        isAuthenticated: true,\r\n        user\r\n    });\r\n    return state;\r\n\r\n};\r\n\r\nconst checkAuth = (state) =>{\r\n    state =Object.assign({},state,{\r\n        isAuthenticated : !!localStorage.getItem('jwt_token'),\r\n    });\r\n    if(state.isAuthenticated){\r\n        Http.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\r\n    }\r\n    return state;\r\n};\r\n\r\nconst logout = (state) => {\r\n    localStorage.removeItem('jwt_token');\r\n    state = Object.assign({},state,{\r\n        isAuthenticated: false,\r\n        user\r\n    });\r\n    return state;\r\n};"]},"metadata":{},"sourceType":"module"}