{"ast":null,"code":"import axios from'axios';axios.defaults.headers.common[\"X-Requested-With\"]=\"XMLHttpRequest\";axios.defaults.withCredentials=true;axios.defaults.baseURL=process.env.REACT_APP_API;var fetch=function fetch(url,method,body){var options={method:method,headers:requestHeaders()};// console.log(body)\nif(method===\"POST\"){return axios.post(url,JSON.stringify(body),options).then(function(res){return parseStatus(res.status,res.data);},function(err){return parseStatus(err.response.status,err.response.data);}).catch(function(err){return Promise.reject(err);});}if(method===\"GET\"){return axios.get(url,options).then(function(res){return parseStatus(res.status,res.data);},function(err){return parseStatus(err.response.status,err.response.data);}).catch(function(err){return Promise.reject(err);});}};export default fetch;function parseStatus(status,res){return new Promise(function(resolve,reject){if(status>=200&&status<300){resolve(res);}else{reject({status:status,message:res.message});}});}function requestHeaders(){var headers={\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"};// let token = document.head.querySelector('meta[name=\"csrf-token\"]');\n// if (!!token) {\n//     headers['X-CSRF-TOKEN'] = token.content;\n// }\nreturn headers;}","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/utils/fetch.js"],"names":["axios","defaults","headers","common","withCredentials","baseURL","process","env","REACT_APP_API","fetch","url","method","body","options","requestHeaders","post","JSON","stringify","then","res","parseStatus","status","data","err","response","catch","Promise","reject","get","resolve","message"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,kBAA9B,EAAoD,gBAApD,CACAH,KAAK,CAACC,QAAN,CAAeG,eAAf,CAAiC,IAAjC,CACAJ,KAAK,CAACC,QAAN,CAAeI,OAAf,CAAyBC,OAAO,CAACC,GAAR,CAAYC,aAArC,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,GAAD,CAAMC,MAAN,CAAcC,IAAd,CAAuB,CAEjC,GAAMC,CAAAA,OAAO,CAAG,CACZF,MAAM,CAANA,MADY,CAEZT,OAAO,CAAEY,cAAc,EAFX,CAAhB,CAIA;AAEA,GAAIH,MAAM,GAAK,MAAf,CAAuB,CACnB,MAAOX,CAAAA,KAAK,CAACe,IAAN,CAAWL,GAAX,CAAgBM,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAhB,CAAsCC,OAAtC,EACFK,IADE,CACG,SAAAC,GAAG,QAAIC,CAAAA,WAAW,CAACD,GAAG,CAACE,MAAL,CAAaF,GAAG,CAACG,IAAjB,CAAf,EADN,CAC6C,SAAAC,GAAG,QAAIH,CAAAA,WAAW,CAACG,GAAG,CAACC,QAAJ,CAAaH,MAAd,CAAsBE,GAAG,CAACC,QAAJ,CAAaF,IAAnC,CAAf,EADhD,EAEFG,KAFE,CAEI,SAACF,GAAD,QAASG,CAAAA,OAAO,CAACC,MAAR,CAAeJ,GAAf,CAAT,EAFJ,CAAP,CAGH,CACD,GAAIZ,MAAM,GAAK,KAAf,CAAsB,CAClB,MAAOX,CAAAA,KAAK,CAAC4B,GAAN,CAAUlB,GAAV,CAAeG,OAAf,EACFK,IADE,CACG,SAAAC,GAAG,QAAIC,CAAAA,WAAW,CAACD,GAAG,CAACE,MAAL,CAAaF,GAAG,CAACG,IAAjB,CAAf,EADN,CAC6C,SAAAC,GAAG,QAAIH,CAAAA,WAAW,CAACG,GAAG,CAACC,QAAJ,CAAaH,MAAd,CAAsBE,GAAG,CAACC,QAAJ,CAAaF,IAAnC,CAAf,EADhD,EAEFG,KAFE,CAEI,SAACF,GAAD,QAASG,CAAAA,OAAO,CAACC,MAAR,CAAeJ,GAAf,CAAT,EAFJ,CAAP,CAGH,CACJ,CAlBD,CAoBA,cAAed,CAAAA,KAAf,CAEA,QAASW,CAAAA,WAAT,CAAqBC,MAArB,CAA6BF,GAA7B,CAAkC,CAC9B,MAAO,IAAIO,CAAAA,OAAJ,CAAY,SAACG,OAAD,CAAUF,MAAV,CAAqB,CACpC,GAAIN,MAAM,EAAI,GAAV,EAAiBA,MAAM,CAAG,GAA9B,CAAmC,CAC/BQ,OAAO,CAACV,GAAD,CAAP,CACH,CAFD,IAEO,CACHQ,MAAM,CAAC,CAACN,MAAM,CAANA,MAAD,CAASS,OAAO,CAAEX,GAAG,CAACW,OAAtB,CAAD,CAAN,CACH,CACJ,CANM,CAAP,CAOH,CAED,QAAShB,CAAAA,cAAT,EAA0B,CACtB,GAAMZ,CAAAA,OAAO,CAAG,CACZ,SAAU,kBADE,CAEZ,eAAgB,kBAFJ,CAAhB,CAKA;AACA;AACA;AACA;AAEA,MAAOA,CAAAA,OAAP,CACH","sourcesContent":["import axios from 'axios'\r\n\r\naxios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\r\naxios.defaults.withCredentials = true;\r\naxios.defaults.baseURL = process.env.REACT_APP_API;\r\n\r\nconst fetch = (url, method, body) => {\r\n\r\n    const options = {\r\n        method,\r\n        headers: requestHeaders(),\r\n    };\r\n    // console.log(body)\r\n\r\n    if (method === \"POST\") {\r\n        return axios.post(url, JSON.stringify(body), options)\r\n            .then(res => parseStatus(res.status, res.data), err => parseStatus(err.response.status, err.response.data))\r\n            .catch((err) => Promise.reject(err))\r\n    }\r\n    if (method === \"GET\") {\r\n        return axios.get(url, options)\r\n            .then(res => parseStatus(res.status, res.data), err => parseStatus(err.response.status, err.response.data))\r\n            .catch((err) => Promise.reject(err))\r\n    }\r\n};\r\n\r\nexport default fetch\r\n\r\nfunction parseStatus(status, res) {\r\n    return new Promise((resolve, reject) => {\r\n        if (status >= 200 && status < 300) {\r\n            resolve(res);\r\n        } else {\r\n            reject({status, message: res.message});\r\n        }\r\n    });\r\n}\r\n\r\nfunction requestHeaders() {\r\n    const headers = {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n\r\n    // let token = document.head.querySelector('meta[name=\"csrf-token\"]');\r\n    // if (!!token) {\r\n    //     headers['X-CSRF-TOKEN'] = token.content;\r\n    // }\r\n\r\n    return headers\r\n}"]},"metadata":{},"sourceType":"module"}