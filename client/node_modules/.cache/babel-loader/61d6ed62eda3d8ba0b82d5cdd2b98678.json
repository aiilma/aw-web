{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\CompOrderForm\\\\Container.js\";\nimport React, { Component } from 'react';\nimport { withFormik } from 'formik';\nimport { connect } from \"react-redux\";\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\nimport { Spacer } from \"../../common/layout\";\nimport { FormWrapper, InnerFormSpacer, PlaceholderList, Title, TypeVariants } from \"../../common/form_components\";\nimport Grid from \"@material-ui/core/Grid\";\nimport OrderFormSummarize from \"./Summarize/Summarize\";\nimport OrderFormControls from \"./Controls/Controls\";\nimport { compose } from \"redux\";\nimport { checkOnMax, checkOnMin, checkOnRequired } from \"../../../store/utils/form_helpers\";\nimport { fetchCompForm } from \"../../../store/ducks/comp-order-form/actions\";\n\nconst OrderFormWrapper = (_ref) => {\n  let _ref$caption = _ref.caption,\n      caption = _ref$caption === void 0 ? \"Безымянный\" : _ref$caption,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"xl\" : _ref$size,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"caption\", \"size\", \"children\"]);\n\n  return React.createElement(SecondaryLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(FormWrapper, {\n    maxWidth: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(InnerFormSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Title, {\n    text: caption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, children))));\n};\n\nclass OrderForm extends Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          fetchCompForm = _this$props.fetchCompForm,\n          orderFormData = _this$props.orderFormData,\n          match = _this$props.match;\n    const alias = match.params.alias;\n    console.log(fetchCompForm(alias));\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          values = _this$props2.values,\n          touched = _this$props2.touched,\n          errors = _this$props2.errors,\n          _this$props2$orderFor = _this$props2.orderFormData,\n          typeVariant = _this$props2$orderFor.typeVariant,\n          ph = _this$props2$orderFor.ph,\n          price = _this$props2$orderFor.price,\n          title = _this$props2$orderFor.title,\n          handleSubmit = _this$props2.handleSubmit,\n          handleReset = _this$props2.handleReset;\n    return React.createElement(OrderFormWrapper, {\n      caption: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\",\n      handleSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(TypeVariants, {\n      variant: typeVariant,\n      values: values,\n      touched: touched,\n      errors: errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), Object.keys(ph).length > 0 && React.createElement(PlaceholderList, {\n      inputs: ph,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(OrderFormSummarize, {\n      price: price,\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(OrderFormControls, {\n      onReset: handleReset,\n      onBack: () => {\n        this.props.history.goBack();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst getDefaultValues = (_ref2) => {\n  let typeVariant = _ref2.typeVariant,\n      ph = _ref2.ph,\n      state = _objectWithoutProperties(_ref2, [\"typeVariant\", \"ph\"]);\n\n  let values = {\n    typeVariant: typeVariant === 0 ? '' : typeVariant === 1 ? \"long\" : \"short\"\n  }; // inputs\n\n  Object.keys(ph).forEach(keyName => {\n    values[keyName] = '';\n  });\n  return values;\n};\n\nconst mapStateToProps = state => ({\n  orderFormData: state.compOrderForm\n});\n\nexport default compose(connect(mapStateToProps, {\n  fetchCompForm\n}), withFormik({\n  mapPropsToValues: props => getDefaultValues(props.orderFormData),\n  // Custom sync validation\n  validate: (values, _ref3) => {\n    let _ref3$orderFormData = _ref3.orderFormData,\n        ph = _ref3$orderFormData.ph,\n        typeVariant = _ref3$orderFormData.typeVariant,\n        props = _objectWithoutProperties(_ref3, [\"orderFormData\"]);\n\n    const errors = {};\n    const rules = {};\n    Object.keys(ph).forEach(keyName => {\n      rules[keyName] = ph[keyName].rules;\n    });\n    if (typeVariant === 0 && !values.typeVariant) errors[\"typeVariant\"] = \"Required\";\n    Object.keys(rules).forEach(keyName => {\n      if (/required/ig.test(rules[keyName]) && !checkOnRequired(values[keyName])) {\n        errors[keyName] = 'Required';\n      }\n\n      if (/min:\\d{1,2}/ig.test(rules[keyName])) {\n        let rule = rules[keyName].match(/min:\\d{1,2}/ig)[0];\n        let limit = +rule.match(/\\d+/ig)[0];\n\n        if (!checkOnMin(values[keyName], limit)) {\n          errors[keyName] = `Minimum length is ${limit}`;\n        }\n      }\n\n      if (/max:\\d{1,2}/ig.test(rules[keyName])) {\n        let rule = rules[keyName].match(/max:\\d{1,2}/ig)[0];\n        let limit = +rule.match(/\\d+/ig)[0];\n\n        if (!checkOnMax(values[keyName], limit)) {\n          errors[keyName] = `Maximum length is ${limit}`;\n        }\n      }\n    });\n    return errors;\n  },\n  handleSubmit: (values, _ref4) => {\n    let setSubmitting = _ref4.setSubmitting,\n        props = _objectWithoutProperties(_ref4, [\"setSubmitting\"]);\n\n    setSubmitting(true);\n    console.log(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n    props.props.history.push(`${props.props.location.pathname}/success`);\n  },\n  displayName: 'OrderForm'\n}))(OrderForm);","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/CompOrderForm/Container.js"],"names":["React","Component","withFormik","connect","SecondaryLayout","Spacer","FormWrapper","InnerFormSpacer","PlaceholderList","Title","TypeVariants","Grid","OrderFormSummarize","OrderFormControls","compose","checkOnMax","checkOnMin","checkOnRequired","fetchCompForm","OrderFormWrapper","caption","size","children","props","handleSubmit","OrderForm","componentDidMount","orderFormData","match","alias","params","console","log","render","values","touched","errors","typeVariant","ph","price","title","handleReset","Object","keys","length","history","goBack","getDefaultValues","state","forEach","keyName","mapStateToProps","compOrderForm","mapPropsToValues","validate","rules","test","rule","limit","setSubmitting","JSON","stringify","push","location","pathname","displayName"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {withFormik} from 'formik';\r\nimport {connect} from \"react-redux\";\r\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\r\nimport {Spacer} from \"../../common/layout\";\r\nimport {\r\n    FormWrapper,\r\n    InnerFormSpacer,\r\n    PlaceholderList,\r\n    Title,\r\n    TypeVariants\r\n} from \"../../common/form_components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport OrderFormSummarize from \"./Summarize/Summarize\";\r\nimport OrderFormControls from \"./Controls/Controls\";\r\nimport {compose} from \"redux\";\r\nimport {checkOnMax, checkOnMin, checkOnRequired} from \"../../../store/utils/form_helpers\";\r\nimport {fetchCompForm} from \"../../../store/ducks/comp-order-form/actions\";\r\n\r\nconst OrderFormWrapper = ({caption = \"Безымянный\", size = \"xl\", children, ...props}) => {\r\n    return (\r\n        <SecondaryLayout>\r\n            <Spacer/>\r\n            <FormWrapper maxWidth={size}>\r\n                <InnerFormSpacer>\r\n                    <Title text={caption}/>\r\n                    <form onSubmit={props.handleSubmit} noValidate>\r\n                        {children}\r\n                    </form>\r\n                </InnerFormSpacer>\r\n            </FormWrapper>\r\n        </SecondaryLayout>\r\n    )\r\n}\r\n\r\nclass OrderForm extends Component {\r\n    componentDidMount() {\r\n        const {fetchCompForm, orderFormData, match} = this.props\r\n        const alias = match.params.alias\r\n        console.log(fetchCompForm((alias)))\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            values, touched, errors, orderFormData: {typeVariant, ph, price, title}, handleSubmit, handleReset\r\n        } = this.props;\r\n\r\n        return (\r\n            <OrderFormWrapper caption=\"Форма заказа\" handleSubmit={handleSubmit}>\r\n                <Grid container>\r\n\r\n                    {/*type varient*/}\r\n                    <TypeVariants\r\n                        variant={typeVariant} values={values}\r\n                        touched={touched} errors={errors}\r\n                    />\r\n                    {/*inputs*/}\r\n                    {Object.keys(ph).length > 0 && (\r\n                        <PlaceholderList inputs={ph}/>\r\n                    )}\r\n\r\n                </Grid>\r\n                <OrderFormSummarize price={price} title={title}/>\r\n                <OrderFormControls onReset={handleReset} onBack={() => {\r\n                    this.props.history.goBack()\r\n                }}/>\r\n            </OrderFormWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst getDefaultValues = ({typeVariant, ph, ...state}) => {\r\n    let values = {\r\n        typeVariant: typeVariant === 0 ? '' : typeVariant === 1 ? \"long\" : \"short\"\r\n    }\r\n\r\n    // inputs\r\n    Object.keys(ph).forEach(keyName => {\r\n        values[keyName] = ''\r\n    })\r\n\r\n    return values\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    orderFormData: state.compOrderForm\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {fetchCompForm}),\r\n    withFormik({\r\n        mapPropsToValues: (props) => (getDefaultValues(props.orderFormData)),\r\n\r\n        // Custom sync validation\r\n        validate: (values, {orderFormData: {ph, typeVariant}, ...props}) => {\r\n            const errors = {};\r\n            const rules = {}\r\n\r\n            Object.keys(ph).forEach(keyName => {\r\n                rules[keyName] = ph[keyName].rules\r\n            })\r\n\r\n            if (typeVariant === 0 && !values.typeVariant) errors[\"typeVariant\"] = \"Required\"\r\n\r\n            Object.keys(rules).forEach(keyName => {\r\n                if (/required/ig.test(rules[keyName]) && !checkOnRequired(values[keyName])) {\r\n                    errors[keyName] = 'Required'\r\n                }\r\n                if (/min:\\d{1,2}/ig.test(rules[keyName])) {\r\n                    let rule = rules[keyName].match(/min:\\d{1,2}/ig)[0]\r\n                    let limit = +rule.match(/\\d+/ig)[0]\r\n                    if (!checkOnMin(values[keyName], limit)) {\r\n                        errors[keyName] = `Minimum length is ${limit}`\r\n                    }\r\n                }\r\n                if (/max:\\d{1,2}/ig.test(rules[keyName])) {\r\n                    let rule = rules[keyName].match(/max:\\d{1,2}/ig)[0]\r\n                    let limit = +rule.match(/\\d+/ig)[0]\r\n                    if (!checkOnMax(values[keyName], limit)) {\r\n                        errors[keyName] = `Maximum length is ${limit}`\r\n                    }\r\n                }\r\n            })\r\n\r\n            return errors;\r\n        },\r\n\r\n        handleSubmit: (values, {setSubmitting, ...props}) => {\r\n            setSubmitting(true);\r\n            console.log(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n            props.props.history.push(`${props.props.location.pathname}/success`)\r\n        },\r\n\r\n        displayName: 'OrderForm',\r\n    })\r\n)(OrderForm)"]},"metadata":{},"sourceType":"module"}