{"ast":null,"code":"import { authLogin, authLogout, authMe } from \"./actions\";\nimport { fetch } from \"../../utils\";\n\nconst login = response => dispatch => {\n  return new Promise((resolve, reject) => {\n    if (response.success) {\n      const creds = response.data;\n      gonsol; // dispatch(authMe(creds));\n\n      return resolve();\n    } else {\n      return reject();\n    }\n  });\n};\n\nconst logout = () => dispatch => {\n  return fetch('/api/auth/logout', \"POST\").then(() => {\n    dispatch(authLogout());\n  });\n};\n\nconst me = () => dispatch => {\n  return fetch('/api/auth/me', \"POST\").then(user => {\n    console.log('b');\n    dispatch(authMe(user));\n  }).catch(err => {\n    console.error(err);\n  });\n};\n\nconst refresh = (token = null) => (dispatch, getState) => {\n  if (!!token && !getState().auth.isAuthenticated) {\n    // если данные о пользователе в стейте, тогда запрос за новым токеном (в теле - старый),\n    return fetch('/api/auth/refresh', \"POST\").then(() => {\n      return me();\n    }).catch(err => {\n      console.error(err);\n    });\n  } else {\n    return logout();\n  }\n};\n\nexport { login, logout, me, refresh };","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/operations.js"],"names":["authLogin","authLogout","authMe","fetch","login","response","dispatch","Promise","resolve","reject","success","creds","data","gonsol","logout","then","me","user","console","log","catch","err","error","refresh","token","getState","auth","isAuthenticated"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA4C,WAA5C;AACA,SAAQC,KAAR,QAAoB,aAApB;;AAEA,MAAMC,KAAK,GAAGC,QAAQ,IAAIC,QAAQ,IAAI;AAClC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAIJ,QAAQ,CAACK,OAAb,EAAsB;AAAA,YACLC,KADK,GACIN,QADJ,CACXO,IADW;AAElBC,MAAAA,MAAM,CAFY,CAGlB;;AACA,aAAOL,OAAO,EAAd;AACH,KALD,MAKO;AACH,aAAOC,MAAM,EAAb;AACH;AACJ,GATM,CAAP;AAUH,CAXD;;AAaA,MAAMK,MAAM,GAAG,MAAMR,QAAQ,IAAI;AAC7B,SAAOH,KAAK,CAAC,kBAAD,EAAqB,MAArB,CAAL,CAAkCY,IAAlC,CAAuC,MAAM;AAChDT,IAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACH,GAFM,CAAP;AAGH,CAJD;;AAMA,MAAMe,EAAE,GAAG,MAAMV,QAAQ,IAAI;AACzB,SAAOH,KAAK,CAAC,cAAD,EAAiB,MAAjB,CAAL,CACFY,IADE,CACIE,IAAD,IAAU;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAb,IAAAA,QAAQ,CAACJ,MAAM,CAACe,IAAD,CAAP,CAAR;AACH,GAJE,EAKFG,KALE,CAKIC,GAAG,IAAI;AACVH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACH,GAPE,CAAP;AAQH,CATD;;AAWA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAG,IAAT,KAAkB,CAAClB,QAAD,EAAWmB,QAAX,KAAwB;AACtD,MAAI,CAAC,CAACD,KAAF,IAAW,CAACC,QAAQ,GAAGC,IAAX,CAAgBC,eAAhC,EAAiD;AAC7C;AACA,WAAOxB,KAAK,CAAC,mBAAD,EAAsB,MAAtB,CAAL,CACFY,IADE,CACG,MAAM;AACR,aAAOC,EAAE,EAAT;AACH,KAHE,EAIFI,KAJE,CAIIC,GAAG,IAAI;AACVH,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACH,KANE,CAAP;AAOH,GATD,MASO;AACH,WAAOP,MAAM,EAAb;AACH;AACJ,CAbD;;AAeA,SACIV,KADJ,EACWU,MADX,EACmBE,EADnB,EACuBO,OADvB","sourcesContent":["import {authLogin, authLogout, authMe} from \"./actions\";\r\nimport {fetch} from \"../../utils\";\r\n\r\nconst login = response => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        if (response.success) {\r\n            const {data: creds} = response\r\n            gonsol\r\n            // dispatch(authMe(creds));\r\n            return resolve()\r\n        } else {\r\n            return reject()\r\n        }\r\n    })\r\n}\r\n\r\nconst logout = () => dispatch => {\r\n    return fetch('/api/auth/logout', \"POST\").then(() => {\r\n        dispatch(authLogout())\r\n    })\r\n}\r\n\r\nconst me = () => dispatch => {\r\n    return fetch('/api/auth/me', \"POST\")\r\n        .then((user) => {\r\n            console.log('b')\r\n            dispatch(authMe(user))\r\n        })\r\n        .catch(err => {\r\n            console.error(err)\r\n        })\r\n}\r\n\r\nconst refresh = (token = null) => (dispatch, getState) => {\r\n    if (!!token && !getState().auth.isAuthenticated) {\r\n        // если данные о пользователе в стейте, тогда запрос за новым токеном (в теле - старый),\r\n        return fetch('/api/auth/refresh', \"POST\")\r\n            .then(() => {\r\n                return me()\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n            })\r\n    } else {\r\n        return logout()\r\n    }\r\n}\r\n\r\nexport {\r\n    login, logout, me, refresh\r\n}"]},"metadata":{},"sourceType":"module"}