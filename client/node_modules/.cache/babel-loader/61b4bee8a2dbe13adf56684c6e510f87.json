{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\Compositions\\\\Pager.js\";\nimport React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles({\n  ul: {\n    listStyle: 'none',\n    padding: 0,\n    margin: 0,\n    display: 'flex'\n  }\n});\nexport default function UsePagination() {\n  const classes = useStyles();\n\n  const _usePagination = usePagination({\n    count: 10\n  }),\n        items = _usePagination.items;\n\n  return React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: classes.ul,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, items.map((_ref, index) => {\n    let page = _ref.page,\n        type = _ref.type,\n        selected = _ref.selected,\n        item = _objectWithoutProperties(_ref, [\"page\", \"type\", \"selected\"]);\n\n    let children;\n\n    if (type === 'start-ellipsis' || type === 'end-ellipsis') {\n      children = '…';\n    } else if (type === 'page') {\n      children = React.createElement(\"button\", Object.assign({\n        type: \"button\",\n        style: {\n          fontWeight: selected ? 'bold' : null\n        }\n      }, item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), page);\n    } else {\n      children = React.createElement(\"button\", Object.assign({\n        type: \"button\"\n      }, item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), type);\n    }\n\n    return React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, children);\n  })));\n}","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/Compositions/Pager.js"],"names":["React","makeStyles","useStyles","ul","listStyle","padding","margin","display","UsePagination","classes","usePagination","count","items","map","index","page","type","selected","item","children","fontWeight"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AACzBE,EAAAA,EAAE,EAAE;AACAC,IAAAA,SAAS,EAAE,MADX;AAEAC,IAAAA,OAAO,EAAE,CAFT;AAGAC,IAAAA,MAAM,EAAE,CAHR;AAIAC,IAAAA,OAAO,EAAE;AAJT;AADqB,CAAD,CAA5B;AASA,eAAe,SAASC,aAAT,GAAyB;AACpC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;;AADoC,yBAEpBQ,aAAa,CAAC;AAC1BC,IAAAA,KAAK,EAAE;AADmB,GAAD,CAFO;AAAA,QAE7BC,KAF6B,kBAE7BA,KAF6B;;AAMpC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAEH,OAAO,CAACN,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,KAAK,CAACC,GAAN,CAAU,OAAkCC,KAAlC,KAA4C;AAAA,QAA1CC,IAA0C,QAA1CA,IAA0C;AAAA,QAApCC,IAAoC,QAApCA,IAAoC;AAAA,QAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,QAAjBC,IAAiB;;AACnD,QAAIC,QAAJ;;AAEA,QAAIH,IAAI,KAAK,gBAAT,IAA6BA,IAAI,KAAK,cAA1C,EAA0D;AACtDG,MAAAA,QAAQ,GAAG,GAAX;AACH,KAFD,MAEO,IAAIH,IAAI,KAAK,MAAb,EAAqB;AACxBG,MAAAA,QAAQ,GACJ;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAEH,QAAQ,GAAG,MAAH,GAAY;AAAjC;AAA7B,SAAyEC,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACKH,IADL,CADJ;AAKH,KANM,MAMA;AACHI,MAAAA,QAAQ,GACJ;AAAQ,QAAA,IAAI,EAAC;AAAb,SAA0BD,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACKF,IADL,CADJ;AAKH;;AAED,WAAO;AAAI,MAAA,GAAG,EAAEF,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBK,QAAjB,CAAP;AACH,GApBA,CADL,CADJ,CADJ;AA2BH","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    ul: {\r\n        listStyle: 'none',\r\n        padding: 0,\r\n        margin: 0,\r\n        display: 'flex',\r\n    },\r\n});\r\n\r\nexport default function UsePagination() {\r\n    const classes = useStyles();\r\n    const {items} = usePagination({\r\n        count: 10,\r\n    });\r\n\r\n    return (\r\n        <nav>\r\n            <ul className={classes.ul}>\r\n                {items.map(({page, type, selected, ...item}, index) => {\r\n                    let children;\r\n\r\n                    if (type === 'start-ellipsis' || type === 'end-ellipsis') {\r\n                        children = '…';\r\n                    } else if (type === 'page') {\r\n                        children = (\r\n                            <button type=\"button\" style={{fontWeight: selected ? 'bold' : null}} {...item}>\r\n                                {page}\r\n                            </button>\r\n                        );\r\n                    } else {\r\n                        children = (\r\n                            <button type=\"button\" {...item}>\r\n                                {type}\r\n                            </button>\r\n                        );\r\n                    }\r\n\r\n                    return <li key={index}>{children}</li>;\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}