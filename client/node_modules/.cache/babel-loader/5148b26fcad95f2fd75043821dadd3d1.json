{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\routes\\\\Private.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { me } from \"../store/ducks/auth/operations\";\nimport { connect } from \"react-redux\";\nimport UserApi from \"../store/utils/UserApi\";\nimport { withSnackbar } from \"notistack\"; // import SecondaryLayout from \"../views/layout/SecondaryLayout\";\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  // React.useEffect(() => {\n  //     rest.me()\n  //         .then(data => {\n  //             setLoggedIn(data)})\n  //         .catch(err => setLoggedIn(err));\n  //     // eslint-disable-next-line\n  // }, []);\n  // if (!loggedIn) {\n  //     return null;\n  // }\n  // console.log(loggedIn.id)\n  if (!UserApi.isAuthenticated) {\n    rest.enqueueSnackbar('You must be logged in.', {\n      variant: 'error',\n      autoHideDuration: 5000\n    });\n  }\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => !UserApi.isAuthenticated ? React.createElement(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nexport default withSnackbar(connect(null, {\n  me\n})(PrivateRoute));","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/routes/Private.js"],"names":["React","Redirect","Route","me","connect","UserApi","withSnackbar","PrivateRoute","Component","component","rest","isAuthenticated","enqueueSnackbar","variant","autoHideDuration","props","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,QAA8B,kBAA9B;AACA,SAAQC,EAAR,QAAiB,gCAAjB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAAQC,YAAR,QAA2B,WAA3B,C,CACA;;AAGA,MAAMC,YAAY,GAAG,UAAqC;AAAA,MAAxBC,SAAwB,QAAnCC,SAAmC;AAAA,MAAVC,IAAU;;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAI,CAACL,OAAO,CAACM,eAAb,EAA8B;AAC1BD,IAAAA,IAAI,CAACE,eAAL,CAAqB,wBAArB,EAA+C;AAC3CC,MAAAA,OAAO,EAAE,OADkC;AAE3CC,MAAAA,gBAAgB,EAAE;AAFyB,KAA/C;AAIH;;AAED,SACI,oBAAC,KAAD,oBAAWJ,IAAX;AAAiB,IAAA,MAAM,EAAEK,KAAK,IAC1B,CAACV,OAAO,CAACM,eAAT,GACI,oBAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAK,QAAAA,QAAQ,EAAE,GADV;AAEAC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAFP,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,GAOI,oBAAC,SAAD,oBAAeJ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAaH,CAlCD;;AAoCA,eAAeT,YAAY,CAACF,OAAO,CAAC,IAAD,EAAO;AAACD,EAAAA;AAAD,CAAP,CAAP,CAAoBI,YAApB,CAAD,CAA3B","sourcesContent":["import React from 'react'\r\nimport {Redirect, Route} from 'react-router-dom'\r\nimport {me} from \"../store/ducks/auth/operations\";\r\nimport {connect} from \"react-redux\";\r\nimport UserApi from \"../store/utils/UserApi\";\r\nimport {withSnackbar} from \"notistack\";\r\n// import SecondaryLayout from \"../views/layout/SecondaryLayout\";\r\n\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    // React.useEffect(() => {\r\n    //     rest.me()\r\n    //         .then(data => {\r\n    //             setLoggedIn(data)})\r\n    //         .catch(err => setLoggedIn(err));\r\n    //     // eslint-disable-next-line\r\n    // }, []);\r\n    // if (!loggedIn) {\r\n    //     return null;\r\n    // }\r\n\r\n    // console.log(loggedIn.id)\r\n\r\n    if (!UserApi.isAuthenticated) {\r\n        rest.enqueueSnackbar('You must be logged in.', {\r\n            variant: 'error',\r\n            autoHideDuration: 5000,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            !UserApi.isAuthenticated ? (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/',\r\n                        state: {from: props.location}\r\n                    }}\r\n                />\r\n            ) : <Component {...props} />\r\n        )}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withSnackbar(connect(null, {me})(PrivateRoute))"]},"metadata":{},"sourceType":"module"}