{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport RAvatar from \"../../assets/img/my_avatar.jpg\";\nimport { AUTH_CHECK, AUTH_LOGIN, AUTH_LOGOUT } from \"../actions\";\nimport Http from '../../Http';\nconst user = {\n  user_id: null,\n  steamid: null,\n  nickname: null,\n  avatar: null,\n  balance: null,\n  group: null,\n  registered_at: null,\n  visited_at: null\n};\nconst initialState = {\n  isAuthenticated: false,\n  isAdmin: false,\n  user\n};\n\nconst AuthReducer = (state = initialState, {\n  type,\n  payload = null\n}) => {\n  switch (type) {\n    case AUTH_LOGIN:\n      return authLogin(state, payload);\n\n    case AUTH_CHECK:\n      return checkAuth(state);\n\n    case AUTH_LOGOUT:\n      return logout(state);\n\n    default:\n      return state;\n  }\n};\n\nconst authLogin = (state, payload) => {\n  const jwtToken = payload.token;\n  const user = payload.user[0];\n  localStorage.setItem('jwt_token', jwtToken);\n  Http.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\n  return _objectSpread({}, state, {\n    isAuthenticated: true,\n    user\n  });\n};\n\nconst checkAuth = state => {\n  state = _objectSpread({}, state, {\n    isAuthenticated: !!localStorage.getItem('jwt_token')\n  });\n\n  if (state.isAuthenticated) {\n    Http.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\n  }\n\n  return state;\n};\n\nconst logout = state => {\n  localStorage.removeItem('jwt_token');\n  return _objectSpread({}, state, {\n    isAuthenticated: false,\n    user\n  });\n};\n\nexport default AuthReducer;","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/reducers/auth.js"],"names":["RAvatar","AUTH_CHECK","AUTH_LOGIN","AUTH_LOGOUT","Http","user","user_id","steamid","nickname","avatar","balance","group","registered_at","visited_at","initialState","isAuthenticated","isAdmin","AuthReducer","state","type","payload","authLogin","checkAuth","logout","jwtToken","token","localStorage","setItem","defaults","headers","common","getItem","removeItem"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,gCAApB;AACA,SAAQC,UAAR,EAAoBC,UAApB,EAAgCC,WAAhC,QAAkD,YAAlD;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE,IADA;AAETC,EAAAA,OAAO,EAAE,IAFA;AAGTC,EAAAA,QAAQ,EAAE,IAHD;AAITC,EAAAA,MAAM,EAAE,IAJC;AAKTC,EAAAA,OAAO,EAAE,IALA;AAMTC,EAAAA,KAAK,EAAE,IANE;AAOTC,EAAAA,aAAa,EAAE,IAPN;AAQTC,EAAAA,UAAU,EAAE;AARH,CAAb;AAWA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAG,KADD;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBX,EAAAA;AAHiB,CAArB;;AAMA,MAAMY,WAAW,GAAG,CAACC,KAAK,GAAEJ,YAAR,EAAqB;AAACK,EAAAA,IAAD;AAAMC,EAAAA,OAAO,GAAG;AAAhB,CAArB,KAA+C;AAC/D,UAAOD,IAAP;AACI,SAAKjB,UAAL;AACI,aAAOmB,SAAS,CAACH,KAAD,EAAOE,OAAP,CAAhB;;AACJ,SAAKnB,UAAL;AACI,aAAOqB,SAAS,CAACJ,KAAD,CAAhB;;AACJ,SAAKf,WAAL;AACI,aAAOoB,MAAM,CAACL,KAAD,CAAb;;AACJ;AACI,aAAOA,KAAP;AARR;AAUH,CAXD;;AAaA,MAAMG,SAAS,GAAG,CAACH,KAAD,EAAOE,OAAP,KAAmB;AACjC,QAAMI,QAAQ,GAAGJ,OAAO,CAACK,KAAzB;AACA,QAAMpB,IAAI,GAAGe,OAAO,CAACf,IAAR,CAAa,CAAb,CAAb;AACAqB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCH,QAAjC;AACApB,EAAAA,IAAI,CAACwB,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,eAA7B,IAAiD,UAASN,QAAS,EAAnE;AAEA,2BACON,KADP;AAEIH,IAAAA,eAAe,EAAE,IAFrB;AAGIV,IAAAA;AAHJ;AAKH,CAXD;;AAaA,MAAMiB,SAAS,GAAIJ,KAAD,IAAU;AACxBA,EAAAA,KAAK,qBACEA,KADF;AAEDH,IAAAA,eAAe,EAAG,CAAC,CAACW,YAAY,CAACK,OAAb,CAAqB,WAArB;AAFnB,IAAL;;AAKA,MAAGb,KAAK,CAACH,eAAT,EAAyB;AACrBX,IAAAA,IAAI,CAACwB,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,eAA7B,IAAiD,UAASJ,YAAY,CAACK,OAAb,CAAqB,WAArB,CAAkC,EAA5F;AACH;;AACD,SAAOb,KAAP;AACH,CAVD;;AAYA,MAAMK,MAAM,GAAIL,KAAD,IAAW;AACtBQ,EAAAA,YAAY,CAACM,UAAb,CAAwB,WAAxB;AACA,2BACOd,KADP;AAEIH,IAAAA,eAAe,EAAE,KAFrB;AAGIV,IAAAA;AAHJ;AAKH,CAPD;;AASA,eAAeY,WAAf","sourcesContent":["import RAvatar from \"../../assets/img/my_avatar.jpg\"\r\nimport {AUTH_CHECK, AUTH_LOGIN, AUTH_LOGOUT} from \"../actions\";\r\nimport Http from '../../Http'\r\n\r\nconst user = {\r\n    user_id: null,\r\n    steamid: null,\r\n    nickname: null,\r\n    avatar: null,\r\n    balance: null,\r\n    group: null,\r\n    registered_at: null,\r\n    visited_at: null,\r\n};\r\n\r\nconst initialState = {\r\n    isAuthenticated : false,\r\n    isAdmin: false,\r\n    user\r\n};\r\n\r\nconst AuthReducer = (state= initialState,{type,payload = null}) => {\r\n    switch(type){\r\n        case AUTH_LOGIN:\r\n            return authLogin(state,payload);\r\n        case AUTH_CHECK:\r\n            return checkAuth(state);\r\n        case AUTH_LOGOUT:\r\n            return logout(state);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst authLogin = (state,payload) => {\r\n    const jwtToken = payload.token;\r\n    const user = payload.user[0];\r\n    localStorage.setItem('jwt_token',jwtToken);\r\n    Http.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\r\n\r\n    return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user\r\n    }\r\n};\r\n\r\nconst checkAuth = (state) =>{\r\n    state = {\r\n        ...state,\r\n        isAuthenticated : !!localStorage.getItem('jwt_token'),\r\n    }\r\n\r\n    if(state.isAuthenticated){\r\n        Http.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\r\n    }\r\n    return state;\r\n};\r\n\r\nconst logout = (state) => {\r\n    localStorage.removeItem('jwt_token');\r\n    return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user\r\n    }\r\n};\r\n\r\nexport default AuthReducer"]},"metadata":{},"sourceType":"module"}