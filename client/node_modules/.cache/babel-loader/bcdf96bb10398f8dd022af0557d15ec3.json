{"ast":null,"code":"const REGULAR = [\"background: blue\", \"color: white\"].join(\";\");\nconst SUCCESS = [\"background: green\", \"color: white\"].join(\";\");\nconst STARTED = [\"background: darkorange\", \"color: white\"].join(\";\");\nconst FAILURE = [\"background: red\", \"color: white\"].join(\";\");\n\nconst createLogger = (active = true) => store => next => action => {\n  if (!active) {\n    return next(action);\n  }\n\n  const prevState = store.getState();\n  const result = next(action);\n  const nextState = store.getState();\n  logGroupCollapsed(`%c ${action.type} `, determineStyle(action));\n  logInfo(\"%cprev state\", \"color: darkorange\", prevState);\n  logInfo(\"%caction payload\", \"color: blue\", action.payload);\n  logInfo(\"%cnext state\", \"color: darkgreen\", nextState);\n  logGroupEnd();\n  return result;\n};\n\nexport default createLogger;\n\nfunction logGroupCollapsed(...args) {\n  const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\n  logFunction(...args);\n}\n\nfunction logGroupEnd(...args) {\n  const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\n  logFunction(...args);\n}\n\nfunction logInfo(...args) {\n  console.info(...args);\n}\n\nfunction determineStyle(action) {\n  if (!action.meta || !action.meta.async) {\n    return REGULAR;\n  }\n\n  if (action.type.indexOf(\"_COMPLETED\") > -1) {\n    return SUCCESS;\n  }\n\n  if (action.type.indexOf(\"_FAILED\") > -1) {\n    return FAILURE;\n  }\n\n  return STARTED;\n}","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/middlewares/logger.js"],"names":["REGULAR","join","SUCCESS","STARTED","FAILURE","createLogger","active","store","next","action","prevState","getState","result","nextState","logGroupCollapsed","type","determineStyle","logInfo","payload","logGroupEnd","args","logFunction","console","groupCollapsed","info","groupEnd","meta","async","indexOf"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CACZ,kBADY,EAEZ,cAFY,EAGdC,IAHc,CAGT,GAHS,CAAhB;AAKA,MAAMC,OAAO,GAAG,CACZ,mBADY,EAEZ,cAFY,EAGdD,IAHc,CAGT,GAHS,CAAhB;AAKA,MAAME,OAAO,GAAG,CACZ,wBADY,EAEZ,cAFY,EAGdF,IAHc,CAGT,GAHS,CAAhB;AAKA,MAAMG,OAAO,GAAG,CACZ,iBADY,EAEZ,cAFY,EAGdH,IAHc,CAGT,GAHS,CAAhB;;AAKA,MAAMI,YAAY,GAAG,CAACC,MAAM,GAAG,IAAV,KAAoBC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;AACrE,MAAI,CAACH,MAAL,EAAa;AACT,WAAOE,IAAI,CAACC,MAAD,CAAX;AACH;;AAED,QAAMC,SAAS,GAAGH,KAAK,CAACI,QAAN,EAAlB;AACA,QAAMC,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAnB;AACA,QAAMI,SAAS,GAAGN,KAAK,CAACI,QAAN,EAAlB;AACAG,EAAAA,iBAAiB,CAAE,MAAKL,MAAM,CAACM,IAAK,GAAnB,EAAuBC,cAAc,CAACP,MAAD,CAArC,CAAjB;AACAQ,EAAAA,OAAO,CAAC,cAAD,EAAiB,mBAAjB,EAAsCP,SAAtC,CAAP;AACAO,EAAAA,OAAO,CAAC,kBAAD,EAAqB,aAArB,EAAoCR,MAAM,CAACS,OAA3C,CAAP;AACAD,EAAAA,OAAO,CAAC,cAAD,EAAiB,kBAAjB,EAAqCJ,SAArC,CAAP;AACAM,EAAAA,WAAW;AACX,SAAOP,MAAP;AACH,CAdD;;AAgBA,eAAeP,YAAf;;AAEA,SAASS,iBAAT,CAA2B,GAAGM,IAA9B,EAAoC;AAChC,QAAMC,WAAW,GAAG,OAAOC,OAAO,CAACC,cAAf,KAAkC,UAAlC,GAA+CD,OAAO,CAACC,cAAvD,GAAwED,OAAO,CAACE,IAApG;AACAH,EAAAA,WAAW,CAAC,GAAGD,IAAJ,CAAX;AACH;;AAED,SAASD,WAAT,CAAqB,GAAGC,IAAxB,EAA8B;AAC1B,QAAMC,WAAW,GAAG,OAAOC,OAAO,CAACG,QAAf,KAA4B,UAA5B,GAAyCH,OAAO,CAACG,QAAjD,GAA4DH,OAAO,CAACE,IAAxF;AACAH,EAAAA,WAAW,CAAC,GAAGD,IAAJ,CAAX;AACH;;AAED,SAASH,OAAT,CAAiB,GAAGG,IAApB,EAA0B;AACtBE,EAAAA,OAAO,CAACE,IAAR,CAAa,GAAGJ,IAAhB;AACH;;AAED,SAASJ,cAAT,CAAwBP,MAAxB,EAAgC;AAC5B,MAAI,CAACA,MAAM,CAACiB,IAAR,IAAgB,CAACjB,MAAM,CAACiB,IAAP,CAAYC,KAAjC,EAAwC;AACpC,WAAO3B,OAAP;AACH;;AAED,MAAIS,MAAM,CAACM,IAAP,CAAYa,OAAZ,CAAoB,YAApB,IAAoC,CAAC,CAAzC,EAA4C;AACxC,WAAO1B,OAAP;AACH;;AAED,MAAIO,MAAM,CAACM,IAAP,CAAYa,OAAZ,CAAoB,SAApB,IAAiC,CAAC,CAAtC,EAAyC;AACrC,WAAOxB,OAAP;AACH;;AAED,SAAOD,OAAP;AACH","sourcesContent":["const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join(\";\");\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join(\";\");\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join(\";\");\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join(\";\");\r\n\r\nconst createLogger = (active = true) => (store) => (next) => (action) => {\r\n    if (!active) {\r\n        return next(action);\r\n    }\r\n\r\n    const prevState = store.getState();\r\n    const result = next(action);\r\n    const nextState = store.getState();\r\n    logGroupCollapsed(`%c ${action.type} `, determineStyle(action));\r\n    logInfo(\"%cprev state\", \"color: darkorange\", prevState);\r\n    logInfo(\"%caction payload\", \"color: blue\", action.payload);\r\n    logInfo(\"%cnext state\", \"color: darkgreen\", nextState);\r\n    logGroupEnd();\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed(...args) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction(...args);\r\n}\r\n\r\nfunction logGroupEnd(...args) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction(...args);\r\n}\r\n\r\nfunction logInfo(...args) {\r\n    console.info(...args);\r\n}\r\n\r\nfunction determineStyle(action) {\r\n    if (!action.meta || !action.meta.async) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if (action.type.indexOf(\"_COMPLETED\") > -1) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if (action.type.indexOf(\"_FAILED\") > -1) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}"]},"metadata":{},"sourceType":"module"}