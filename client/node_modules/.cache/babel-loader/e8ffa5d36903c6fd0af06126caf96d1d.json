{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\components\\\\_layouts\\\\_includes\\\\content\\\\Content.js\";\nimport React from 'react';\nimport ToolbarSpacer from \"../../../common/ToolbarSpacer\";\nimport { withTheme } from '@material-ui/core/styles';\nimport { useStyles } from './Content.style';\nimport styled from 'styled-components';\nconst Main = styled.main`\n            flex-grow: 1;\n            display: flex;\n            flex-direction: column;\n            padding: 0 16px;\n`;\nconst FixedToolbar = styled.div`\n    min-height: 16px;\n`;\nconst Content = React.memo((_ref) => {\n  let _ref$toolbared = _ref.toolbared,\n      toolbared = _ref$toolbared === void 0 ? true : _ref$toolbared,\n      props = _objectWithoutProperties(_ref, [\"toolbared\"]);\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, toolbared && React.createElement(React.Fragment, null, React.createElement(ToolbarSpacer, {\n    theme: props.theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(FixedToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), props.children);\n});\nexport default withTheme(Content);","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/components/_layouts/_includes/content/Content.js"],"names":["React","ToolbarSpacer","withTheme","useStyles","styled","Main","main","FixedToolbar","div","Content","memo","toolbared","props","theme","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,IAAK;;;;;CAAzB;AAOA,MAAMC,YAAY,GAAGH,MAAM,CAACI,GAAI;;CAAhC;AAKA,MAAMC,OAAO,GAAGT,KAAK,CAACU,IAAN,CAAW,UAAkC;AAAA,4BAAhCC,SAAgC;AAAA,MAAhCA,SAAgC,+BAApB,IAAoB;AAAA,MAAXC,KAAW;;AACrD,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,SAAS,IAAK,0CACX,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEC,KAAK,CAACC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,EAEX,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFW,CADnB,EAKKD,KAAK,CAACE,QALX,CADJ;AASH,CAVW,CAAhB;AAaA,eAAeZ,SAAS,CAACO,OAAD,CAAxB","sourcesContent":["import React from 'react';\r\nimport ToolbarSpacer from \"../../../common/ToolbarSpacer\";\r\nimport {withTheme} from '@material-ui/core/styles';\r\nimport {useStyles} from './Content.style'\r\nimport styled from 'styled-components'\r\n\r\nconst Main = styled.main`\r\n            flex-grow: 1;\r\n            display: flex;\r\n            flex-direction: column;\r\n            padding: 0 16px;\r\n`\r\n\r\nconst FixedToolbar = styled.div`\r\n    min-height: 16px;\r\n`\r\n\r\n\r\nconst Content = React.memo(({toolbared = true, ...props}) => {\r\n        return (\r\n            <Main>\r\n                {toolbared && (<>\r\n                    <ToolbarSpacer theme={props.theme}/>\r\n                    <FixedToolbar/>\r\n                </>)}\r\n                {props.children}\r\n            </Main>\r\n        );\r\n    }\r\n)\r\n\r\nexport default withTheme(Content)"]},"metadata":{},"sourceType":"module"}