{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { AxiosInstance as Http } from \"axios\";\nimport * as types from \"./types\";\nconst user = {\n  user_id: null,\n  steamid: null,\n  nickname: null,\n  avatar: null,\n  balance: null,\n  group: null\n};\nconst initialState = {\n  isAuthenticated: false,\n  user\n};\n\nfunction authReducer(state = initialState, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case types.AUTH_LOGIN:\n      const user = {\n        user_id: payload.user.user_id,\n        steamid: payload.user.steamid,\n        nickname: payload.user.nickname,\n        avatar: payload.user.avatar,\n        balance: payload.user.balance,\n        group: payload.user.group\n      }; // Http.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\n\n      return _objectSpread({}, state, {\n        isAuthenticated: payload.isAuthenticated,\n        user\n      });\n\n    case types.AUTH_CHECK:\n      state = _objectSpread({}, state, {\n        isAuthenticated: !!localStorage.getItem('jwt_token')\n      });\n\n      if (state.isAuthenticated) {\n        Http.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\n      }\n\n      return state;\n\n    case types.AUTH_LOGOUT:\n      localStorage.removeItem('jwt_token');\n      return _objectSpread({}, state, {\n        isAuthenticated: false,\n        user\n      });\n\n    default:\n      return state;\n  }\n}\n\n;\nexport default authReducer;","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/reducers.js"],"names":["AxiosInstance","Http","types","user","user_id","steamid","nickname","avatar","balance","group","initialState","isAuthenticated","authReducer","state","type","payload","AUTH_LOGIN","AUTH_CHECK","localStorage","getItem","defaults","headers","common","AUTH_LOGOUT","removeItem"],"mappings":";AAAA,SAAQA,aAAa,IAAIC,IAAzB,QAAoC,OAApC;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE,IADA;AAETC,EAAAA,OAAO,EAAE,IAFA;AAGTC,EAAAA,QAAQ,EAAE,IAHD;AAITC,EAAAA,MAAM,EAAE,IAJC;AAKTC,EAAAA,OAAO,EAAE,IALA;AAMTC,EAAAA,KAAK,EAAE;AANE,CAAb;AASA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBR,EAAAA;AAFiB,CAArB;;AAKA,SAASS,WAAT,CAAqBC,KAAK,GAAGH,YAA7B,EAA2C;AAACI,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAA3C,EAAmE;AAC/D,UAAQD,IAAR;AACI,SAAKZ,KAAK,CAACc,UAAX;AACI,YAAMb,IAAI,GAAG;AACTC,QAAAA,OAAO,EAAEW,OAAO,CAACZ,IAAR,CAAaC,OADb;AAETC,QAAAA,OAAO,EAAEU,OAAO,CAACZ,IAAR,CAAaE,OAFb;AAGTC,QAAAA,QAAQ,EAAES,OAAO,CAACZ,IAAR,CAAaG,QAHd;AAITC,QAAAA,MAAM,EAAEQ,OAAO,CAACZ,IAAR,CAAaI,MAJZ;AAKTC,QAAAA,OAAO,EAAEO,OAAO,CAACZ,IAAR,CAAaK,OALb;AAMTC,QAAAA,KAAK,EAAEM,OAAO,CAACZ,IAAR,CAAaM;AANX,OAAb,CADJ,CASI;;AAEA,+BACOI,KADP;AAEIF,QAAAA,eAAe,EAAEI,OAAO,CAACJ,eAF7B;AAGIR,QAAAA;AAHJ;;AAKJ,SAAKD,KAAK,CAACe,UAAX;AACIJ,MAAAA,KAAK,qBACEA,KADF;AAEDF,QAAAA,eAAe,EAAE,CAAC,CAACO,YAAY,CAACC,OAAb,CAAqB,WAArB;AAFlB,QAAL;;AAKA,UAAIN,KAAK,CAACF,eAAV,EAA2B;AACvBV,QAAAA,IAAI,CAACmB,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,eAA7B,IAAiD,UAASJ,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC,EAA5F;AACH;;AAED,aAAON,KAAP;;AACJ,SAAKX,KAAK,CAACqB,WAAX;AACIL,MAAAA,YAAY,CAACM,UAAb,CAAwB,WAAxB;AAEA,+BACOX,KADP;AAEIF,QAAAA,eAAe,EAAE,KAFrB;AAGIR,QAAAA;AAHJ;;AAKJ;AACI,aAAOU,KAAP;AArCR;AAuCH;;AAAA;AAED,eAAeD,WAAf","sourcesContent":["import {AxiosInstance as Http} from \"axios\";\r\nimport * as types from \"./types\";\r\n\r\nconst user = {\r\n    user_id: null,\r\n    steamid: null,\r\n    nickname: null,\r\n    avatar: null,\r\n    balance: null,\r\n    group: null\r\n};\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user\r\n};\r\n\r\nfunction authReducer(state = initialState, {type, payload = null}) {\r\n    switch (type) {\r\n        case types.AUTH_LOGIN:\r\n            const user = {\r\n                user_id: payload.user.user_id,\r\n                steamid: payload.user.steamid,\r\n                nickname: payload.user.nickname,\r\n                avatar: payload.user.avatar,\r\n                balance: payload.user.balance,\r\n                group: payload.user.group,\r\n            }\r\n            // Http.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload.isAuthenticated,\r\n                user\r\n            }\r\n        case types.AUTH_CHECK:\r\n            state = {\r\n                ...state,\r\n                isAuthenticated: !!localStorage.getItem('jwt_token'),\r\n            }\r\n\r\n            if (state.isAuthenticated) {\r\n                Http.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\r\n            }\r\n\r\n            return state;\r\n        case types.AUTH_LOGOUT:\r\n            localStorage.removeItem('jwt_token');\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer"]},"metadata":{},"sourceType":"module"}