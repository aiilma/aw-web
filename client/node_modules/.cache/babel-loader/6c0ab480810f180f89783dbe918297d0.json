{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\CompOrderForm\\\\Container.js\";\nimport React from 'react';\nimport { Field, withFormik } from 'formik';\nimport { connect } from \"react-redux\";\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\nimport { Spacer } from \"../../common/layout\";\nimport { FormWrapper, InnerFormSpacer, Title } from \"../../common/form_components\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { CompVariantRB } from \"../../common/CompVariant\";\n\nconst OrderFormWrapper = (_ref) => {\n  let _ref$caption = _ref.caption,\n      caption = _ref$caption === void 0 ? \"Безымянный\" : _ref$caption,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"xl\" : _ref$size,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"caption\", \"size\", \"children\"]);\n\n  return React.createElement(SecondaryLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(FormWrapper, {\n    maxWidth: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(InnerFormSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Title, {\n    text: caption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), children)));\n};\n\nconst TypeVariants = (_ref2) => {\n  let handleChange = _ref2.handleChange,\n      props = _objectWithoutProperties(_ref2, [\"handleChange\"]);\n\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    style: {\n      margin: '1rem 0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F:\"), React.createElement(FormGroup, {\n    row: true,\n    style: {\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Field, {\n    variant: \"long\",\n    name: \"typeVariant\",\n    component: CompVariantRB,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Field, {\n    variant: \"short\",\n    name: \"typeVariant\",\n    component: CompVariantRB,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))));\n};\n\nconst OrderForm = props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        orderFormData = props.orderFormData,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit,\n        handleReset = props.handleReset;\n  return React.createElement(OrderFormWrapper, {\n    caption: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(TypeVariants, {\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    onClick: handleReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Reset\")));\n};\n\nconst getDefaultValues = state => {\n  let values = {\n    typeVariant: state.typeVariant\n  }; // // inputs\n  // Object.keys(state.inputs).forEach(keyName => {\n  //     values.ph[keyName] = ''\n  // })\n\n  return values;\n};\n\nconst OrderFormContainer = withFormik({\n  mapPropsToValues: props => getDefaultValues(props.orderFormData),\n  // Custom sync validation\n  validate: values => {\n    const errors = {}; // if (!values.name) {\n    //     errors.name = 'Required';\n    // }\n\n    return errors;\n  },\n  handleSubmit: (values, _ref3) => {\n    let setSubmitting = _ref3.setSubmitting,\n        props = _objectWithoutProperties(_ref3, [\"setSubmitting\"]);\n\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false); // props.props.history.push(`${props.props.location.pathname}/success`)\n    }, 1000);\n  },\n  displayName: 'OrderForm'\n})(OrderForm);\n\nconst mapStateToProps = state => ({\n  orderFormData: state.compOrderForm\n});\n\nexport default connect(mapStateToProps, {})(OrderFormContainer);","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/CompOrderForm/Container.js"],"names":["React","Field","withFormik","connect","SecondaryLayout","Spacer","FormWrapper","InnerFormSpacer","Title","Grid","Box","FormLabel","FormGroup","CompVariantRB","OrderFormWrapper","caption","size","children","props","TypeVariants","handleChange","margin","justifyContent","OrderForm","values","touched","errors","orderFormData","handleBlur","handleSubmit","handleReset","getDefaultValues","state","typeVariant","OrderFormContainer","mapPropsToValues","validate","setSubmitting","setTimeout","alert","JSON","stringify","displayName","mapStateToProps","compOrderForm"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Field, withFormik} from 'formik';\r\nimport {connect} from \"react-redux\";\r\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\r\nimport {Spacer} from \"../../common/layout\";\r\nimport {FormWrapper, InnerFormSpacer, Title} from \"../../common/form_components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport {CompVariantRB} from \"../../common/CompVariant\";\r\n\r\nconst OrderFormWrapper = ({caption=\"Безымянный\", size=\"xl\", children, ...props}) => {\r\n    return (\r\n        <SecondaryLayout>\r\n            <Spacer/>\r\n            <FormWrapper maxWidth={size}>\r\n                <InnerFormSpacer>\r\n                    <Title text={caption} />\r\n                    {children}\r\n                </InnerFormSpacer>\r\n            </FormWrapper>\r\n        </SecondaryLayout>\r\n    )\r\n}\r\n\r\nconst TypeVariants = ({handleChange, ...props}) => {\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Box>\r\n                <FormLabel component=\"legend\" style={{margin: '1rem 0',}}>Вариант отображения:</FormLabel>\r\n                <FormGroup row style={{justifyContent: 'center',}}>\r\n                    <Field\r\n                        variant='long'\r\n                        name=\"typeVariant\" component={CompVariantRB}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Field\r\n                        variant='short'\r\n                        name=\"typeVariant\" component={CompVariantRB}\r\n                        onChange={handleChange}\r\n                    />\r\n                </FormGroup>\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst OrderForm = props => {\r\n    const {\r\n        values, touched, errors, orderFormData,\r\n        handleChange, handleBlur, handleSubmit, handleReset\r\n    } = props;\r\n\r\n\r\n    return (\r\n        <OrderFormWrapper caption=\"Форма заказа\">\r\n            <form onSubmit={handleSubmit}>\r\n                <Grid container>\r\n\r\n\r\n                    {/*type varient*/}\r\n                    <TypeVariants handleChange={handleChange}/>\r\n                    {/*inputs*/}\r\n\r\n\r\n                </Grid>\r\n                <button type=\"submit\">Submit</button>\r\n                <button onClick={handleReset}>Reset</button>\r\n            </form>\r\n        </OrderFormWrapper>\r\n    );\r\n};\r\n\r\nconst getDefaultValues = (state) => {\r\n    let values = {\r\n        typeVariant: state.typeVariant,\r\n    }\r\n\r\n    // // inputs\r\n    // Object.keys(state.inputs).forEach(keyName => {\r\n    //     values.ph[keyName] = ''\r\n    // })\r\n\r\n    return values\r\n}\r\n\r\nconst OrderFormContainer = withFormik({\r\n    mapPropsToValues: (props) => (getDefaultValues(props.orderFormData)),\r\n\r\n    // Custom sync validation\r\n    validate: values => {\r\n        const errors = {};\r\n\r\n        // if (!values.name) {\r\n        //     errors.name = 'Required';\r\n        // }\r\n\r\n        return errors;\r\n    },\r\n\r\n    handleSubmit: (values, {setSubmitting, ...props}) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n            // props.props.history.push(`${props.props.location.pathname}/success`)\r\n        }, 1000);\r\n    },\r\n\r\n    displayName: 'OrderForm',\r\n})(OrderForm);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    orderFormData: state.compOrderForm\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(OrderFormContainer)"]},"metadata":{},"sourceType":"module"}