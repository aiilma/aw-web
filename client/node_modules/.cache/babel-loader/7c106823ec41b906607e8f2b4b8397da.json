{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\";\nimport RCompThumbnail from \"../../../assets/img/compositions/static.png\";\nimport RCompPreview from \"../../../assets/img/compositions/dynamic.gif\";\nexport const initCompList = {\n  compositions: [{\n    title: 'my name is',\n    link: 'heaotnhentaoheaothaaaaaaaaaaaab',\n    price: 50,\n    thumbnail: RCompThumbnail,\n    preview: RCompPreview\n  }],\n  isFetching: false,\n  errors: {}\n};\n\nfunction compListReducer(state = initCompList, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case types.CLEAR_LIST:\n      return _objectSpread({}, state, {\n        compositions: [],\n        form: {},\n        errors: {}\n      });\n\n    case types.FETCH_LIST:\n      return _objectSpread({}, state, {\n        form: {},\n        isFetching: true,\n        errors: {}\n      });\n\n    case types.FETCH_LIST_COMPLETED:\n      return _objectSpread({}, state, {\n        compositions: [...payload.data.map(c => {\n          return {\n            title: c.title,\n            link: c.link_alias,\n            price: c.price,\n            thumbnail: RCompThumbnail,\n            preview: RCompPreview\n          };\n        })],\n        form: {},\n        isFetching: false,\n        errors: {}\n      });\n\n    case types.FETCH_LIST_FAILED:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        compositions: [],\n        errors: {\n          message: payload.data.message,\n          status: payload.status\n        }\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default compListReducer;","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/comp-list/reducers.js"],"names":["types","RCompThumbnail","RCompPreview","initCompList","compositions","title","link","price","thumbnail","preview","isFetching","errors","compListReducer","state","type","payload","CLEAR_LIST","form","FETCH_LIST","FETCH_LIST_COMPLETED","data","map","c","link_alias","FETCH_LIST_FAILED","message","status"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,YAAY,EAAE,CACV;AACIC,IAAAA,KAAK,EAAE,YADX;AAEIC,IAAAA,IAAI,EAAE,iCAFV;AAGIC,IAAAA,KAAK,EAAE,EAHX;AAIIC,IAAAA,SAAS,EAAEP,cAJf;AAKIQ,IAAAA,OAAO,EAAEP;AALb,GADU,CADU;AAUxBQ,EAAAA,UAAU,EAAE,KAVY;AAWxBC,EAAAA,MAAM,EAAE;AAXgB,CAArB;;AAcP,SAASC,eAAT,CAAyBC,KAAK,GAAGV,YAAjC,EAA+C;AAACW,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAA/C,EAAuE;AACnE,UAAQD,IAAR;AACI,SAAKd,KAAK,CAACgB,UAAX;AACI,+BACOH,KADP;AAEIT,QAAAA,YAAY,EAAE,EAFlB;AAGIa,QAAAA,IAAI,EAAE,EAHV;AAIIN,QAAAA,MAAM,EAAE;AAJZ;;AAMJ,SAAKX,KAAK,CAACkB,UAAX;AACI,+BACOL,KADP;AAEII,QAAAA,IAAI,EAAE,EAFV;AAGIP,QAAAA,UAAU,EAAE,IAHhB;AAIIC,QAAAA,MAAM,EAAE;AAJZ;;AAMJ,SAAKX,KAAK,CAACmB,oBAAX;AACI,+BACON,KADP;AAEIT,QAAAA,YAAY,EAAE,CACV,GAAGW,OAAO,CAACK,IAAR,CAAaC,GAAb,CAAiBC,CAAC,IAAI;AACrB,iBAAO;AACHjB,YAAAA,KAAK,EAAEiB,CAAC,CAACjB,KADN;AAEHC,YAAAA,IAAI,EAAEgB,CAAC,CAACC,UAFL;AAGHhB,YAAAA,KAAK,EAAEe,CAAC,CAACf,KAHN;AAIHC,YAAAA,SAAS,EAAEP,cAJR;AAKHQ,YAAAA,OAAO,EAAEP;AALN,WAAP;AAOH,SARE,CADO,CAFlB;AAaIe,QAAAA,IAAI,EAAE,EAbV;AAcIP,QAAAA,UAAU,EAAE,KAdhB;AAeIC,QAAAA,MAAM,EAAE;AAfZ;;AAiBJ,SAAKX,KAAK,CAACwB,iBAAX;AACI,+BACOX,KADP;AAEIH,QAAAA,UAAU,EAAE,KAFhB;AAGIN,QAAAA,YAAY,EAAE,EAHlB;AAIIO,QAAAA,MAAM,EAAE;AACJc,UAAAA,OAAO,EAAEV,OAAO,CAACK,IAAR,CAAaK,OADlB;AAEJC,UAAAA,MAAM,EAAEX,OAAO,CAACW;AAFZ;AAJZ;;AASJ;AACI,aAAOb,KAAP;AA5CR;AA8CH;;AAED,eAAeD,eAAf","sourcesContent":["import * as types from \"./types\";\r\nimport RCompThumbnail from \"../../../assets/img/compositions/static.png\";\r\nimport RCompPreview from \"../../../assets/img/compositions/dynamic.gif\";\r\n\r\nexport const initCompList = {\r\n    compositions: [\r\n        {\r\n            title: 'my name is',\r\n            link: 'heaotnhentaoheaothaaaaaaaaaaaab',\r\n            price: 50,\r\n            thumbnail: RCompThumbnail,\r\n            preview: RCompPreview,\r\n        }\r\n    ],\r\n    isFetching: false,\r\n    errors: {}\r\n}\r\n\r\nfunction compListReducer(state = initCompList, {type, payload = null}) {\r\n    switch (type) {\r\n        case types.CLEAR_LIST:\r\n            return {\r\n                ...state,\r\n                compositions: [],\r\n                form: {},\r\n                errors: {},\r\n            }\r\n        case types.FETCH_LIST:\r\n            return {\r\n                ...state,\r\n                form: {},\r\n                isFetching: true,\r\n                errors: {},\r\n            }\r\n        case types.FETCH_LIST_COMPLETED:\r\n            return {\r\n                ...state,\r\n                compositions: [\r\n                    ...payload.data.map(c => {\r\n                        return {\r\n                            title: c.title,\r\n                            link: c.link_alias,\r\n                            price: c.price,\r\n                            thumbnail: RCompThumbnail,\r\n                            preview: RCompPreview,\r\n                        }\r\n                    })\r\n                ],\r\n                form: {},\r\n                isFetching: false,\r\n                errors: {}\r\n            }\r\n        case types.FETCH_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                compositions: [],\r\n                errors: {\r\n                    message: payload.data.message,\r\n                    status: payload.status\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default compListReducer"]},"metadata":{},"sourceType":"module"}