{"ast":null,"code":"import{authLogin,authLogout,authLoginCompleted,authLogoutCompleted,authLoginFailed,authLogoutFailed}from\"./actions\";import{fetch}from\"../../utils\";import UserApi from\"../../utils/UserApi\";import history from\"../../utils/history\";var login=function login(params){return function(dispatch){dispatch(authLogin());return fetch(\"/airlock/csrf-cookie\",\"GET\").then(function(){fetch(\"/api/login/steam/callback\".concat(params),\"GET\").then(function(user){UserApi.authenticate(function(){return dispatch(authLoginCompleted(user));});}).catch(function(err){dispatch(authLoginFailed());});}).catch(function(err){dispatch(authLoginFailed());});};};var logout=function logout(){return function(dispatch){dispatch(authLogout());history.push('/');return fetch(\"/api/logout\",\"POST\").then(function(res){UserApi.logout(function(){dispatch(authLogoutCompleted());});}).catch(function(err){dispatch(authLogoutFailed(err));});};};var me=function me(){return function(dispatch){dispatch(authLogin());return fetch(\"/api/user\",\"GET\").then(function(user){UserApi.authenticate(function(){return dispatch(authLoginCompleted(user));});return user;}).catch(function(err){dispatch(logout());});};};export{login,logout,me};","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/operations.js"],"names":["authLogin","authLogout","authLoginCompleted","authLogoutCompleted","authLoginFailed","authLogoutFailed","fetch","UserApi","history","login","params","dispatch","then","user","authenticate","catch","err","logout","push","res","me"],"mappings":"AAAA,OACIA,SADJ,CAEIC,UAFJ,CAGIC,kBAHJ,CAIIC,mBAJJ,CAKIC,eALJ,CAMIC,gBANJ,KAOO,WAPP,CAQA,OAAQC,KAAR,KAAoB,aAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,MAAD,QAAY,UAACC,QAAD,CAAc,CACpCA,QAAQ,CAACX,SAAS,EAAV,CAAR,CACA,MAAOM,CAAAA,KAAK,wBAAyB,KAAzB,CAAL,CACFM,IADE,CACG,UAAM,CACRN,KAAK,oCAA6BI,MAA7B,EAAuC,KAAvC,CAAL,CACKE,IADL,CACU,SAACC,IAAD,CAAU,CACZN,OAAO,CAACO,YAAR,CAAqB,iBAAMH,CAAAA,QAAQ,CAACT,kBAAkB,CAACW,IAAD,CAAnB,CAAd,EAArB,EACH,CAHL,EAIKE,KAJL,CAIW,SAACC,GAAD,CAAS,CACZL,QAAQ,CAACP,eAAe,EAAhB,CAAR,CACH,CANL,EAOH,CATE,EAUFW,KAVE,CAUI,SAAAC,GAAG,CAAI,CACVL,QAAQ,CAACP,eAAe,EAAhB,CAAR,CACH,CAZE,CAAP,CAaH,CAfa,EAAd,CAiBA,GAAMa,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAM,UAAAN,QAAQ,CAAI,CAC7BA,QAAQ,CAACV,UAAU,EAAX,CAAR,CACAO,OAAO,CAACU,IAAR,CAAa,GAAb,EACA,MAAOZ,CAAAA,KAAK,eAAgB,MAAhB,CAAL,CACFM,IADE,CACG,SAACO,GAAD,CAAS,CACXZ,OAAO,CAACU,MAAR,CAAe,UAAM,CACjBN,QAAQ,CAACR,mBAAmB,EAApB,CAAR,CACH,CAFD,EAGH,CALE,EAMFY,KANE,CAMI,SAAAC,GAAG,CAAI,CACVL,QAAQ,CAACN,gBAAgB,CAACW,GAAD,CAAjB,CAAR,CACH,CARE,CAAP,CASH,CAZc,EAAf,CAcA,GAAMI,CAAAA,EAAE,CAAG,QAALA,CAAAA,EAAK,SAAM,UAAAT,QAAQ,CAAI,CACzBA,QAAQ,CAACX,SAAS,EAAV,CAAR,CACA,MAAOM,CAAAA,KAAK,aAAc,KAAd,CAAL,CACFM,IADE,CACG,SAACC,IAAD,CAAU,CACZN,OAAO,CAACO,YAAR,CAAqB,iBAAMH,CAAAA,QAAQ,CAACT,kBAAkB,CAACW,IAAD,CAAnB,CAAd,EAArB,EACA,MAAOA,CAAAA,IAAP,CACH,CAJE,EAKFE,KALE,CAKI,SAACC,GAAD,CAAS,CACZL,QAAQ,CAACM,MAAM,EAAP,CAAR,CACH,CAPE,CAAP,CAQH,CAVU,EAAX,CAaA,OACIR,KADJ,CACWQ,MADX,CACmBG,EADnB","sourcesContent":["import {\r\n    authLogin,\r\n    authLogout,\r\n    authLoginCompleted,\r\n    authLogoutCompleted,\r\n    authLoginFailed,\r\n    authLogoutFailed,\r\n} from \"./actions\";\r\nimport {fetch} from \"../../utils\";\r\nimport UserApi from \"../../utils/UserApi\";\r\nimport history from \"../../utils/history\";\r\n\r\nconst login = (params) => (dispatch) => {\r\n    dispatch(authLogin())\r\n    return fetch(`/airlock/csrf-cookie`, \"GET\")\r\n        .then(() => {\r\n            fetch(`/api/login/steam/callback${params}`, \"GET\")\r\n                .then((user) => {\r\n                    UserApi.authenticate(() => dispatch(authLoginCompleted(user)))\r\n                })\r\n                .catch((err) => {\r\n                    dispatch(authLoginFailed())\r\n                });\r\n        })\r\n        .catch(err => {\r\n            dispatch(authLoginFailed())\r\n        });\r\n}\r\n\r\nconst logout = () => dispatch => {\r\n    dispatch(authLogout())\r\n    history.push('/')\r\n    return fetch(`/api/logout`, \"POST\")\r\n        .then((res) => {\r\n            UserApi.logout(() => {\r\n                dispatch(authLogoutCompleted())\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(authLogoutFailed(err))\r\n        });\r\n}\r\n\r\nconst me = () => dispatch => {\r\n    dispatch(authLogin())\r\n    return fetch(`/api/user`, \"GET\")\r\n        .then((user) => {\r\n            UserApi.authenticate(() => dispatch(authLoginCompleted(user)))\r\n            return user\r\n        })\r\n        .catch((err) => {\r\n            dispatch(logout())\r\n        });\r\n}\r\n\r\n\r\nexport {\r\n    login, logout, me\r\n}"]},"metadata":{},"sourceType":"module"}