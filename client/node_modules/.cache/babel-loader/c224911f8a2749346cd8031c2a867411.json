{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\";\nimport axios from 'axios';\nimport auth from \"../../utils/auth\";\nconst user = {\n  user_id: null,\n  steamid: null,\n  nickname: null,\n  avatar: null,\n  balance: null,\n  group: null,\n  createdAt: null,\n  visitedAt: null\n};\nconst initialState = {\n  isAuthenticated: false,\n  user\n};\nexport default function authReducer(state = initialState, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case types.AUTH_LOGIN:\n      return authLogin(state, payload);\n\n    case types.AUTH_LOGOUT:\n      return authLogout(state);\n\n    case types.AUTH_ME:\n      return authMe(state, payload);\n\n    default:\n      return state;\n  }\n}\n;\n\nconst authMe = (state, payload) => {\n  const user = payload.user;\n  return _objectSpread({}, state, {\n    isAuthenticated: true,\n    user: _objectSpread({}, user, {\n      createdAt: user.created_at,\n      visitedAt: user.visited_at\n    })\n  }); // const hasJwt = !!localStorage.getItem('jwt_token')\n  // state = {\n  //     ...state,\n  // };\n  //\n  // if (hasJwt) {\n  //     state.isAuthenticated = true\n  //\n  //     if (!!payload) {\n  //         state.user = {\n  //             ...payload,\n  //             createdAt: payload.created_at,\n  //             visitedAt: payload.visited_at,\n  //         }\n  //     }\n  // }\n  //\n  // return state\n};\n\nconst authLogin = (state, payload) => {\n  const jwtToken = payload.token;\n  const user = payload.user;\n  auth.setToken(jwtToken);\n  return _objectSpread({}, state, {\n    isAuthenticated: true,\n    user: _objectSpread({}, user, {\n      createdAt: user.created_at,\n      visitedAt: user.visited_at\n    })\n  });\n};\n\nconst authLogout = state => {\n  localStorage.removeItem('jwt_token');\n  return _objectSpread({}, state, {\n    isAuthenticated: false,\n    user\n  });\n};","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/reducers.js"],"names":["types","axios","auth","user","user_id","steamid","nickname","avatar","balance","group","createdAt","visitedAt","initialState","isAuthenticated","authReducer","state","type","payload","AUTH_LOGIN","authLogin","AUTH_LOGOUT","authLogout","AUTH_ME","authMe","created_at","visited_at","jwtToken","token","setToken","localStorage","removeItem"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE,IADA;AAETC,EAAAA,OAAO,EAAE,IAFA;AAGTC,EAAAA,QAAQ,EAAE,IAHD;AAITC,EAAAA,MAAM,EAAE,IAJC;AAKTC,EAAAA,OAAO,EAAE,IALA;AAMTC,EAAAA,KAAK,EAAE,IANE;AAOTC,EAAAA,SAAS,EAAE,IAPF;AAQTC,EAAAA,SAAS,EAAE;AARF,CAAb;AAWA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBV,EAAAA;AAFiB,CAArB;AAKA,eAAe,SAASW,WAAT,CAAqBC,KAAK,GAAGH,YAA7B,EAA2C;AAACI,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAA3C,EAAmE;AAC9E,UAAQD,IAAR;AACI,SAAKhB,KAAK,CAACkB,UAAX;AACI,aAAOC,SAAS,CAACJ,KAAD,EAAQE,OAAR,CAAhB;;AACJ,SAAKjB,KAAK,CAACoB,WAAX;AACI,aAAOC,UAAU,CAACN,KAAD,CAAjB;;AACJ,SAAKf,KAAK,CAACsB,OAAX;AACI,aAAOC,MAAM,CAACR,KAAD,EAAQE,OAAR,CAAb;;AACJ;AACI,aAAOF,KAAP;AARR;AAUH;AAAA;;AAED,MAAMQ,MAAM,GAAG,CAACR,KAAD,EAAQE,OAAR,KAAoB;AAC/B,QAAMd,IAAI,GAAGc,OAAO,CAACd,IAArB;AAEA,2BACOY,KADP;AAEIF,IAAAA,eAAe,EAAE,IAFrB;AAGIV,IAAAA,IAAI,oBACGA,IADH;AAEAO,MAAAA,SAAS,EAAEP,IAAI,CAACqB,UAFhB;AAGAb,MAAAA,SAAS,EAAER,IAAI,CAACsB;AAHhB;AAHR,KAH+B,CAa/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA/BD;;AAiCA,MAAMN,SAAS,GAAG,CAACJ,KAAD,EAAQE,OAAR,KAAoB;AAClC,QAAMS,QAAQ,GAAGT,OAAO,CAACU,KAAzB;AACA,QAAMxB,IAAI,GAAGc,OAAO,CAACd,IAArB;AACAD,EAAAA,IAAI,CAAC0B,QAAL,CAAcF,QAAd;AAEA,2BACOX,KADP;AAEIF,IAAAA,eAAe,EAAE,IAFrB;AAGIV,IAAAA,IAAI,oBACGA,IADH;AAEAO,MAAAA,SAAS,EAAEP,IAAI,CAACqB,UAFhB;AAGAb,MAAAA,SAAS,EAAER,IAAI,CAACsB;AAHhB;AAHR;AASH,CAdD;;AAgBA,MAAMJ,UAAU,GAAIN,KAAD,IAAW;AAC1Bc,EAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AAEA,2BACOf,KADP;AAEIF,IAAAA,eAAe,EAAE,KAFrB;AAGIV,IAAAA;AAHJ;AAKH,CARD","sourcesContent":["import * as types from \"./types\";\r\nimport axios from 'axios'\r\nimport auth from \"../../utils/auth\";\r\n\r\nconst user = {\r\n    user_id: null,\r\n    steamid: null,\r\n    nickname: null,\r\n    avatar: null,\r\n    balance: null,\r\n    group: null,\r\n    createdAt: null,\r\n    visitedAt: null\r\n};\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user\r\n};\r\n\r\nexport default function authReducer(state = initialState, {type, payload = null}) {\r\n    switch (type) {\r\n        case types.AUTH_LOGIN:\r\n            return authLogin(state, payload);\r\n        case types.AUTH_LOGOUT:\r\n            return authLogout(state);\r\n        case types.AUTH_ME:\r\n            return authMe(state, payload);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst authMe = (state, payload) => {\r\n    const user = payload.user;\r\n\r\n    return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: {\r\n            ...user,\r\n            createdAt: user.created_at,\r\n            visitedAt: user.visited_at,\r\n        }\r\n    }\r\n\r\n    // const hasJwt = !!localStorage.getItem('jwt_token')\r\n    // state = {\r\n    //     ...state,\r\n    // };\r\n    //\r\n    // if (hasJwt) {\r\n    //     state.isAuthenticated = true\r\n    //\r\n    //     if (!!payload) {\r\n    //         state.user = {\r\n    //             ...payload,\r\n    //             createdAt: payload.created_at,\r\n    //             visitedAt: payload.visited_at,\r\n    //         }\r\n    //     }\r\n    // }\r\n    //\r\n    // return state\r\n};\r\n\r\nconst authLogin = (state, payload) => {\r\n    const jwtToken = payload.token;\r\n    const user = payload.user;\r\n    auth.setToken(jwtToken)\r\n\r\n    return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: {\r\n            ...user,\r\n            createdAt: user.created_at,\r\n            visitedAt: user.visited_at,\r\n        }\r\n    }\r\n};\r\n\r\nconst authLogout = (state) => {\r\n    localStorage.removeItem('jwt_token');\r\n\r\n    return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}