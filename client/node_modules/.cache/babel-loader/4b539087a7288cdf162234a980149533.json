{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\components\\\\common\\\\form_components.js\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200\n  },\n  cssLabel: {\n    color: 'green'\n  },\n  cssOutlinedInput: {\n    \"&:not(hover):not($disabled):not($cssFocused):not($error) $notchedOutline\": {\n      borderColor: \"red\" //default\n\n    },\n    \"&:hover:not($disabled):not($cssFocused):not($error) $notchedOutline\": {\n      borderColor: \"blue\" //hovered\n\n    },\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: \"purple\" //focused\n\n    }\n  },\n  notchedOutline: {},\n  cssFocused: {},\n  error: {},\n  disabled: {}\n});\n\nexport function TextInput(props) {\n  const classes = useStyles();\n  return React.createElement(TextField, {\n    id: \"standard-name\",\n    label: \"Name\",\n    className: classes.textField,\n    value: this.state.name,\n    onChange: this.handleChange('name'),\n    margin: \"normal\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      classes: {\n        root: classes.cssLabel,\n        focused: classes.cssFocused\n      }\n    },\n    InputProps: {\n      classes: {\n        root: classes.cssOutlinedInput,\n        focused: classes.cssFocused,\n        notchedOutline: classes.notchedOutline\n      },\n      inputMode: \"numeric\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  });\n}\nexport function Title(_ref) {\n  let text = _ref.text,\n      props = _objectWithoutProperties(_ref, [\"text\"]);\n\n  return React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    align: \"center\",\n    color: \"textPrimary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, text);\n}\nexport const FormWrapper = styled(Container)`\n        width: auto;\n        margin-left: ${({\n  theme\n}) => theme.spacing(2)}px;\n        margin-right: ${({\n  theme\n}) => theme.spacing(2)}px;\n        ${({\n  theme\n}) => theme.breakpoints.up(600 + theme.spacing(2) * 2)} {\n            width: 600px;\n            margin-left: auto;\n            margin-right: auto;\n        };\n`;\nexport const InnerFormSpacer = styled(Paper)`\n        margin-bottom: ${({\n  theme\n}) => theme.spacing(3)}px;\n        padding: ${({\n  theme\n}) => theme.spacing(2)}px;\n        ${({\n  theme\n}) => theme.breakpoints.up(600 + theme.spacing(3) * 2)} {\n            margin-bottom: ${({\n  theme\n}) => theme.spacing(6)}px;\n            padding: ${({\n  theme\n}) => theme.spacing(3)}px;\n        },\n`;\nexport const Btn = styled(Button)`\n    margin-top: ${({\n  theme\n}) => theme.spacing(3)}px;\n    margin-left: ${({\n  theme\n}) => theme.spacing(1)}px;\n`;\nexport const ButtonsGroup = styled.div`\n        display: flex;\n        justify-content: flex-start;\n                \n        ${props => props.left && `justify-content: flex-start;`}\n        ${props => props.center && `justify-content: center;`}\n        ${props => props.right && `justify-content: flex-end;`}\n`;","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/components/common/form_components.js"],"names":["styled","Button","Container","Paper","Typography","React","TextField","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","width","cssLabel","color","cssOutlinedInput","borderColor","notchedOutline","cssFocused","error","disabled","TextInput","props","classes","useStyles","state","name","handleChange","root","focused","inputMode","Title","text","FormWrapper","breakpoints","up","InnerFormSpacer","Btn","ButtonsGroup","div","left","center","right"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACjBC,EAAAA,SAAS,EAAE;AACHC,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GADM;AAKjBC,EAAAA,SAAS,EAAE;AACHC,IAAAA,UAAU,EAAEL,KAAK,CAACM,OAAN,CAAcC,IADvB;AAEHC,IAAAA,WAAW,EAAER,KAAK,CAACM,OAAN,CAAcC,IAFxB;AAGHE,IAAAA,KAAK,EAAE;AAHJ,GALM;AAWjBC,EAAAA,QAAQ,EAAE;AACFC,IAAAA,KAAK,EAAG;AADN,GAXO;AAejBC,EAAAA,gBAAgB,EAAE;AACV,gFAA4E;AACpEC,MAAAA,WAAW,EAAE,KADuD,CACjD;;AADiD,KADlE;AAIV,2EAAuE;AAC/DA,MAAAA,WAAW,EAAE,MADkD,CAC3C;;AAD2C,KAJ7D;AAOV,oCAAgC;AACxBA,MAAAA,WAAW,EAAE,QADW,CACF;;AADE;AAPtB,GAfD;AA0BjBC,EAAAA,cAAc,EAAE,EA1BC;AA2BjBC,EAAAA,UAAU,EAAE,EA3BK;AA4BjBC,EAAAA,KAAK,EAAE,EA5BU;AA6BjBC,EAAAA,QAAQ,EAAE;AA7BO,CAAL,CAApB;;AAiCA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC7B,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,SACI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,eADP;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,SAAS,EAAED,OAAO,CAAChB,SAHvB;AAII,IAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWC,IAJtB;AAKI,IAAA,QAAQ,EAAE,KAAKC,YAAL,CAAkB,MAAlB,CALd;AAMI,IAAA,MAAM,EAAC,QANX;AAOI,IAAA,OAAO,EAAC,UAPZ;AAQI,IAAA,eAAe,EAAE;AACbJ,MAAAA,OAAO,EAAE;AACLK,QAAAA,IAAI,EAAEL,OAAO,CAACV,QADT;AAELgB,QAAAA,OAAO,EAAEN,OAAO,CAACL;AAFZ;AADI,KARrB;AAcI,IAAA,UAAU,EAAE;AACRK,MAAAA,OAAO,EAAE;AACLK,QAAAA,IAAI,EAAEL,OAAO,CAACR,gBADT;AAELc,QAAAA,OAAO,EAAEN,OAAO,CAACL,UAFZ;AAGLD,QAAAA,cAAc,EAAEM,OAAO,CAACN;AAHnB,OADD;AAMRa,MAAAA,SAAS,EAAE;AANH,KAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAyBH;AAED,OAAO,SAASC,KAAT,OAAiC;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAARV,KAAQ;;AACpC,SACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAwC,IAAA,KAAK,EAAC,QAA9C;AAAuD,IAAA,KAAK,EAAC,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKU,IADL,CADJ;AAKH;AAED,OAAO,MAAMC,WAAW,GAAGtC,MAAM,CAACE,SAAD,CAAY;;uBAEtB,CAAC;AAACM,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAACM,OAAN,CAAc,CAAd,CAAiB;wBAC7B,CAAC;AAACN,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAACM,OAAN,CAAc,CAAd,CAAiB;UAC5C,CAAC;AAACN,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAAC+B,WAAN,CAAkBC,EAAlB,CAAqB,MAAMhC,KAAK,CAACM,OAAN,CAAc,CAAd,IAAmB,CAA9C,CAAiD;;;;;CAJjE;AAWP,OAAO,MAAM2B,eAAe,GAAGzC,MAAM,CAACG,KAAD,CAAQ;yBACpB,CAAC;AAACK,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAACM,OAAN,CAAc,CAAd,CAAiB;mBACpC,CAAC;AAACN,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAACM,OAAN,CAAc,CAAd,CAAiB;UACvC,CAAC;AAACN,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAAC+B,WAAN,CAAkBC,EAAlB,CAAqB,MAAMhC,KAAK,CAACM,OAAN,CAAc,CAAd,IAAmB,CAA9C,CAAiD;6BAC3C,CAAC;AAACN,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAACM,OAAN,CAAc,CAAd,CAAiB;uBACpC,CAAC;AAACN,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAACM,OAAN,CAAc,CAAd,CAAiB;;CAL9C;AASP,OAAO,MAAM4B,GAAG,GAAG1C,MAAM,CAACC,MAAD,CAAS;kBAChB,CAAC;AAACO,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAACM,OAAN,CAAc,CAAd,CAAiB;mBAC7B,CAAC;AAACN,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAACM,OAAN,CAAc,CAAd,CAAiB;CAF1C;AAKP,OAAO,MAAM6B,YAAY,GAAG3C,MAAM,CAAC4C,GAAI;;;;UAI5BjB,KAAD,IAAWA,KAAK,CAACkB,IAAN,IAAe,8BAA8B;UACvDlB,KAAD,IAAWA,KAAK,CAACmB,MAAN,IAAiB,0BAA0B;UACrDnB,KAAD,IAAWA,KAAK,CAACoB,KAAN,IAAgB,4BAA4B;CAN1D","sourcesContent":["import styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n        container: {\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n        },\r\n        textField: {\r\n                marginLeft: theme.spacing.unit,\r\n                marginRight: theme.spacing.unit,\r\n                width: 200,\r\n        },\r\n\r\n        cssLabel: {\r\n                color : 'green'\r\n        },\r\n\r\n        cssOutlinedInput: {\r\n                \"&:not(hover):not($disabled):not($cssFocused):not($error) $notchedOutline\": {\r\n                        borderColor: \"red\" //default\r\n                },\r\n                \"&:hover:not($disabled):not($cssFocused):not($error) $notchedOutline\": {\r\n                        borderColor: \"blue\" //hovered\r\n                },\r\n                \"&$cssFocused $notchedOutline\": {\r\n                        borderColor: \"purple\" //focused\r\n                }\r\n        },\r\n        notchedOutline: {},\r\n        cssFocused: {},\r\n        error: {},\r\n        disabled: {}\r\n\r\n});\r\n\r\nexport function TextInput(props) {\r\n    const classes = useStyles()\r\n    return (\r\n        <TextField\r\n            id=\"standard-name\"\r\n            label=\"Name\"\r\n            className={classes.textField}\r\n            value={this.state.name}\r\n            onChange={this.handleChange('name')}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n                classes: {\r\n                    root: classes.cssLabel,\r\n                    focused: classes.cssFocused,\r\n                },\r\n            }}\r\n            InputProps={{\r\n                classes: {\r\n                    root: classes.cssOutlinedInput,\r\n                    focused: classes.cssFocused,\r\n                    notchedOutline: classes.notchedOutline,\r\n                },\r\n                inputMode: \"numeric\"\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport function Title({text, ...props}) {\r\n    return (\r\n        <Typography component=\"h1\" variant=\"h5\" align=\"center\" color=\"textPrimary\">\r\n            {text}\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport const FormWrapper = styled(Container)`\r\n        width: auto;\r\n        margin-left: ${({theme}) => theme.spacing(2)}px;\r\n        margin-right: ${({theme}) => theme.spacing(2)}px;\r\n        ${({theme}) => theme.breakpoints.up(600 + theme.spacing(2) * 2)} {\r\n            width: 600px;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n        };\r\n`\r\n\r\nexport const InnerFormSpacer = styled(Paper)`\r\n        margin-bottom: ${({theme}) => theme.spacing(3)}px;\r\n        padding: ${({theme}) => theme.spacing(2)}px;\r\n        ${({theme}) => theme.breakpoints.up(600 + theme.spacing(3) * 2)} {\r\n            margin-bottom: ${({theme}) => theme.spacing(6)}px;\r\n            padding: ${({theme}) => theme.spacing(3)}px;\r\n        },\r\n`\r\n\r\nexport const Btn = styled(Button)`\r\n    margin-top: ${({theme}) => theme.spacing(3)}px;\r\n    margin-left: ${({theme}) => theme.spacing(1)}px;\r\n`\r\n\r\nexport const ButtonsGroup = styled.div`\r\n        display: flex;\r\n        justify-content: flex-start;\r\n                \r\n        ${(props) => props.left && `justify-content: flex-start;`}\r\n        ${(props) => props.center && `justify-content: center;`}\r\n        ${(props) => props.right && `justify-content: flex-end;`}\r\n`"]},"metadata":{},"sourceType":"module"}