{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\components\\\\CompForm\\\\CompFormContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport SecondaryLayout from \"../_layouts/default/SecondaryLayout\";\nimport PageCaptionSpacer from \"../common/PageCaptionSpacer\";\nimport { FormWrapper, InnerFormSpacer, Title } from \"../common/form_components\";\nimport CompFormInputs from \"./CompFormInputs/CompFormInputs\";\nimport CompFormSummarize from \"./CompFormSummarize/CompFormSummarize\";\nimport CompFormControls from \"./CompFormControls/CompFormControls\";\n\nfunction CompFormContainer(props) {\n  const balance = props.user.balance;\n\n  const getDefaultState = () => {\n    return {\n      typeVariant: {\n        long: false,\n        short: false\n      },\n      inputs: {\n        username: {\n          label: \"Your nickname\",\n          value: \"\"\n        },\n        channel_name: {\n          label: \"Channel\",\n          value: \"\"\n        }\n      }\n    };\n  };\n\n  const _React$useState = React.useState(getDefaultState),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const handleTypeVariant = name => event => {\n    setState(_objectSpread({}, state, {\n      typeVariant: _objectSpread({}, state.typeVariant, {\n        [name]: event.target.checked\n      })\n    }));\n  };\n\n  const handleInputs = event => {\n    const inpName = event.target.id;\n    const inpValue = event.target.value;\n    setState(_objectSpread({}, state, {\n      inputs: _objectSpread({}, state.inputs, {\n        [inpName]: _objectSpread({}, state.inputs[inpName], {\n          value: inpValue\n        })\n      })\n    }));\n  };\n\n  const onClear = e => {\n    alert('clear');\n  };\n\n  const onBack = e => {\n    alert('back');\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    alert('ОК! Повесь обработчик на кнопку или вызови нужную функцию изнутри обработчика формы');\n  };\n\n  return React.createElement(SecondaryLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(PageCaptionSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(FormWrapper, {\n    maxWidth: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(InnerFormSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Title, {\n    text: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(CompFormInputs, {\n    inputs: state,\n    handlers: {\n      handleTypeVariant,\n      handleInputs\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(CompFormSummarize, {\n    balance: balance,\n    price: 150,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(CompFormControls, {\n    onClear: onClear,\n    onBack: onBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })))));\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompFormContainer);","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/components/CompForm/CompFormContainer.js"],"names":["React","connect","SecondaryLayout","PageCaptionSpacer","FormWrapper","InnerFormSpacer","Title","CompFormInputs","CompFormSummarize","CompFormControls","CompFormContainer","props","balance","user","getDefaultState","typeVariant","long","short","inputs","username","label","value","channel_name","useState","state","setState","handleTypeVariant","name","event","target","checked","handleInputs","inpName","id","inpValue","onClear","e","alert","onBack","onSubmit","preventDefault","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport SecondaryLayout from \"../_layouts/default/SecondaryLayout\";\r\nimport PageCaptionSpacer from \"../common/PageCaptionSpacer\";\r\nimport {FormWrapper, InnerFormSpacer, Title} from \"../common/form_components\";\r\nimport CompFormInputs from \"./CompFormInputs/CompFormInputs\";\r\nimport CompFormSummarize from \"./CompFormSummarize/CompFormSummarize\";\r\nimport CompFormControls from \"./CompFormControls/CompFormControls\";\r\n\r\n\r\nfunction CompFormContainer(props) {\r\n    const {balance} = props.user\r\n\r\n    const getDefaultState = () => {\r\n        return ({\r\n            typeVariant: {\r\n                long: false,\r\n                short: false,\r\n            },\r\n            inputs: {\r\n                username: {\r\n                    label: \"Your nickname\",\r\n                    value: \"\",\r\n                },\r\n                channel_name: {\r\n                    label: \"Channel\",\r\n                    value: \"\",\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    const [state, setState] = React.useState(getDefaultState);\r\n\r\n    const handleTypeVariant = name => event => {\r\n        setState({\r\n            ...state,\r\n            typeVariant: {\r\n                ...state.typeVariant,\r\n                [name]: event.target.checked,\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleInputs = event => {\r\n        const inpName = event.target.id\r\n        const inpValue = event.target.value\r\n\r\n        setState({\r\n            ...state,\r\n            inputs: {\r\n                ...state.inputs,\r\n                [inpName]: {\r\n                    ...state.inputs[inpName],\r\n                    value: inpValue\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const onClear = e => {\r\n        alert('clear')\r\n    }\r\n\r\n    const onBack = e => {\r\n        alert('back')\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        alert('ОК! Повесь обработчик на кнопку или вызови нужную функцию изнутри обработчика формы')\r\n    }\r\n\r\n    return (\r\n        <SecondaryLayout>\r\n            <PageCaptionSpacer/>\r\n\r\n            <FormWrapper maxWidth=\"xl\">\r\n                <InnerFormSpacer>\r\n                    <Title text=\"Форма заказа\"/>\r\n\r\n                    <form noValidate onSubmit={onSubmit}>\r\n                        <CompFormInputs inputs={state} handlers={{handleTypeVariant, handleInputs}}/>\r\n                        <CompFormSummarize balance={balance} price={150}/>\r\n                        <CompFormControls onClear={onClear} onBack={onBack}/>\r\n                    </form>\r\n\r\n                </InnerFormSpacer>\r\n            </FormWrapper>\r\n\r\n        </SecondaryLayout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompFormContainer)"]},"metadata":{},"sourceType":"module"}