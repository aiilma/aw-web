{"ast":null,"code":"import _slicedToArray from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\components\\\\CompForm\\\\CompFormContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport SecondaryLayout from \"../_layouts/default/SecondaryLayout\";\nimport PageCaptionSpacer from \"../common/PageCaptionSpacer\";\nimport { FormWrapper, InnerFormSpacer, Title } from \"../common/form_components\";\nimport CompFormInputs from \"./CompFormInputs/CompFormInputs\";\nimport CompFormSummarize from \"./CompFormSummarize/CompFormSummarize\";\nimport CompFormControls from \"./CompFormControls/CompFormControls\";\n\nfunction CompFormContainer(props) {\n  const balance = props.user.balance;\n  const compMeta = props.compData;\n\n  const getDefaultState = () => {\n    let typeVariant = {\n      long: {\n        value: false,\n        disabled: false\n      },\n      short: {\n        value: false,\n        disabled: false\n      }\n    };\n    let inputs = {};\n\n    if (Object.entries(compMeta.inputs).length > 0) {\n      inputs = _objectSpread({}, compMeta.inputs);\n      Object.keys(inputs).forEach(propName => {\n        inputs[propName] = _objectSpread({}, compMeta.inputs[propName], {\n          value: ''\n        });\n      });\n    }\n\n    return {\n      typeVariant,\n      inputs\n    };\n  };\n\n  const _React$useState = React.useState(getDefaultState),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  console.log(state);\n\n  const handleTypeVariant = name => event => {\n    setState(_objectSpread({}, state, {\n      typeVariant: _objectSpread({}, state.typeVariant, {\n        [name]: _objectSpread({}, state.typeVariant[name].value = event.target.checked)\n      })\n    }));\n  };\n\n  const handleInputs = event => {\n    const inpName = event.target.id;\n    const inpValue = event.target.value;\n    setState(_objectSpread({}, state, {\n      inputs: _objectSpread({}, state.inputs, {\n        [inpName]: _objectSpread({}, state.inputs[inpName], {\n          value: inpValue\n        })\n      })\n    }));\n  };\n\n  const onClear = e => {\n    setState(getDefaultState()); // clear session / localStorage (action)\n  };\n\n  const onBack = e => {\n    props.history.goBack();\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    alert('ОК! Повесь обработчик на кнопку или вызови нужную функцию изнутри обработчика формы');\n  };\n\n  return React.createElement(SecondaryLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(PageCaptionSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(FormWrapper, {\n    maxWidth: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(InnerFormSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Title, {\n    text: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(CompFormInputs, {\n    inputs: state,\n    handlers: {\n      handleTypeVariant,\n      handleInputs\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(CompFormSummarize, {\n    balance: balance,\n    price: compMeta.price,\n    title: compMeta.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(CompFormControls, {\n    onClear: onClear,\n    onBack: onBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })))));\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  compData: state.orderFormPage\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompFormContainer);","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/components/CompForm/CompFormContainer.js"],"names":["React","connect","SecondaryLayout","PageCaptionSpacer","FormWrapper","InnerFormSpacer","Title","CompFormInputs","CompFormSummarize","CompFormControls","CompFormContainer","props","balance","user","compMeta","compData","getDefaultState","typeVariant","long","value","disabled","short","inputs","Object","entries","length","keys","forEach","propName","useState","state","setState","console","log","handleTypeVariant","name","event","target","checked","handleInputs","inpName","id","inpValue","onClear","e","onBack","history","goBack","onSubmit","preventDefault","alert","price","title","mapStateToProps","orderFormPage","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport SecondaryLayout from \"../_layouts/default/SecondaryLayout\";\r\nimport PageCaptionSpacer from \"../common/PageCaptionSpacer\";\r\nimport {FormWrapper, InnerFormSpacer, Title} from \"../common/form_components\";\r\nimport CompFormInputs from \"./CompFormInputs/CompFormInputs\";\r\nimport CompFormSummarize from \"./CompFormSummarize/CompFormSummarize\";\r\nimport CompFormControls from \"./CompFormControls/CompFormControls\";\r\n\r\n\r\nfunction CompFormContainer(props) {\r\n    const {balance} = props.user\r\n    const compMeta = props.compData\r\n\r\n    const getDefaultState = () => {\r\n        let typeVariant = {\r\n            long: {\r\n                value: false,\r\n                disabled: false\r\n            },\r\n            short: {\r\n                value: false,\r\n                disabled: false\r\n            },\r\n        }\r\n        let inputs = {}\r\n\r\n        if (Object.entries(compMeta.inputs).length > 0) {\r\n            inputs = {\r\n                ...compMeta.inputs\r\n            }\r\n\r\n            Object.keys(inputs).forEach((propName) => {\r\n                inputs[propName] = {\r\n                    ...compMeta.inputs[propName],\r\n                    value: '',\r\n                }\r\n            })\r\n        }\r\n\r\n        return ({\r\n            typeVariant,\r\n            inputs,\r\n        })\r\n    }\r\n\r\n    const [state, setState] = React.useState(getDefaultState);\r\n    console.log(state)\r\n\r\n    const handleTypeVariant = name => event => {\r\n        setState({\r\n            ...state,\r\n            typeVariant: {\r\n                ...state.typeVariant,\r\n                [name]: {\r\n                    ...state.typeVariant[name].value = event.target.checked,\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleInputs = event => {\r\n        const inpName = event.target.id\r\n        const inpValue = event.target.value\r\n\r\n        setState({\r\n            ...state,\r\n            inputs: {\r\n                ...state.inputs,\r\n                [inpName]: {\r\n                    ...state.inputs[inpName],\r\n                    value: inpValue\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const onClear = e => {\r\n        setState(getDefaultState())\r\n        // clear session / localStorage (action)\r\n    }\r\n    const onBack = e => {\r\n        props.history.goBack()\r\n    }\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        alert('ОК! Повесь обработчик на кнопку или вызови нужную функцию изнутри обработчика формы')\r\n    }\r\n\r\n    return (\r\n        <SecondaryLayout>\r\n            <PageCaptionSpacer/>\r\n\r\n            <FormWrapper maxWidth=\"xl\">\r\n                <InnerFormSpacer>\r\n                    <Title text=\"Форма заказа\"/>\r\n\r\n                    <form noValidate onSubmit={onSubmit}>\r\n                        <CompFormInputs inputs={state} handlers={{handleTypeVariant, handleInputs}}/>\r\n                        <CompFormSummarize balance={balance} price={compMeta.price} title={compMeta.title}/>\r\n                        <CompFormControls onClear={onClear} onBack={onBack}/>\r\n                    </form>\r\n\r\n                </InnerFormSpacer>\r\n            </FormWrapper>\r\n\r\n        </SecondaryLayout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    compData: state.orderFormPage\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompFormContainer)"]},"metadata":{},"sourceType":"module"}