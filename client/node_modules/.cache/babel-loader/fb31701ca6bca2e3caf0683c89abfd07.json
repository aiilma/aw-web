{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { withFormik } from \"formik\";\nimport { checkOnMax, checkOnMin, checkOnRequired } from \"../../../store/utils/form_helpers\";\nimport OrderForm from \"./Form\";\nimport { withSnackbar } from \"notistack\";\nimport { withRouter } from \"react-router-dom\";\n\nconst getDefaultValues = (_ref) => {\n  let typeVariant = _ref.typeVariant,\n      ph = _ref.ph,\n      state = _objectWithoutProperties(_ref, [\"typeVariant\", \"ph\"]);\n\n  let values = {\n    typeVariant: typeVariant === 1 ? '' : typeVariant === 2 ? \"long\" : \"short\"\n  }; // inputs\n\n  if (Object.keys(ph).length > 0) {\n    values.ph = {};\n    Object.keys(ph).forEach(keyName => {\n      values.ph[keyName] = \"\";\n    });\n  }\n\n  return values;\n};\n\nconst EnhancedForm = withFormik({\n  mapPropsToValues: props => getDefaultValues(props.orderFormData),\n  // Custom sync validation\n  validate: (values, _ref2) => {\n    let _ref2$orderFormData = _ref2.orderFormData,\n        ph = _ref2$orderFormData.ph,\n        typeVariant = _ref2$orderFormData.typeVariant,\n        props = _objectWithoutProperties(_ref2, [\"orderFormData\"]);\n\n    const errors = {};\n    const rules = {};\n    Object.keys(ph).forEach(keyName => {\n      rules[keyName] = ph[keyName].rules;\n    });\n    if (typeVariant === 1 && !values.typeVariant) errors[\"typeVariant\"] = \"Required\";\n    Object.keys(rules).forEach(keyName => {\n      if (rules[keyName].hasOwnProperty('required')) {\n        if (rules[keyName].required === true && !checkOnRequired(values.ph[keyName])) {\n          if (!errors.ph) errors.ph = {};\n          errors.ph[keyName] = 'Обязательно к заполнению';\n        }\n      }\n\n      if (rules[keyName].hasOwnProperty('min')) {\n        let limit = rules[keyName].min;\n\n        if (!checkOnMin(values.ph[keyName], limit)) {\n          if (!errors.ph) errors.ph = {};\n          errors.ph[keyName] = `Минимальная длина ${limit} символов`;\n        }\n      }\n\n      if (rules[keyName].hasOwnProperty('max')) {\n        let limit = rules[keyName].max;\n\n        if (!checkOnMax(values.ph[keyName], limit)) {\n          if (!errors.ph) errors.ph = {};\n          errors.ph[keyName] = `Максимальная длина ${limit} символов`;\n        }\n      }\n    });\n    return errors;\n  },\n  handleSubmit: (values, _ref3) => {\n    let setSubmitting = _ref3.setSubmitting,\n        props = _objectWithoutProperties(_ref3, [\"setSubmitting\"]);\n\n    const _props$props = props.props,\n          makeOrderRequest = _props$props.makeOrderRequest,\n          enqueueSnackbar = _props$props.enqueueSnackbar,\n          history = _props$props.history;\n\n    const data = _objectSpread({}, values);\n\n    setSubmitting(true);\n    makeOrderRequest(data).then(res => {\n      // success\n      setSubmitting(false);\n      console.log(res); // history.push(`/compositions`)\n      // разделить пополам редьюсер и скомбайнить\n      // сделать крутилку под isPosting\n\n      enqueueSnackbar('Заявка на рисунок успешно оформлена', {\n        variant: 'success',\n        autoHideDuration: 5000\n      });\n    }, err => {\n      // error\n      setSubmitting(false);\n      console.log(err); // debugger\n\n      enqueueSnackbar('Упс! Произошла ошибка', {\n        variant: 'error',\n        autoHideDuration: 5000\n      });\n    });\n  },\n  enableReinitialize: true,\n  displayName: 'OrderForm'\n})(OrderForm);\nexport default withSnackbar(withRouter(EnhancedForm));","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/CompOrderForm/EnhancedForm.js"],"names":["React","withFormik","checkOnMax","checkOnMin","checkOnRequired","OrderForm","withSnackbar","withRouter","getDefaultValues","typeVariant","ph","state","values","Object","keys","length","forEach","keyName","EnhancedForm","mapPropsToValues","props","orderFormData","validate","errors","rules","hasOwnProperty","required","limit","min","max","handleSubmit","setSubmitting","makeOrderRequest","enqueueSnackbar","history","data","then","res","console","log","variant","autoHideDuration","err","enableReinitialize","displayName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {withFormik} from \"formik\";\r\nimport {checkOnMax, checkOnMin, checkOnRequired} from \"../../../store/utils/form_helpers\";\r\nimport OrderForm from \"./Form\";\r\nimport {withSnackbar} from \"notistack\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst getDefaultValues = ({typeVariant, ph, ...state}) => {\r\n    let values = {\r\n        typeVariant: typeVariant === 1 ? '' : typeVariant === 2 ? \"long\" : \"short\",\r\n    }\r\n\r\n    // inputs\r\n    if (Object.keys(ph).length > 0) {\r\n        values.ph = {}\r\n        Object.keys(ph).forEach(keyName => {\r\n            values.ph[keyName] = \"\"\r\n        })\r\n    }\r\n    return values\r\n}\r\n\r\nconst EnhancedForm = withFormik({\r\n    mapPropsToValues: (props) => (getDefaultValues(props.orderFormData)),\r\n\r\n    // Custom sync validation\r\n    validate: (values, {orderFormData: {ph, typeVariant}, ...props}) => {\r\n        const errors = {};\r\n        const rules = {}\r\n\r\n        Object.keys(ph).forEach(keyName => {\r\n            rules[keyName] = ph[keyName].rules\r\n        })\r\n\r\n        if (typeVariant === 1 && !values.typeVariant) errors[\"typeVariant\"] = \"Required\"\r\n\r\n        Object.keys(rules).forEach(keyName => {\r\n            if (rules[keyName].hasOwnProperty('required')) {\r\n                if (rules[keyName].required === true && !checkOnRequired(values.ph[keyName])) {\r\n                    if (!errors.ph) errors.ph = {}\r\n                    errors.ph[keyName] = 'Обязательно к заполнению'\r\n                }\r\n            }\r\n            if (rules[keyName].hasOwnProperty('min')) {\r\n                let limit = rules[keyName].min\r\n                if (!checkOnMin(values.ph[keyName], limit)) {\r\n                    if (!errors.ph) errors.ph = {}\r\n                    errors.ph[keyName] = `Минимальная длина ${limit} символов`\r\n                }\r\n            }\r\n            if (rules[keyName].hasOwnProperty('max')) {\r\n                let limit = rules[keyName].max\r\n                if (!checkOnMax(values.ph[keyName], limit)) {\r\n                    if (!errors.ph) errors.ph = {}\r\n                    errors.ph[keyName] = `Максимальная длина ${limit} символов`\r\n                }\r\n            }\r\n        })\r\n\r\n        return errors;\r\n    },\r\n\r\n    handleSubmit: (values, {setSubmitting, ...props}) => {\r\n        const {makeOrderRequest, enqueueSnackbar, history} = props.props\r\n\r\n        const data = {\r\n            ...values\r\n        }\r\n\r\n        setSubmitting(true);\r\n        makeOrderRequest(data).then(\r\n            res => {\r\n                // success\r\n                setSubmitting(false);\r\n                console.log(res)\r\n                // history.push(`/compositions`)\r\n                // разделить пополам редьюсер и скомбайнить\r\n                // сделать крутилку под isPosting\r\n\r\n                enqueueSnackbar('Заявка на рисунок успешно оформлена', {\r\n                    variant: 'success',\r\n                    autoHideDuration: 5000,\r\n                });\r\n            },\r\n            err => {\r\n                // error\r\n                setSubmitting(false);\r\n                console.log(err)\r\n                // debugger\r\n                enqueueSnackbar('Упс! Произошла ошибка', {\r\n                    variant: 'error',\r\n                    autoHideDuration: 5000,\r\n                });\r\n            }\r\n        )\r\n    },\r\n\r\n    enableReinitialize: true,\r\n\r\n    displayName: 'OrderForm',\r\n})(OrderForm)\r\n\r\nexport default withSnackbar(withRouter(EnhancedForm))"]},"metadata":{},"sourceType":"module"}