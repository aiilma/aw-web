{"ast":null,"code":"import _objectWithoutProperties from\"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Redirect,Route}from'react-router-dom';import{me}from\"../store/ducks/auth/operations\";import{connect}from\"react-redux\";import UserApi from\"../store/utils/UserApi\";import{withSnackbar}from\"notistack\";// import SecondaryLayout from \"../views/layout/SecondaryLayout\";\nvar PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);// React.useEffect(() => {\n//     rest.me()\n//         .then(data => {\n//             setLoggedIn(data)})\n//         .catch(err => setLoggedIn(err));\n//     // eslint-disable-next-line\n// }, []);\n// if (!loggedIn) {\n//     return null;\n// }\n// console.log(loggedIn.id)\nif(!UserApi.isAuthenticated){rest.enqueueSnackbar('You must be logged in.',{variant:'info',autoHideDuration:5000});}return React.createElement(Route,Object.assign({},rest,{render:function render(props){return!UserApi.isAuthenticated?React.createElement(Redirect,{to:{pathname:'/',state:{from:props.location}}}):React.createElement(Component,props);}}));};export default withSnackbar(connect(null,{me:me})(PrivateRoute));","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/routes/Private.js"],"names":["React","Redirect","Route","me","connect","UserApi","withSnackbar","PrivateRoute","Component","component","rest","isAuthenticated","enqueueSnackbar","variant","autoHideDuration","props","pathname","state","from","location"],"mappings":"+IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,QAAR,CAAkBC,KAAlB,KAA8B,kBAA9B,CACA,OAAQC,EAAR,KAAiB,gCAAjB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,OAAQC,YAAR,KAA2B,WAA3B,CACA;AAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAqC,IAAxBC,CAAAA,SAAwB,MAAnCC,SAAmC,CAAVC,IAAU,8CACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,GAAI,CAACL,OAAO,CAACM,eAAb,CAA8B,CAC1BD,IAAI,CAACE,eAAL,CAAqB,wBAArB,CAA+C,CAC3CC,OAAO,CAAE,MADkC,CAE3CC,gBAAgB,CAAE,IAFyB,CAA/C,EAIH,CAED,MACI,qBAAC,KAAD,kBAAWJ,IAAX,EAAiB,MAAM,CAAE,gBAAAK,KAAK,QAC1B,CAACV,OAAO,CAACM,eAAT,CACI,oBAAC,QAAD,EACI,EAAE,CAAE,CACAK,QAAQ,CAAE,GADV,CAEAC,KAAK,CAAE,CAACC,IAAI,CAAEH,KAAK,CAACI,QAAb,CAFP,CADR,EADJ,CAOI,oBAAC,SAAD,CAAeJ,KAAf,CARsB,EAA9B,GADJ,CAaH,CAlCD,CAoCA,cAAeT,CAAAA,YAAY,CAACF,OAAO,CAAC,IAAD,CAAO,CAACD,EAAE,CAAFA,EAAD,CAAP,CAAP,CAAoBI,YAApB,CAAD,CAA3B","sourcesContent":["import React from 'react'\r\nimport {Redirect, Route} from 'react-router-dom'\r\nimport {me} from \"../store/ducks/auth/operations\";\r\nimport {connect} from \"react-redux\";\r\nimport UserApi from \"../store/utils/UserApi\";\r\nimport {withSnackbar} from \"notistack\";\r\n// import SecondaryLayout from \"../views/layout/SecondaryLayout\";\r\n\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    // React.useEffect(() => {\r\n    //     rest.me()\r\n    //         .then(data => {\r\n    //             setLoggedIn(data)})\r\n    //         .catch(err => setLoggedIn(err));\r\n    //     // eslint-disable-next-line\r\n    // }, []);\r\n    // if (!loggedIn) {\r\n    //     return null;\r\n    // }\r\n\r\n    // console.log(loggedIn.id)\r\n\r\n    if (!UserApi.isAuthenticated) {\r\n        rest.enqueueSnackbar('You must be logged in.', {\r\n            variant: 'info',\r\n            autoHideDuration: 5000,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            !UserApi.isAuthenticated ? (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/',\r\n                        state: {from: props.location}\r\n                    }}\r\n                />\r\n            ) : <Component {...props} />\r\n        )}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withSnackbar(connect(null, {me})(PrivateRoute))"]},"metadata":{},"sourceType":"module"}