{"ast":null,"code":"import * as types from \"./types\";\nexport const login = data => {\n  console.log(data); // console.log(data)\n  // if (data.success) {\n\n  const user = data.data.user;\n  let userData = {\n    user_id: user.user_id,\n    steamid: user.steamid,\n    nickname: user.nickname,\n    avatar: user.avatar,\n    balance: user.balance,\n    group: user.group,\n    token: data.data.token,\n    timestamp: new Date().toString()\n  };\n  let authData = {\n    isAuthenticated: true,\n    user: userData\n  }; // save app state with user date in local storage\n\n  localStorage[\"user\"] = JSON.stringify(authData);\n  authLogin(authData); // } else alert(\"failed\");\n};\nexport const logout = () => {\n  const userData = {}; // save app state with user date in local storage\n\n  localStorage[\"user\"] = JSON.stringify(userData);\n  return authLogout();\n};\n\nfunction authLogin(payload) {\n  return {\n    type: types.AUTH_LOGIN,\n    payload\n  };\n}\n\nfunction authLogout(payload) {\n  return {\n    type: types.AUTH_LOGOUT,\n    payload\n  };\n}","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/actions.js"],"names":["types","login","data","console","log","user","userData","user_id","steamid","nickname","avatar","balance","group","token","timestamp","Date","toString","authData","isAuthenticated","localStorage","JSON","stringify","authLogin","logout","authLogout","payload","type","AUTH_LOGIN","AUTH_LOGOUT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAD2B,CAE3B;AACA;;AAH2B,QAIpBG,IAJoB,GAIZH,IAAI,CAACA,IAJO,CAIpBG,IAJoB;AAK3B,MAAIC,QAAQ,GAAG;AACXC,IAAAA,OAAO,EAAEF,IAAI,CAACE,OADH;AAEXC,IAAAA,OAAO,EAAEH,IAAI,CAACG,OAFH;AAGXC,IAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAHJ;AAIXC,IAAAA,MAAM,EAAEL,IAAI,CAACK,MAJF;AAKXC,IAAAA,OAAO,EAAEN,IAAI,CAACM,OALH;AAMXC,IAAAA,KAAK,EAAEP,IAAI,CAACO,KAND;AAOXC,IAAAA,KAAK,EAAEX,IAAI,CAACA,IAAL,CAAUW,KAPN;AAQXC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,QAAX;AARA,GAAf;AAUA,MAAIC,QAAQ,GAAG;AACXC,IAAAA,eAAe,EAAE,IADN;AAEXb,IAAAA,IAAI,EAAEC;AAFK,GAAf,CAf2B,CAoB3B;;AACAa,EAAAA,YAAY,CAAC,MAAD,CAAZ,GAAuBC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAvB;AACAK,EAAAA,SAAS,CAACL,QAAD,CAAT,CAtB2B,CAuB3B;AACH,CAxBM;AA0BP,OAAO,MAAMM,MAAM,GAAG,MAAM;AACxB,QAAMjB,QAAQ,GAAG,EAAjB,CADwB,CAExB;;AACAa,EAAAA,YAAY,CAAC,MAAD,CAAZ,GAAuBC,IAAI,CAACC,SAAL,CAAef,QAAf,CAAvB;AACA,SAAOkB,UAAU,EAAjB;AACH,CALM;;AAOP,SAASF,SAAT,CAAmBG,OAAnB,EAA4B;AACxB,SAAO;AACHC,IAAAA,IAAI,EAAE1B,KAAK,CAAC2B,UADT;AAEHF,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASD,UAAT,CAAoBC,OAApB,EAA6B;AACzB,SAAO;AACHC,IAAAA,IAAI,EAAE1B,KAAK,CAAC4B,WADT;AAEHH,IAAAA;AAFG,GAAP;AAIH","sourcesContent":["import * as types from \"./types\";\r\n\r\nexport const login = (data) => {\r\n    console.log(data)\r\n    // console.log(data)\r\n    // if (data.success) {\r\n    const {user} = data.data\r\n    let userData = {\r\n        user_id: user.user_id,\r\n        steamid: user.steamid,\r\n        nickname: user.nickname,\r\n        avatar: user.avatar,\r\n        balance: user.balance,\r\n        group: user.group,\r\n        token: data.data.token,\r\n        timestamp: new Date().toString()\r\n    };\r\n    let authData = {\r\n        isAuthenticated: true,\r\n        user: userData\r\n    }\r\n\r\n    // save app state with user date in local storage\r\n    localStorage[\"user\"] = JSON.stringify(authData);\r\n    authLogin(authData)\r\n    // } else alert(\"failed\");\r\n}\r\n\r\nexport const logout = () => {\r\n    const userData = {}\r\n    // save app state with user date in local storage\r\n    localStorage[\"user\"] = JSON.stringify(userData);\r\n    return authLogout()\r\n}\r\n\r\nfunction authLogin(payload) {\r\n    return {\r\n        type: types.AUTH_LOGIN,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction authLogout(payload) {\r\n    return {\r\n        type: types.AUTH_LOGOUT,\r\n        payload\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}