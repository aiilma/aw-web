{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\Compositions\\\\CompositionsContainer.js\";\nimport React, { Component } from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport { withRouter } from \"react-router-dom\";\nimport CompositionList from \"./CompositionList\";\nimport { connect } from \"react-redux\";\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\nimport Container from \"@material-ui/core/Container\";\nimport styled from \"styled-components\";\nimport { fetchList, clearList } from \"../../../store/ducks/compositions/operations\";\nimport Preloader from \"../../common/Preloader\";\nimport queryString from 'query-string';\nimport Pagination from \"../../common/Pagination\";\nconst CompListWrapper = styled(Container)`\n        padding-top: ${({\n  theme\n}) => theme.spacing(2)}px;\n        padding-bottom: ${({\n  theme\n}) => theme.spacing(2)}px;\n        background-color: rgba(33,33,33,.95);\n        border-radius: 20px;\n`;\nconst PageCaptionSpacer = styled.div`\n    padding: ${({\n  theme\n}) => theme.spacing(4, 0)};\n`;\n\nclass CompositionsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: null,\n      total: null,\n      per_page: null,\n      countPages: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.compositions.length === 0) {\n      console.log(this.props.total);\n      const search = queryString.parse(this.props.location.search);\n      if (!(+search.page > 0)) search.page = 1;\n      const uri = queryString.stringifyUrl({\n        url: this.props.location.pathname,\n        query: search\n      });\n      this.props.fetchList(uri).then(res => {\n        this.setState(_objectSpread({}, this.state, {\n          currentPage: +search.page,\n          total: res.total,\n          per_page: res.per_page,\n          countPages: Math.ceil(res.total / res.per_page)\n        }));\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.compositions.length > 0) {\n      this.props.clearList();\n    }\n  }\n\n  handlePageChange(e, to) {\n    const uri = queryString.stringifyUrl({\n      url: this.props.location.pathname,\n      query: {\n        page: to\n      }\n    });\n    this.setState({\n      currentPage: to\n    }, () => {\n      this.props.fetchList(uri);\n    });\n  }\n\n  render() {\n    // console.log(this.state)\n    const pagerNode = React.createElement(Pagination, {\n      countPages: this.state.countPages,\n      handlePageChange: this.handlePageChange.bind(this),\n      currentPage: this.state.currentPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n    return React.createElement(SecondaryLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(PageCaptionSpacer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      align: \"left\",\n      color: \"textPrimary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"\\u041B\\u0438\\u0441\\u0442\\u0438\\u043D\\u0433 \\u043A\\u043E\\u043C\\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u0439\"))), React.createElement(CompListWrapper, {\n      maxWidth: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, pagerNode, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }) : React.createElement(CompositionList, {\n      compositions: this.props.compositions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), pagerNode));\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  compositions: store.compositions.compositions,\n  isFetching: store.compositions.isFetching,\n  total: store.compositions.total,\n  per_page: store.compositions.per_page\n});\n\nexport default connect(mapStateToProps, {\n  fetchList,\n  clearList\n})(withRouter(CompositionsContainer));","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/Compositions/CompositionsContainer.js"],"names":["React","Component","Typography","withRouter","CompositionList","connect","SecondaryLayout","Container","styled","fetchList","clearList","Preloader","queryString","Pagination","CompListWrapper","theme","spacing","PageCaptionSpacer","div","CompositionsContainer","constructor","props","state","currentPage","total","per_page","countPages","componentDidMount","compositions","length","console","log","search","parse","location","page","uri","stringifyUrl","url","pathname","query","then","res","setState","Math","ceil","componentWillUnmount","handlePageChange","e","to","render","pagerNode","bind","isFetching","mapStateToProps","store"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport CompositionList from \"./CompositionList\";\r\nimport {connect} from \"react-redux\";\r\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport styled from \"styled-components\";\r\nimport {fetchList, clearList} from \"../../../store/ducks/compositions/operations\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport queryString from 'query-string'\r\nimport Pagination from \"../../common/Pagination\";\r\n\r\n\r\nconst CompListWrapper = styled(Container)`\r\n        padding-top: ${({theme}) => theme.spacing(2)}px;\r\n        padding-bottom: ${({theme}) => theme.spacing(2)}px;\r\n        background-color: rgba(33,33,33,.95);\r\n        border-radius: 20px;\r\n`\r\n\r\nconst PageCaptionSpacer = styled.div`\r\n    padding: ${({theme}) => theme.spacing(4, 0)};\r\n`\r\n\r\nclass CompositionsContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentPage: null,\r\n            total: null,\r\n            per_page: null,\r\n            countPages: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.compositions.length === 0) {\r\n            console.log(this.props.total)\r\n            const search = queryString.parse(this.props.location.search)\r\n            if (!(+search.page > 0)) search.page = 1\r\n\r\n            const uri = queryString.stringifyUrl({url: this.props.location.pathname, query: search});\r\n            this.props.fetchList(uri).then((res) => {\r\n                this.setState({\r\n                    ...this.state,\r\n                    currentPage: +search.page,\r\n                    total: res.total,\r\n                    per_page: res.per_page,\r\n                    countPages: Math.ceil(res.total / res.per_page),\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.compositions.length > 0) {\r\n            this.props.clearList()\r\n        }\r\n    }\r\n\r\n    handlePageChange(e, to) {\r\n        const uri = queryString.stringifyUrl({\r\n            url: this.props.location.pathname, query: {\r\n                page: to,\r\n            }\r\n        });\r\n\r\n        this.setState({currentPage: to}, () => {\r\n            this.props.fetchList(uri)\r\n        })\r\n    };\r\n\r\n    render() {\r\n        // console.log(this.state)\r\n        const pagerNode = <Pagination\r\n            countPages={this.state.countPages}\r\n            handlePageChange={this.handlePageChange.bind(this)}\r\n            currentPage={this.state.currentPage}\r\n        />\r\n\r\n        return (\r\n            <SecondaryLayout>\r\n                <PageCaptionSpacer>\r\n                    <Container maxWidth=\"xl\">\r\n                        <Typography component=\"h1\" variant=\"h5\" align=\"left\" color=\"textPrimary\">\r\n                            Листинг композиций\r\n                        </Typography>\r\n                    </Container>\r\n                </PageCaptionSpacer>\r\n\r\n                <CompListWrapper maxWidth=\"xl\">\r\n                    {pagerNode}\r\n                    {\r\n                        this.props.isFetching ?\r\n                            <Preloader/> :\r\n                            <CompositionList compositions={this.props.compositions}/>\r\n                    }\r\n                    {pagerNode}\r\n                </CompListWrapper>\r\n\r\n            </SecondaryLayout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    compositions: store.compositions.compositions,\r\n    isFetching: store.compositions.isFetching,\r\n    total: store.compositions.total,\r\n    per_page: store.compositions.per_page,\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchList, clearList})(withRouter(CompositionsContainer))"]},"metadata":{},"sourceType":"module"}