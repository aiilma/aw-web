{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\CompOrderForm\\\\Container.js\";\nimport React from 'react';\nimport { Field, withFormik } from 'formik';\nimport { connect } from \"react-redux\";\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\nimport { Spacer } from \"../../common/layout\";\nimport { FormWrapper, InnerFormSpacer, TextInput, Title } from \"../../common/form_components\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { TypeVariants } from \"../../common/CompVariant\";\nimport Box from \"@material-ui/core/Box\";\nimport OrderFormSummarize from \"./Summarize/Summarize\";\nimport OrderFormControls from \"./Controls/Controls\";\n\nconst OrderFormWrapper = (_ref) => {\n  let _ref$caption = _ref.caption,\n      caption = _ref$caption === void 0 ? \"Безымянный\" : _ref$caption,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"xl\" : _ref$size,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"caption\", \"size\", \"children\"]);\n\n  return React.createElement(SecondaryLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(FormWrapper, {\n    maxWidth: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(InnerFormSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Title, {\n    text: caption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, children))));\n};\n\nfunction PlaceholderList(_ref2) {\n  let inputs = _ref2.inputs,\n      props = _objectWithoutProperties(_ref2, [\"inputs\"]);\n\n  return Object.entries(inputs).map(([inputName, inputInfo], id) => React.createElement(Grid, {\n    key: id,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Box, {\n    mt: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    required: true,\n    variant: \"outlined\",\n    fullWidth: true,\n    id: inputName,\n    label: inputInfo.label,\n    value: inputInfo.value,\n    onChange: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n}\n\nconst OrderForm = props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        _props$orderFormData = props.orderFormData,\n        typeVariant = _props$orderFormData.typeVariant,\n        ph = _props$orderFormData.ph,\n        price = _props$orderFormData.price,\n        title = _props$orderFormData.title,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit,\n        handleReset = props.handleReset;\n  return React.createElement(OrderFormWrapper, {\n    caption: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\",\n    handleSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(TypeVariants, {\n    variant: typeVariant,\n    values: values,\n    handleChange: handleChange,\n    handleBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), Object.entries(ph).length > 0 && React.createElement(PlaceholderList, {\n    inputs: ph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(OrderFormSummarize, {\n    price: price,\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(OrderFormControls, {\n    onReset: handleReset,\n    onBack: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n};\n\nconst OrderFormContainer = withFormik({\n  mapPropsToValues: props => getDefaultValues(props.orderFormData),\n  // Custom sync validation\n  validate: values => {\n    const errors = {}; // if (!values.name) {\n    //     errors.name = 'Required';\n    // }\n\n    return errors;\n  },\n  handleSubmit: (values, _ref3) => {\n    let setSubmitting = _ref3.setSubmitting,\n        props = _objectWithoutProperties(_ref3, [\"setSubmitting\"]);\n\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false); // props.props.history.push(`${props.props.location.pathname}/success`)\n    }, 1000);\n  },\n  displayName: 'OrderForm'\n})(OrderForm);\n\nfunction getDefaultValues(_ref4) {\n  let typeVariant = _ref4.typeVariant,\n      ph = _ref4.ph,\n      state = _objectWithoutProperties(_ref4, [\"typeVariant\", \"ph\"]);\n\n  let values = {\n    typeVariant: typeVariant === 0 ? '' : typeVariant === 1 ? \"long\" : \"short\"\n  }; // inputs\n\n  Object.keys(ph).forEach(keyName => {\n    values.ph[keyName] = '';\n  });\n  return values;\n}\n\nconst mapStateToProps = state => ({\n  orderFormData: state.compOrderForm\n});\n\nexport default connect(mapStateToProps, {})(OrderFormContainer);","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/CompOrderForm/Container.js"],"names":["React","Field","withFormik","connect","SecondaryLayout","Spacer","FormWrapper","InnerFormSpacer","TextInput","Title","Grid","TypeVariants","Box","OrderFormSummarize","OrderFormControls","OrderFormWrapper","caption","size","children","props","handleSubmit","PlaceholderList","inputs","Object","entries","map","inputName","inputInfo","id","label","value","OrderForm","values","touched","errors","orderFormData","typeVariant","ph","price","title","handleChange","handleBlur","handleReset","length","OrderFormContainer","mapPropsToValues","getDefaultValues","validate","setSubmitting","setTimeout","alert","JSON","stringify","displayName","state","keys","forEach","keyName","mapStateToProps","compOrderForm"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Field, withFormik} from 'formik';\r\nimport {connect} from \"react-redux\";\r\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\r\nimport {Spacer} from \"../../common/layout\";\r\nimport {FormWrapper, InnerFormSpacer, TextInput, Title} from \"../../common/form_components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {TypeVariants} from \"../../common/CompVariant\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport OrderFormSummarize from \"./Summarize/Summarize\";\r\nimport OrderFormControls from \"./Controls/Controls\";\r\n\r\nconst OrderFormWrapper = ({caption = \"Безымянный\", size = \"xl\", children, ...props}) => {\r\n    return (\r\n        <SecondaryLayout>\r\n            <Spacer/>\r\n            <FormWrapper maxWidth={size}>\r\n                <InnerFormSpacer>\r\n                    <Title text={caption}/>\r\n                    <form onSubmit={props.handleSubmit} noValidate>\r\n                        {children}\r\n                    </form>\r\n                </InnerFormSpacer>\r\n            </FormWrapper>\r\n        </SecondaryLayout>\r\n    )\r\n}\r\n\r\nfunction PlaceholderList({inputs, ...props}) {\r\n    return Object.entries(inputs).map(([inputName, inputInfo], id) => (\r\n        <Grid key={id} item xs={12}>\r\n            <Box mt={2}>\r\n                <TextInput\r\n                    required variant=\"outlined\" fullWidth\r\n                    id={inputName} label={inputInfo.label} value={inputInfo.value} onChange={() => {\r\n                }}\r\n                />\r\n            </Box>\r\n        </Grid>\r\n    ))\r\n}\r\n\r\nconst OrderForm = props => {\r\n    const {\r\n        values, touched, errors, orderFormData: {typeVariant, ph, price, title},\r\n        handleChange, handleBlur, handleSubmit, handleReset\r\n    } = props;\r\n\r\n\r\n    return (\r\n        <OrderFormWrapper caption=\"Форма заказа\" handleSubmit={handleSubmit}>\r\n            <Grid container>\r\n\r\n                {/*type varient*/}\r\n                <TypeVariants\r\n                    variant={typeVariant}\r\n                    values={values}\r\n                    handleChange={handleChange} handleBlur={handleBlur}\r\n                />\r\n                {/*inputs*/}\r\n\r\n                {Object.entries(ph).length > 0 && (<PlaceholderList inputs={ph}/>)}\r\n            </Grid>\r\n            <OrderFormSummarize price={price} title={title}/>\r\n            <OrderFormControls onReset={handleReset} onBack={() => {}}/>\r\n        </OrderFormWrapper>\r\n    );\r\n};\r\n\r\nconst OrderFormContainer = withFormik({\r\n    mapPropsToValues: (props) => (getDefaultValues(props.orderFormData)),\r\n\r\n    // Custom sync validation\r\n    validate: values => {\r\n        const errors = {};\r\n\r\n        // if (!values.name) {\r\n        //     errors.name = 'Required';\r\n        // }\r\n\r\n        return errors;\r\n    },\r\n\r\n    handleSubmit: (values, {setSubmitting, ...props}) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n            // props.props.history.push(`${props.props.location.pathname}/success`)\r\n        }, 1000);\r\n    },\r\n\r\n    displayName: 'OrderForm',\r\n})(OrderForm);\r\n\r\nfunction getDefaultValues({typeVariant, ph, ...state}) {\r\n\r\n    let values = {\r\n        typeVariant: typeVariant === 0 ? '' : typeVariant === 1 ? \"long\" : \"short\"\r\n    }\r\n\r\n    // inputs\r\n    Object.keys(ph).forEach(keyName => {\r\n        values.ph[keyName] = ''\r\n    })\r\n\r\n    return values\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    orderFormData: state.compOrderForm\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(OrderFormContainer)"]},"metadata":{},"sourceType":"module"}