{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\CompOrderForm\\\\Container.js\";\nimport React from 'react';\nimport { Field, withFormik } from 'formik';\nimport { connect } from \"react-redux\";\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\nimport { Spacer } from \"../../common/layout\";\nimport { FormWrapper, InnerFormSpacer, Title } from \"../../common/form_components\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { TypeVariants } from \"../../common/CompVariant\";\n\nconst OrderFormWrapper = (_ref) => {\n  let _ref$caption = _ref.caption,\n      caption = _ref$caption === void 0 ? \"Безымянный\" : _ref$caption,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"xl\" : _ref$size,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"caption\", \"size\", \"children\"]);\n\n  return React.createElement(SecondaryLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(FormWrapper, {\n    maxWidth: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(InnerFormSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Title, {\n    text: caption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, children))));\n};\n\nconst OrderForm = props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        typeVariant = props.orderFormData.typeVariant,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit,\n        handleReset = props.handleReset;\n  return React.createElement(OrderFormWrapper, {\n    caption: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\",\n    handleSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(TypeVariants, {\n    variant: typeVariant,\n    values: values,\n    handleChange: handleChange,\n    handleBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"));\n};\n\nconst OrderFormContainer = withFormik({\n  mapPropsToValues: props => getDefaultValues(props.orderFormData),\n  // Custom sync validation\n  validate: values => {\n    const errors = {}; // if (!values.name) {\n    //     errors.name = 'Required';\n    // }\n\n    return errors;\n  },\n  handleSubmit: (values, _ref2) => {\n    let setSubmitting = _ref2.setSubmitting,\n        props = _objectWithoutProperties(_ref2, [\"setSubmitting\"]);\n\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false); // props.props.history.push(`${props.props.location.pathname}/success`)\n    }, 1000);\n  },\n  displayName: 'OrderForm'\n})(OrderForm);\n\nfunction getDefaultValues(_ref3) {\n  let typeVariant = _ref3.typeVariant,\n      state = _objectWithoutProperties(_ref3, [\"typeVariant\"]);\n\n  let values = {\n    typeVariant: typeVariant === 0 ? '' : typeVariant === 1 ? \"long\" : \"short\"\n  }; // // inputs\n  // Object.keys(state.inputs).forEach(keyName => {\n  //     values.ph[keyName] = ''\n  // })\n\n  return values;\n}\n\nconst mapStateToProps = state => ({\n  orderFormData: state.compOrderForm\n});\n\nexport default connect(mapStateToProps, {})(OrderFormContainer);","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/CompOrderForm/Container.js"],"names":["React","Field","withFormik","connect","SecondaryLayout","Spacer","FormWrapper","InnerFormSpacer","Title","Grid","TypeVariants","OrderFormWrapper","caption","size","children","props","handleSubmit","OrderForm","values","touched","errors","typeVariant","orderFormData","handleChange","handleBlur","handleReset","OrderFormContainer","mapPropsToValues","getDefaultValues","validate","setSubmitting","setTimeout","alert","JSON","stringify","displayName","state","mapStateToProps","compOrderForm"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Field, withFormik} from 'formik';\r\nimport {connect} from \"react-redux\";\r\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\r\nimport {Spacer} from \"../../common/layout\";\r\nimport {FormWrapper, InnerFormSpacer, Title} from \"../../common/form_components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {TypeVariants} from \"../../common/CompVariant\";\r\n\r\nconst OrderFormWrapper = ({caption = \"Безымянный\", size = \"xl\", children, ...props}) => {\r\n    return (\r\n        <SecondaryLayout>\r\n            <Spacer/>\r\n            <FormWrapper maxWidth={size}>\r\n                <InnerFormSpacer>\r\n                    <Title text={caption}/>\r\n                    <form onSubmit={props.handleSubmit}>\r\n                        {children}\r\n                    </form>\r\n                </InnerFormSpacer>\r\n            </FormWrapper>\r\n        </SecondaryLayout>\r\n    )\r\n}\r\n\r\nconst OrderForm = props => {\r\n    const {\r\n        values, touched, errors, orderFormData: {typeVariant},\r\n        handleChange, handleBlur, handleSubmit, handleReset\r\n    } = props;\r\n\r\n\r\n    return (\r\n        <OrderFormWrapper caption=\"Форма заказа\" handleSubmit={handleSubmit}>\r\n            <Grid container>\r\n\r\n                {/*type varient*/}\r\n                <TypeVariants\r\n                    variant={typeVariant}\r\n                    values={values}\r\n                    handleChange={handleChange} handleBlur={handleBlur}\r\n                />\r\n                {/*inputs*/}\r\n\r\n            </Grid>\r\n            <button type=\"submit\">Отправить</button>\r\n        </OrderFormWrapper>\r\n    );\r\n};\r\n\r\nconst OrderFormContainer = withFormik({\r\n    mapPropsToValues: (props) => (getDefaultValues(props.orderFormData)),\r\n\r\n    // Custom sync validation\r\n    validate: values => {\r\n        const errors = {};\r\n\r\n        // if (!values.name) {\r\n        //     errors.name = 'Required';\r\n        // }\r\n\r\n        return errors;\r\n    },\r\n\r\n    handleSubmit: (values, {setSubmitting, ...props}) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n            // props.props.history.push(`${props.props.location.pathname}/success`)\r\n        }, 1000);\r\n    },\r\n\r\n    displayName: 'OrderForm',\r\n})(OrderForm);\r\n\r\nfunction getDefaultValues({typeVariant, ...state}) {\r\n\r\n    let values = {\r\n        typeVariant: typeVariant === 0 ? '' : typeVariant === 1 ? \"long\" : \"short\"\r\n    }\r\n\r\n    // // inputs\r\n    // Object.keys(state.inputs).forEach(keyName => {\r\n    //     values.ph[keyName] = ''\r\n    // })\r\n\r\n    return values\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    orderFormData: state.compOrderForm\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(OrderFormContainer)"]},"metadata":{},"sourceType":"module"}