{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\CompOrderForm\\\\Container.js\";\nimport React from 'react';\nimport { withFormik } from 'formik';\nimport { connect } from \"react-redux\";\n\nconst OrderForm = props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        orderFormData = props.orderFormData,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nconst getDefaultValues = state => {\n  console.log(state);\n  return state;\n};\n\nconst OrderFormContainer = withFormik({\n  mapPropsToValues: props => getDefaultValues(props.orderFormData),\n  // Custom sync validation\n  validate: values => {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = 'Required';\n    }\n\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n  displayName: 'OrderForm'\n})(OrderForm);\n\nconst mapStateToProps = state => ({\n  orderFormData: state.compOrderForm\n});\n\nexport default connect(mapStateToProps, {})(OrderFormContainer);","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/CompOrderForm/Container.js"],"names":["React","withFormik","connect","OrderForm","props","values","touched","errors","orderFormData","handleChange","handleBlur","handleSubmit","getDefaultValues","state","console","log","OrderFormContainer","mapPropsToValues","validate","name","setSubmitting","setTimeout","alert","JSON","stringify","displayName","mapStateToProps","compOrderForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA,QAEnBC,MAFmB,GAInBD,KAJmB,CAEnBC,MAFmB;AAAA,QAEXC,OAFW,GAInBF,KAJmB,CAEXE,OAFW;AAAA,QAEFC,MAFE,GAInBH,KAJmB,CAEFG,MAFE;AAAA,QAEMC,aAFN,GAInBJ,KAJmB,CAEMI,aAFN;AAAA,QAGnBC,YAHmB,GAInBL,KAJmB,CAGnBK,YAHmB;AAAA,QAGLC,UAHK,GAInBN,KAJmB,CAGLM,UAHK;AAAA,QAGOC,YAHP,GAInBP,KAJmB,CAGOO,YAHP;AAMvB,SACI;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ;AAKH,CAXD;;AAaA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAOA,KAAP;AACH,CAHD;;AAKA,MAAMG,kBAAkB,GAAGf,UAAU,CAAC;AAClCgB,EAAAA,gBAAgB,EAAGb,KAAD,IAAYQ,gBAAgB,CAACR,KAAK,CAACI,aAAP,CADZ;AAGlC;AACAU,EAAAA,QAAQ,EAAEb,MAAM,IAAI;AAChB,UAAME,MAAM,GAAG,EAAf;;AAEA,QAAI,CAACF,MAAM,CAACc,IAAZ,EAAkB;AACdZ,MAAAA,MAAM,CAACY,IAAP,GAAc,UAAd;AACH;;AAED,WAAOZ,MAAP;AACH,GAZiC;AAclCI,EAAAA,YAAY,EAAE,CAACN,MAAD,EAAS;AAAEe,IAAAA;AAAF,GAAT,KAA+B;AACzCC,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAenB,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAe,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAHS,EAGP,IAHO,CAAV;AAIH,GAnBiC;AAqBlCK,EAAAA,WAAW,EAAE;AArBqB,CAAD,CAAV,CAsBxBtB,SAtBwB,CAA3B;;AAwBA,MAAMuB,eAAe,GAAIb,KAAD,KAAY;AAChCL,EAAAA,aAAa,EAAEK,KAAK,CAACc;AADW,CAAZ,CAAxB;;AAIA,eAAezB,OAAO,CAACwB,eAAD,EAAkB,EAAlB,CAAP,CAA6BV,kBAA7B,CAAf","sourcesContent":["import React from 'react';\r\nimport { withFormik } from 'formik';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst OrderForm = props => {\r\n    const {\r\n        values, touched, errors, orderFormData,\r\n        handleChange, handleBlur, handleSubmit,\r\n    } = props;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst getDefaultValues = (state) => {\r\n    console.log(state)\r\n    return state\r\n}\r\n\r\nconst OrderFormContainer = withFormik({\r\n    mapPropsToValues: (props) => (getDefaultValues(props.orderFormData)),\r\n\r\n    // Custom sync validation\r\n    validate: values => {\r\n        const errors = {};\r\n\r\n        if (!values.name) {\r\n            errors.name = 'Required';\r\n        }\r\n\r\n        return errors;\r\n    },\r\n\r\n    handleSubmit: (values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n        }, 1000);\r\n    },\r\n\r\n    displayName: 'OrderForm',\r\n})(OrderForm);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    orderFormData: state.compOrderForm\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(OrderFormContainer)"]},"metadata":{},"sourceType":"module"}