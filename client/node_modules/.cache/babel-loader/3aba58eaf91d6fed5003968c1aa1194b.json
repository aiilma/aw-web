{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\CompOrderForm\\\\Container.js\";\nimport React from 'react';\nimport { Field, withFormik } from 'formik';\nimport { connect } from \"react-redux\";\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\nimport { Spacer } from \"../../common/layout\";\nimport { FormWrapper, InnerFormSpacer, Title } from \"../../common/form_components\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { CompVariantCheckbox } from \"../../common/CompVariant\";\nimport OrderFormInputs from \"./Inputs/Inputs_bckp\";\n\nconst CustomCB = (_ref) => {\n  let field = _ref.field,\n      _ref$form = _ref.form,\n      touched = _ref$form.touched,\n      errors = _ref$form.errors,\n      props = _objectWithoutProperties(_ref, [\"field\", \"form\"]);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    type: \"text\"\n  }, field, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), touched[field.name] && errors[field.name] && React.createElement(\"div\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, errors[field.name]));\n};\n\nconst OrderForm = props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        orderFormData = props.orderFormData,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit,\n        handleReset = props.handleReset;\n  return React.createElement(SecondaryLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(FormWrapper, {\n    maxWidth: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(InnerFormSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Title, {\n    text: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"long\",\n    component: CustomCB,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"short\",\n    component: CustomCB,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    onClick: handleReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Reset\")))));\n};\n\nconst getDefaultValues = state => {\n  let values = {\n    // long: state.typeVariant === 1,\n    // short: state.typeVariant === 2,\n    long: true,\n    short: false\n  }; // inputs\n\n  Object.keys(state.inputs).forEach(keyName => {\n    values[keyName] = '';\n  });\n  return values;\n};\n\nconst OrderFormContainer = withFormik({\n  mapPropsToValues: props => getDefaultValues(props.orderFormData),\n  // Custom sync validation\n  validate: values => {\n    const errors = {}; // if (!values.name) {\n    //     errors.name = 'Required';\n    // }\n\n    return errors;\n  },\n  handleSubmit: (values, _ref2) => {\n    let setSubmitting = _ref2.setSubmitting,\n        props = _objectWithoutProperties(_ref2, [\"setSubmitting\"]);\n\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false); // props.props.history.push(`${props.props.location.pathname}/success`)\n    }, 1000);\n  },\n  displayName: 'OrderForm'\n})(OrderForm);\n\nconst mapStateToProps = state => ({\n  orderFormData: state.compOrderForm\n});\n\nexport default connect(mapStateToProps, {})(OrderFormContainer);","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/CompOrderForm/Container.js"],"names":["React","Field","withFormik","connect","SecondaryLayout","Spacer","FormWrapper","InnerFormSpacer","Title","Grid","Box","FormLabel","FormGroup","CompVariantCheckbox","OrderFormInputs","CustomCB","field","form","touched","errors","props","name","OrderForm","values","orderFormData","handleChange","handleBlur","handleSubmit","handleReset","getDefaultValues","state","long","short","Object","keys","inputs","forEach","keyName","OrderFormContainer","mapPropsToValues","validate","setSubmitting","setTimeout","alert","JSON","stringify","displayName","mapStateToProps","compOrderForm"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Field, withFormik} from 'formik';\r\nimport {connect} from \"react-redux\";\r\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\r\nimport {Spacer} from \"../../common/layout\";\r\nimport {FormWrapper, InnerFormSpacer, Title} from \"../../common/form_components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport {CompVariantCheckbox} from \"../../common/CompVariant\";\r\nimport OrderFormInputs from \"./Inputs/Inputs_bckp\";\r\n\r\nconst CustomCB = ({\r\n                      field, // { name, value, onChange, onBlur }\r\n                      form: {touched, errors}, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n                      ...props\r\n                  }) => (\r\n    <div>\r\n        <input type=\"text\" {...field} {...props} />\r\n        {touched[field.name] &&\r\n        errors[field.name] && <div className=\"error\">{errors[field.name]}</div>}\r\n    </div>\r\n);\r\n\r\nconst OrderForm = props => {\r\n    const {\r\n        values, touched, errors, orderFormData,\r\n        handleChange, handleBlur, handleSubmit, handleReset\r\n    } = props;\r\n\r\n    return (\r\n        <SecondaryLayout>\r\n            <Spacer/>\r\n            <FormWrapper maxWidth=\"xl\">\r\n                <InnerFormSpacer>\r\n                    <Title text=\"Форма заказа\"/>\r\n                    <form onSubmit={handleSubmit}>\r\n\r\n\r\n                        {/*type varient*/}\r\n                        <Field name=\"long\" component={CustomCB}/>\r\n                        <Field name=\"short\" component={CustomCB}/>\r\n\r\n                        {/*inputs*/}\r\n\r\n                        <button type=\"submit\">Submit</button>\r\n                        <button onClick={handleReset}>Reset</button>\r\n\r\n\r\n                    </form>\r\n                </InnerFormSpacer>\r\n            </FormWrapper>\r\n        </SecondaryLayout>\r\n    );\r\n};\r\n\r\nconst getDefaultValues = (state) => {\r\n    let values = {\r\n        // long: state.typeVariant === 1,\r\n        // short: state.typeVariant === 2,\r\n        long: true,\r\n        short: false,\r\n    }\r\n\r\n    // inputs\r\n    Object.keys(state.inputs).forEach(keyName => {\r\n        values[keyName] = ''\r\n    })\r\n\r\n    return values\r\n}\r\n\r\nconst OrderFormContainer = withFormik({\r\n    mapPropsToValues: (props) => (getDefaultValues(props.orderFormData)),\r\n\r\n    // Custom sync validation\r\n    validate: values => {\r\n        const errors = {};\r\n\r\n        // if (!values.name) {\r\n        //     errors.name = 'Required';\r\n        // }\r\n\r\n        return errors;\r\n    },\r\n\r\n    handleSubmit: (values, {setSubmitting, ...props}) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n            // props.props.history.push(`${props.props.location.pathname}/success`)\r\n        }, 1000);\r\n    },\r\n\r\n    displayName: 'OrderForm',\r\n})(OrderForm);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    orderFormData: state.compOrderForm\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(OrderFormContainer)"]},"metadata":{},"sourceType":"module"}