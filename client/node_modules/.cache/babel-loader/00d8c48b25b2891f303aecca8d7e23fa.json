{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { AxiosInstance as Http } from \"axios\";\nexport const AUTH_LOGIN = 'aw/auth/AUTH_LOGIN';\nexport const AUTH_CHECK = 'aw/auth/AUTH_CHECK';\nexport const AUTH_LOGOUT = 'aw/auth/AUTH_LOGOUT';\nconst user = {\n  user_id: null,\n  steamid: null,\n  nickname: null,\n  avatar: null,\n  balance: null,\n  group: null,\n  registered_at: null,\n  visited_at: null\n};\nconst initialState = {\n  isAuthenticated: false,\n  isAdmin: false,\n  user\n};\nexport default function authReducer(state = initialState, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case AUTH_LOGIN:\n      const jwtToken = payload.token;\n      const user = payload.user[0];\n      localStorage.setItem('jwt_token', jwtToken);\n      Http.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\n      return _objectSpread({}, state, {\n        isAuthenticated: true,\n        user\n      });\n\n    case AUTH_CHECK:\n      state = _objectSpread({}, state, {\n        isAuthenticated: !!localStorage.getItem('jwt_token')\n      });\n\n      if (state.isAuthenticated) {\n        Http.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\n      }\n\n      return state;\n\n    case AUTH_LOGOUT:\n      localStorage.removeItem('jwt_token');\n      return _objectSpread({}, state, {\n        isAuthenticated: false,\n        user\n      });\n\n    default:\n      return state;\n  }\n}\n;\nexport function authLogin(payload) {\n  return {\n    type: AUTH_LOGIN,\n    payload\n  };\n}\nexport function authLogout() {\n  return {\n    type: AUTH_LOGOUT\n  };\n}\nexport function authCheck() {\n  return {\n    type: AUTH_CHECK\n  };\n}","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/reducers/auth.js"],"names":["AxiosInstance","Http","AUTH_LOGIN","AUTH_CHECK","AUTH_LOGOUT","user","user_id","steamid","nickname","avatar","balance","group","registered_at","visited_at","initialState","isAuthenticated","isAdmin","authReducer","state","type","payload","jwtToken","token","localStorage","setItem","defaults","headers","common","getItem","removeItem","authLogin","authLogout","authCheck"],"mappings":";AAAA,SAAQA,aAAa,IAAIC,IAAzB,QAAoC,OAApC;AAEA,OAAO,MAAMC,UAAU,GAAG,oBAAnB;AACP,OAAO,MAAMC,UAAU,GAAG,oBAAnB;AACP,OAAO,MAAMC,WAAW,GAAG,qBAApB;AAEP,MAAMC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE,IADA;AAETC,EAAAA,OAAO,EAAE,IAFA;AAGTC,EAAAA,QAAQ,EAAE,IAHD;AAITC,EAAAA,MAAM,EAAE,IAJC;AAKTC,EAAAA,OAAO,EAAE,IALA;AAMTC,EAAAA,KAAK,EAAE,IANE;AAOTC,EAAAA,aAAa,EAAE,IAPN;AAQTC,EAAAA,UAAU,EAAE;AARH,CAAb;AAWA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBX,EAAAA;AAHiB,CAArB;AAMA,eAAe,SAASY,WAAT,CAAqBC,KAAK,GAAGJ,YAA7B,EAA2C;AAACK,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAA3C,EAAmE;AAC9E,UAAQD,IAAR;AACI,SAAKjB,UAAL;AACI,YAAMmB,QAAQ,GAAGD,OAAO,CAACE,KAAzB;AACA,YAAMjB,IAAI,GAAGe,OAAO,CAACf,IAAR,CAAa,CAAb,CAAb;AACAkB,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,QAAlC;AACApB,MAAAA,IAAI,CAACwB,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,eAA7B,IAAiD,UAASN,QAAS,EAAnE;AAEA,+BACOH,KADP;AAEIH,QAAAA,eAAe,EAAE,IAFrB;AAGIV,QAAAA;AAHJ;;AAKJ,SAAKF,UAAL;AACIe,MAAAA,KAAK,qBACEA,KADF;AAEDH,QAAAA,eAAe,EAAE,CAAC,CAACQ,YAAY,CAACK,OAAb,CAAqB,WAArB;AAFlB,QAAL;;AAKA,UAAIV,KAAK,CAACH,eAAV,EAA2B;AACvBd,QAAAA,IAAI,CAACwB,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,eAA7B,IAAiD,UAASJ,YAAY,CAACK,OAAb,CAAqB,WAArB,CAAkC,EAA5F;AACH;;AAED,aAAOV,KAAP;;AACJ,SAAKd,WAAL;AACImB,MAAAA,YAAY,CAACM,UAAb,CAAwB,WAAxB;AAEA,+BACOX,KADP;AAEIH,QAAAA,eAAe,EAAE,KAFrB;AAGIV,QAAAA;AAHJ;;AAKJ;AACI,aAAOa,KAAP;AAhCR;AAkCH;AAAA;AAED,OAAO,SAASY,SAAT,CAAmBV,OAAnB,EAA4B;AAC/B,SAAO;AACHD,IAAAA,IAAI,EAAEjB,UADH;AAEHkB,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASW,UAAT,GAAsB;AACzB,SAAO;AACHZ,IAAAA,IAAI,EAAEf;AADH,GAAP;AAGH;AAED,OAAO,SAAS4B,SAAT,GAAqB;AACxB,SAAO;AACHb,IAAAA,IAAI,EAAEhB;AADH,GAAP;AAGH","sourcesContent":["import {AxiosInstance as Http} from \"axios\";\r\n\r\nexport const AUTH_LOGIN = 'aw/auth/AUTH_LOGIN';\r\nexport const AUTH_CHECK = 'aw/auth/AUTH_CHECK';\r\nexport const AUTH_LOGOUT = 'aw/auth/AUTH_LOGOUT';\r\n\r\nconst user = {\r\n    user_id: null,\r\n    steamid: null,\r\n    nickname: null,\r\n    avatar: null,\r\n    balance: null,\r\n    group: null,\r\n    registered_at: null,\r\n    visited_at: null,\r\n};\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    isAdmin: false,\r\n    user\r\n};\r\n\r\nexport default function authReducer(state = initialState, {type, payload = null}) {\r\n    switch (type) {\r\n        case AUTH_LOGIN:\r\n            const jwtToken = payload.token;\r\n            const user = payload.user[0];\r\n            localStorage.setItem('jwt_token', jwtToken);\r\n            Http.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user\r\n            }\r\n        case AUTH_CHECK:\r\n            state = {\r\n                ...state,\r\n                isAuthenticated: !!localStorage.getItem('jwt_token'),\r\n            }\r\n\r\n            if (state.isAuthenticated) {\r\n                Http.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\r\n            }\r\n\r\n            return state;\r\n        case AUTH_LOGOUT:\r\n            localStorage.removeItem('jwt_token');\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport function authLogin(payload) {\r\n    return {\r\n        type: AUTH_LOGIN,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function authLogout() {\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport function authCheck() {\r\n    return {\r\n        type: AUTH_CHECK\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}