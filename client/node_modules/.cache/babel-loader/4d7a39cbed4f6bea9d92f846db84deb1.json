{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\";\nimport RCompThumbnail from \"../../../assets/img/compositions/static.png\";\nimport RCompPreview from \"../../../assets/img/compositions/dynamic.gif\";\nexport const initCompList = {\n  compositions: [],\n  isFetching: false\n};\n\nfunction compListReducer(state = initCompList, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case types.CLEAR_LIST:\n      return _objectSpread({}, state, {\n        compositions: [],\n        form: {}\n      });\n\n    case types.FETCH_LIST:\n      return _objectSpread({}, state, {\n        form: {},\n        isFetching: true\n      });\n\n    case types.FETCH_LIST_COMPLETED:\n      return _objectSpread({}, state, {\n        compositions: [...payload.data.map(c => {\n          return {\n            title: c.title,\n            link: c.link_alias,\n            price: c.price,\n            thumbnail: RCompThumbnail,\n            preview: RCompPreview\n          };\n        })],\n        form: {},\n        isFetching: false\n      });\n\n    case types.FETCH_LIST_FAILED:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        compositions: []\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default compListReducer;","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/comp-list/reducers.js"],"names":["types","RCompThumbnail","RCompPreview","initCompList","compositions","isFetching","compListReducer","state","type","payload","CLEAR_LIST","form","FETCH_LIST","FETCH_LIST_COMPLETED","data","map","c","title","link","link_alias","price","thumbnail","preview","FETCH_LIST_FAILED"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,YAAY,EAAE,EADU;AAExBC,EAAAA,UAAU,EAAE;AAFY,CAArB;;AAKP,SAASC,eAAT,CAAyBC,KAAK,GAAGJ,YAAjC,EAA+C;AAACK,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAA/C,EAAuE;AACnE,UAAQD,IAAR;AACI,SAAKR,KAAK,CAACU,UAAX;AACI,+BACOH,KADP;AAEIH,QAAAA,YAAY,EAAE,EAFlB;AAGIO,QAAAA,IAAI,EAAE;AAHV;;AAKJ,SAAKX,KAAK,CAACY,UAAX;AACI,+BACOL,KADP;AAEII,QAAAA,IAAI,EAAE,EAFV;AAGIN,QAAAA,UAAU,EAAE;AAHhB;;AAKJ,SAAKL,KAAK,CAACa,oBAAX;AACI,+BACON,KADP;AAEIH,QAAAA,YAAY,EAAE,CACV,GAAGK,OAAO,CAACK,IAAR,CAAaC,GAAb,CAAiBC,CAAC,IAAI;AACrB,iBAAO;AACHC,YAAAA,KAAK,EAAED,CAAC,CAACC,KADN;AAEHC,YAAAA,IAAI,EAAEF,CAAC,CAACG,UAFL;AAGHC,YAAAA,KAAK,EAAEJ,CAAC,CAACI,KAHN;AAIHC,YAAAA,SAAS,EAAEpB,cAJR;AAKHqB,YAAAA,OAAO,EAAEpB;AALN,WAAP;AAOH,SARE,CADO,CAFlB;AAaIS,QAAAA,IAAI,EAAE,EAbV;AAcIN,QAAAA,UAAU,EAAE;AAdhB;;AAgBJ,SAAKL,KAAK,CAACuB,iBAAX;AAEI,+BACOhB,KADP;AAEIF,QAAAA,UAAU,EAAE,KAFhB;AAGID,QAAAA,YAAY,EAAE;AAHlB;;AAKJ;AACI,aAAOG,KAAP;AAtCR;AAwCH;;AAED,eAAeD,eAAf","sourcesContent":["import * as types from \"./types\";\r\nimport RCompThumbnail from \"../../../assets/img/compositions/static.png\";\r\nimport RCompPreview from \"../../../assets/img/compositions/dynamic.gif\";\r\n\r\nexport const initCompList = {\r\n    compositions: [],\r\n    isFetching: false,\r\n}\r\n\r\nfunction compListReducer(state = initCompList, {type, payload = null}) {\r\n    switch (type) {\r\n        case types.CLEAR_LIST:\r\n            return {\r\n                ...state,\r\n                compositions: [],\r\n                form: {},\r\n            }\r\n        case types.FETCH_LIST:\r\n            return {\r\n                ...state,\r\n                form: {},\r\n                isFetching: true,\r\n            }\r\n        case types.FETCH_LIST_COMPLETED:\r\n            return {\r\n                ...state,\r\n                compositions: [\r\n                    ...payload.data.map(c => {\r\n                        return {\r\n                            title: c.title,\r\n                            link: c.link_alias,\r\n                            price: c.price,\r\n                            thumbnail: RCompThumbnail,\r\n                            preview: RCompPreview,\r\n                        }\r\n                    })\r\n                ],\r\n                form: {},\r\n                isFetching: false,\r\n            }\r\n        case types.FETCH_LIST_FAILED:\r\n\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                compositions: [],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default compListReducer"]},"metadata":{},"sourceType":"module"}