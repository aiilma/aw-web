{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\";\nimport axios from 'axios';\nconst user = {\n  user_id: null,\n  steamid: null,\n  nickname: null,\n  avatar: null,\n  balance: null,\n  group: null,\n  createdAt: null,\n  visitedAt: null\n};\nconst initialState = {\n  isAuthenticated: false,\n  user\n};\nexport default function authReducer(state = initialState, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case types.AUTH_LOGIN:\n      return authLogin(state, payload);\n\n    case types.AUTH_LOGOUT:\n      return authLogout(state);\n\n    case types.AUTH_ME:\n      // console.log('e')\n      return authMe(state);\n\n    default:\n      return state;\n  }\n}\n;\n\nconst authLogin = (state, payload) => {\n  const jwtToken = payload.token;\n  const user = payload.user;\n  localStorage.setItem('jwt_token', jwtToken);\n  axios.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\n  return _objectSpread({}, state, {\n    isAuthenticated: true,\n    user: _objectSpread({}, user, {\n      createdAt: user.createdAt,\n      visitedAt: user.visitedAt\n    })\n  });\n};\n\nconst authLogout = state => {\n  localStorage.removeItem('jwt_token');\n  return _objectSpread({}, state, {\n    isAuthenticated: false,\n    user\n  });\n};\n\nconst authMe = state => {\n  const hasJwt = !!localStorage.getItem('jwt_token');\n\n  if (hasJwt) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\n  }\n\n  return _objectSpread({}, state, {\n    isAuthenticated: hasJwt\n  });\n};","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/reducers.js"],"names":["types","axios","user","user_id","steamid","nickname","avatar","balance","group","createdAt","visitedAt","initialState","isAuthenticated","authReducer","state","type","payload","AUTH_LOGIN","authLogin","AUTH_LOGOUT","authLogout","AUTH_ME","authMe","jwtToken","token","localStorage","setItem","defaults","headers","common","removeItem","hasJwt","getItem"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE,IADA;AAETC,EAAAA,OAAO,EAAE,IAFA;AAGTC,EAAAA,QAAQ,EAAE,IAHD;AAITC,EAAAA,MAAM,EAAE,IAJC;AAKTC,EAAAA,OAAO,EAAE,IALA;AAMTC,EAAAA,KAAK,EAAE,IANE;AAOTC,EAAAA,SAAS,EAAE,IAPF;AAQTC,EAAAA,SAAS,EAAE;AARF,CAAb;AAWA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBV,EAAAA;AAFiB,CAArB;AAKA,eAAe,SAASW,WAAT,CAAqBC,KAAK,GAAGH,YAA7B,EAA2C;AAACI,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAA3C,EAAmE;AAC9E,UAAQD,IAAR;AACI,SAAKf,KAAK,CAACiB,UAAX;AACI,aAAOC,SAAS,CAACJ,KAAD,EAAQE,OAAR,CAAhB;;AACJ,SAAKhB,KAAK,CAACmB,WAAX;AACI,aAAOC,UAAU,CAACN,KAAD,CAAjB;;AACJ,SAAKd,KAAK,CAACqB,OAAX;AACI;AACA,aAAOC,MAAM,CAACR,KAAD,CAAb;;AACJ;AACI,aAAOA,KAAP;AATR;AAWH;AAAA;;AAED,MAAMI,SAAS,GAAG,CAACJ,KAAD,EAAQE,OAAR,KAAoB;AAClC,QAAMO,QAAQ,GAAGP,OAAO,CAACQ,KAAzB;AACA,QAAMtB,IAAI,GAAGc,OAAO,CAACd,IAArB;AACAuB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,QAAlC;AACAtB,EAAAA,KAAK,CAAC0B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,UAASN,QAAS,EAApE;AAEA,2BACOT,KADP;AAEIF,IAAAA,eAAe,EAAE,IAFrB;AAGIV,IAAAA,IAAI,oBACGA,IADH;AAEAO,MAAAA,SAAS,EAAEP,IAAI,CAACO,SAFhB;AAGAC,MAAAA,SAAS,EAAER,IAAI,CAACQ;AAHhB;AAHR;AASH,CAfD;;AAiBA,MAAMU,UAAU,GAAIN,KAAD,IAAW;AAC1BW,EAAAA,YAAY,CAACK,UAAb,CAAwB,WAAxB;AAEA,2BACOhB,KADP;AAEIF,IAAAA,eAAe,EAAE,KAFrB;AAGIV,IAAAA;AAHJ;AAKH,CARD;;AAUA,MAAMoB,MAAM,GAAIR,KAAD,IAAW;AACtB,QAAMiB,MAAM,GAAG,CAAC,CAACN,YAAY,CAACO,OAAb,CAAqB,WAArB,CAAjB;;AACA,MAAID,MAAJ,EAAY;AACR9B,IAAAA,KAAK,CAAC0B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,UAASJ,YAAY,CAACO,OAAb,CAAqB,WAArB,CAAkC,EAA7F;AACH;;AAED,2BACOlB,KADP;AAEIF,IAAAA,eAAe,EAAEmB;AAFrB;AAIH,CAVD","sourcesContent":["import * as types from \"./types\";\r\nimport axios from 'axios'\r\n\r\nconst user = {\r\n    user_id: null,\r\n    steamid: null,\r\n    nickname: null,\r\n    avatar: null,\r\n    balance: null,\r\n    group: null,\r\n    createdAt: null,\r\n    visitedAt: null\r\n};\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user\r\n};\r\n\r\nexport default function authReducer(state = initialState, {type, payload = null}) {\r\n    switch (type) {\r\n        case types.AUTH_LOGIN:\r\n            return authLogin(state, payload);\r\n        case types.AUTH_LOGOUT:\r\n            return authLogout(state);\r\n        case types.AUTH_ME:\r\n            // console.log('e')\r\n            return authMe(state);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst authLogin = (state, payload) => {\r\n    const jwtToken = payload.token;\r\n    const user = payload.user;\r\n    localStorage.setItem('jwt_token', jwtToken);\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\r\n\r\n    return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: {\r\n            ...user,\r\n            createdAt: user.createdAt,\r\n            visitedAt: user.visitedAt,\r\n        }\r\n    }\r\n};\r\n\r\nconst authLogout = (state) => {\r\n    localStorage.removeItem('jwt_token');\r\n\r\n    return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user\r\n    }\r\n};\r\n\r\nconst authMe = (state) => {\r\n    const hasJwt = !!localStorage.getItem('jwt_token')\r\n    if (hasJwt) {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        isAuthenticated: hasJwt\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}