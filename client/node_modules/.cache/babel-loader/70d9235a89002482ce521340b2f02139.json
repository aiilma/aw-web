{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport RCompThumbnail from \"../../../assets/img/compositions/static.png\";\nimport RCompPreview from \"../../../assets/img/compositions/dynamic.gif\";\nimport * as types from \"./types\";\nexport const initialState = {\n  pageTitle: 'compositions',\n  isFetching: false,\n  compositions: [// {\n    //     id: \"79mWpD\",\n    //     title: 'Lespo',\n    //     price: 3.43,\n    //     thumbnail: RCompThumbnail,\n    //     preview: RCompPreview,\n    // }\n  ],\n  errors: {}\n};\n\nfunction compositionsReducer(state = initialState, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case types.CLEAR_LIST:\n      return _objectSpread({}, state, {\n        compositions: [],\n        errors: {}\n      });\n\n    case types.FETCH_LIST:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        errors: {}\n      });\n\n    case types.FETCH_LIST_COMPLETED:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        compositions: [...payload.data.map(c => {\n          return {\n            title: c.title,\n            link: c.link_alias,\n            price: c.price,\n            thumbnail: RCompThumbnail,\n            preview: RCompPreview\n          };\n        })],\n        errors: {}\n      });\n\n    case types.FETCH_LIST_FAILED:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        compositions: [],\n        errors: {\n          message: payload.data.message,\n          status: payload.status\n        }\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default compositionsReducer;","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/compositions/reducers.js"],"names":["RCompThumbnail","RCompPreview","types","initialState","pageTitle","isFetching","compositions","errors","compositionsReducer","state","type","payload","CLEAR_LIST","FETCH_LIST","FETCH_LIST_COMPLETED","data","map","c","title","link","link_alias","price","thumbnail","preview","FETCH_LIST_FAILED","message","status"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,6CAA3B;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,cADa;AAExBC,EAAAA,UAAU,EAAE,KAFY;AAGxBC,EAAAA,YAAY,EAAE,CACV;AACA;AACA;AACA;AACA;AACA;AACA;AAPU,GAHU;AAYxBC,EAAAA,MAAM,EAAE;AAZgB,CAArB;;AAeP,SAASC,mBAAT,CAA6BC,KAAK,GAAGN,YAArC,EAAmD;AAACO,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAAnD,EAA2E;AACvE,UAAQD,IAAR;AACI,SAAKR,KAAK,CAACU,UAAX;AACI,+BACOH,KADP;AAEIH,QAAAA,YAAY,EAAE,EAFlB;AAGIC,QAAAA,MAAM,EAAE;AAHZ;;AAKJ,SAAKL,KAAK,CAACW,UAAX;AACI,+BACOJ,KADP;AAEIJ,QAAAA,UAAU,EAAE,IAFhB;AAGIE,QAAAA,MAAM,EAAE;AAHZ;;AAKJ,SAAKL,KAAK,CAACY,oBAAX;AACI,+BACOL,KADP;AAEIJ,QAAAA,UAAU,EAAE,KAFhB;AAGIC,QAAAA,YAAY,EAAE,CACV,GAAGK,OAAO,CAACI,IAAR,CAAaC,GAAb,CAAiBC,CAAC,IAAI;AACrB,iBAAO;AACHC,YAAAA,KAAK,EAAED,CAAC,CAACC,KADN;AAEHC,YAAAA,IAAI,EAAEF,CAAC,CAACG,UAFL;AAGHC,YAAAA,KAAK,EAAEJ,CAAC,CAACI,KAHN;AAIHC,YAAAA,SAAS,EAAEtB,cAJR;AAKHuB,YAAAA,OAAO,EAAEtB;AALN,WAAP;AAOH,SARE,CADO,CAHlB;AAcIM,QAAAA,MAAM,EAAE;AAdZ;;AAgBJ,SAAKL,KAAK,CAACsB,iBAAX;AACI,+BACOf,KADP;AAEIJ,QAAAA,UAAU,EAAE,KAFhB;AAGIC,QAAAA,YAAY,EAAE,EAHlB;AAIIC,QAAAA,MAAM,EAAE;AACJkB,UAAAA,OAAO,EAAEd,OAAO,CAACI,IAAR,CAAaU,OADlB;AAEJC,UAAAA,MAAM,EAAEf,OAAO,CAACe;AAFZ;AAJZ;;AASJ;AACI,aAAOjB,KAAP;AAzCR;AA2CH;;AAED,eAAeD,mBAAf","sourcesContent":["import RCompThumbnail from \"../../../assets/img/compositions/static.png\";\r\nimport RCompPreview from \"../../../assets/img/compositions/dynamic.gif\";\r\nimport * as types from \"./types\";\r\n\r\nexport const initialState = {\r\n    pageTitle: 'compositions',\r\n    isFetching: false,\r\n    compositions: [\r\n        // {\r\n        //     id: \"79mWpD\",\r\n        //     title: 'Lespo',\r\n        //     price: 3.43,\r\n        //     thumbnail: RCompThumbnail,\r\n        //     preview: RCompPreview,\r\n        // }\r\n    ],\r\n    errors: {}\r\n}\r\n\r\nfunction compositionsReducer(state = initialState, {type, payload = null}) {\r\n    switch (type) {\r\n        case types.CLEAR_LIST:\r\n            return {\r\n                ...state,\r\n                compositions: [],\r\n                errors: {},\r\n            }\r\n        case types.FETCH_LIST:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                errors: {},\r\n            }\r\n        case types.FETCH_LIST_COMPLETED:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                compositions: [\r\n                    ...payload.data.map(c => {\r\n                        return {\r\n                            title: c.title,\r\n                            link: c.link_alias,\r\n                            price: c.price,\r\n                            thumbnail: RCompThumbnail,\r\n                            preview: RCompPreview,\r\n                        }\r\n                    })\r\n                ],\r\n                errors: {}\r\n            }\r\n        case types.FETCH_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                compositions: [],\r\n                errors: {\r\n                    message: payload.data.message,\r\n                    status: payload.status\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default compositionsReducer"]},"metadata":{},"sourceType":"module"}