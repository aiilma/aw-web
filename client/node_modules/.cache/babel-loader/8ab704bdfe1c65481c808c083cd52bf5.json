{"ast":null,"code":"import * as types from \"./types\";\nexport const login = data => {\n  console.log(data);\n\n  if (data.success) {\n    const user = data.data.user;\n    let userData = {\n      user_id: user.user_id,\n      steamid: user.steamid,\n      nickname: user.nickname,\n      avatar: user.avatar,\n      balance: user.balance,\n      group: user.group,\n      token: data.data.token,\n      timestamp: new Date().toString()\n    }; // save app state with user date in local storage\n\n    localStorage[\"user\"] = JSON.stringify(userData);\n    return authLogin({\n      user: userData\n    });\n  } else alert(\"failed\");\n};\nexport const logout = () => {\n  const userData = {}; // save app state with user date in local storage\n\n  localStorage[\"user\"] = JSON.stringify(userData);\n  return authLogout();\n};\n\nfunction authLogin() {\n  return {\n    type: types.AUTH_LOGIN\n  };\n}\n\nfunction authLogout(payload) {\n  return {\n    type: types.AUTH_LOGOUT,\n    payload\n  };\n}","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/actions.js"],"names":["types","login","data","console","log","success","user","userData","user_id","steamid","nickname","avatar","balance","group","token","timestamp","Date","toString","localStorage","JSON","stringify","authLogin","alert","logout","authLogout","type","AUTH_LOGIN","payload","AUTH_LOGOUT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,MAAIA,IAAI,CAACG,OAAT,EAAkB;AAAA,UACPC,IADO,GACCJ,IAAI,CAACA,IADN,CACPI,IADO;AAEd,QAAIC,QAAQ,GAAG;AACXC,MAAAA,OAAO,EAAEF,IAAI,CAACE,OADH;AAEXC,MAAAA,OAAO,EAAEH,IAAI,CAACG,OAFH;AAGXC,MAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAHJ;AAIXC,MAAAA,MAAM,EAAEL,IAAI,CAACK,MAJF;AAKXC,MAAAA,OAAO,EAAEN,IAAI,CAACM,OALH;AAMXC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAND;AAOXC,MAAAA,KAAK,EAAEZ,IAAI,CAACA,IAAL,CAAUY,KAPN;AAQXC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,QAAX;AARA,KAAf,CAFc,CAad;;AACAC,IAAAA,YAAY,CAAC,MAAD,CAAZ,GAAuBC,IAAI,CAACC,SAAL,CAAeb,QAAf,CAAvB;AAEA,WAAOc,SAAS,CAAC;AACbf,MAAAA,IAAI,EAAEC;AADO,KAAD,CAAhB;AAGH,GAnBD,MAmBOe,KAAK,CAAC,QAAD,CAAL;AACV,CAtBM;AAwBP,OAAO,MAAMC,MAAM,GAAG,MAAM;AACxB,QAAMhB,QAAQ,GAAG,EAAjB,CADwB,CAExB;;AACAW,EAAAA,YAAY,CAAC,MAAD,CAAZ,GAAuBC,IAAI,CAACC,SAAL,CAAeb,QAAf,CAAvB;AACA,SAAOiB,UAAU,EAAjB;AACH,CALM;;AAOP,SAASH,SAAT,GAAqB;AACjB,SAAO;AACHI,IAAAA,IAAI,EAAEzB,KAAK,CAAC0B;AADT,GAAP;AAGH;;AAED,SAASF,UAAT,CAAoBG,OAApB,EAA6B;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAEzB,KAAK,CAAC4B,WADT;AAEHD,IAAAA;AAFG,GAAP;AAIH","sourcesContent":["import * as types from \"./types\";\r\n\r\nexport const login = (data) => {\r\n    console.log(data)\r\n    if (data.success) {\r\n        const {user} = data.data\r\n        let userData = {\r\n            user_id: user.user_id,\r\n            steamid: user.steamid,\r\n            nickname: user.nickname,\r\n            avatar: user.avatar,\r\n            balance: user.balance,\r\n            group: user.group,\r\n            token: data.data.token,\r\n            timestamp: new Date().toString()\r\n        };\r\n\r\n        // save app state with user date in local storage\r\n        localStorage[\"user\"] = JSON.stringify(userData);\r\n\r\n        return authLogin({\r\n            user: userData\r\n        })\r\n    } else alert(\"failed\");\r\n}\r\n\r\nexport const logout = () => {\r\n    const userData = {}\r\n    // save app state with user date in local storage\r\n    localStorage[\"user\"] = JSON.stringify(userData);\r\n    return authLogout()\r\n}\r\n\r\nfunction authLogin() {\r\n    return {\r\n        type: types.AUTH_LOGIN\r\n    }\r\n}\r\n\r\nfunction authLogout(payload) {\r\n    return {\r\n        type: types.AUTH_LOGOUT,\r\n        payload\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}