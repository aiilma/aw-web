{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\Compositions\\\\CompositionsContainer.js\";\nimport React, { Component } from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport { withRouter } from \"react-router-dom\";\nimport CompositionList from \"./CompositionList\";\nimport { connect } from \"react-redux\";\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\nimport Container from \"@material-ui/core/Container\";\nimport styled from \"styled-components\";\nimport { fetchList, clearList } from \"../../../store/ducks/compositions/operations\";\nimport Preloader from \"../../common/Preloader\";\nimport queryString from 'query-string';\nimport Pagination from \"../../common/Pagination\";\nconst CompListWrapper = styled(Container)`\n        padding-top: ${({\n  theme\n}) => theme.spacing(2)}px;\n        padding-bottom: ${({\n  theme\n}) => theme.spacing(2)}px;\n        background-color: rgba(33,33,33,.95);\n        border-radius: 20px;\n`;\nconst PageCaptionSpacer = styled.div`\n    padding: ${({\n  theme\n}) => theme.spacing(4, 0)};\n`;\n\nclass CompositionsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.compositions.length === 0) {\n      const search = queryString.parse(this.props.location.search);\n      const uri = queryString.stringifyUrl({\n        url: this.props.location.pathname,\n        query: search\n      });\n      this.props.fetchList(uri);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.compositions.length > 0) {\n      this.props.clearList();\n    }\n  }\n\n  handlePageChange(e, to) {\n    const uri = queryString.stringifyUrl({\n      url: this.props.location.pathname,\n      query: {\n        page: to\n      }\n    });\n    this.props.fetchList(uri);\n  }\n\n  render() {\n    const _this$props = this.props,\n          total = _this$props.total,\n          per_page = _this$props.per_page;\n    const countPages = Math.ceil(total / per_page);\n    return React.createElement(SecondaryLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(PageCaptionSpacer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      align: \"left\",\n      color: \"textPrimary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\u041B\\u0438\\u0441\\u0442\\u0438\\u043D\\u0433 \\u043A\\u043E\\u043C\\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u0439\"))), React.createElement(CompListWrapper, {\n      maxWidth: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      countPages: countPages,\n      handlePageChange: this.handlePageChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }) : React.createElement(CompositionList, {\n      compositions: this.props.compositions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      countPages: countPages,\n      handlePageChange: this.handlePageChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  compositions: store.compositions.compositions,\n  isFetching: store.compositions.isFetching,\n  total: store.compositions.total,\n  per_page: store.compositions.per_page\n});\n\nexport default connect(mapStateToProps, {\n  fetchList,\n  clearList\n})(withRouter(CompositionsContainer));","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/Compositions/CompositionsContainer.js"],"names":["React","Component","Typography","withRouter","CompositionList","connect","SecondaryLayout","Container","styled","fetchList","clearList","Preloader","queryString","Pagination","CompListWrapper","theme","spacing","PageCaptionSpacer","div","CompositionsContainer","constructor","props","state","currentPage","componentDidMount","compositions","length","search","parse","location","uri","stringifyUrl","url","pathname","query","componentWillUnmount","handlePageChange","e","to","page","render","total","per_page","countPages","Math","ceil","bind","isFetching","mapStateToProps","store"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport CompositionList from \"./CompositionList\";\r\nimport {connect} from \"react-redux\";\r\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport styled from \"styled-components\";\r\nimport {fetchList, clearList} from \"../../../store/ducks/compositions/operations\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport queryString from 'query-string'\r\nimport Pagination from \"../../common/Pagination\";\r\n\r\n\r\nconst CompListWrapper = styled(Container)`\r\n        padding-top: ${({theme}) => theme.spacing(2)}px;\r\n        padding-bottom: ${({theme}) => theme.spacing(2)}px;\r\n        background-color: rgba(33,33,33,.95);\r\n        border-radius: 20px;\r\n`\r\n\r\nconst PageCaptionSpacer = styled.div`\r\n    padding: ${({theme}) => theme.spacing(4, 0)};\r\n`\r\n\r\nclass CompositionsContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentPage: 1,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.compositions.length === 0) {\r\n            const search = queryString.parse(this.props.location.search)\r\n            const uri = queryString.stringifyUrl({url: this.props.location.pathname, query: search});\r\n            this.props.fetchList(uri)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.compositions.length > 0) {\r\n            this.props.clearList()\r\n        }\r\n    }\r\n\r\n    handlePageChange(e, to) {\r\n        const uri = queryString.stringifyUrl({\r\n            url: this.props.location.pathname, query: {\r\n                page: to,\r\n            }\r\n        });\r\n        this.props.fetchList(uri)\r\n    };\r\n\r\n    render() {\r\n        const {total, per_page} = this.props\r\n        const countPages = Math.ceil(total / per_page)\r\n\r\n        return (\r\n            <SecondaryLayout>\r\n                <PageCaptionSpacer>\r\n                    <Container maxWidth=\"xl\">\r\n                        <Typography component=\"h1\" variant=\"h5\" align=\"left\" color=\"textPrimary\">\r\n                            Листинг композиций\r\n                        </Typography>\r\n                    </Container>\r\n                </PageCaptionSpacer>\r\n\r\n                <CompListWrapper maxWidth=\"xl\">\r\n\r\n                    <Pagination\r\n                        countPages={countPages}\r\n                        handlePageChange={this.handlePageChange.bind(this)}\r\n                    />\r\n                    {\r\n                        this.props.isFetching ?\r\n                            <Preloader/> :\r\n                            <CompositionList compositions={this.props.compositions}/>\r\n                    }\r\n                    <Pagination\r\n                        countPages={countPages}\r\n                        handlePageChange={this.handlePageChange.bind(this)}\r\n                    />\r\n\r\n                </CompListWrapper>\r\n\r\n            </SecondaryLayout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    compositions: store.compositions.compositions,\r\n    isFetching: store.compositions.isFetching,\r\n    total: store.compositions.total,\r\n    per_page: store.compositions.per_page,\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchList, clearList})(withRouter(CompositionsContainer))"]},"metadata":{},"sourceType":"module"}