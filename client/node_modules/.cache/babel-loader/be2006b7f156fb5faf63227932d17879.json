{"ast":null,"code":"// import * as axios from 'axios'\nexport default ((url, method, body) => {// const options = {\n  //     method,\n  //     headers: requestHeaders( ),\n  //     body: method !== \"GET\" ? JSON.stringify( body ) : null,\n  // };\n  //\n  // return axios( url, options )\n  //     .then( res => parseStatus( res.status, res.json() ) );\n});\n\nfunction parseStatus(status, res) {\n  return new Promise((resolve, reject) => {\n    if (status >= 200 && status < 300) {\n      res.then(response => resolve(response));\n    } else {\n      res.then(response => reject({\n        status,\n        response\n      }));\n    }\n  });\n}\n\nfunction requestHeaders() {\n  return {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n}","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/utils/fetch.js"],"names":["url","method","body","parseStatus","status","res","Promise","resolve","reject","then","response","requestHeaders","Accept"],"mappings":"AAAA;AAEA,gBAAe,CAACA,GAAD,EAAMC,MAAN,EAAcC,IAAd,KAAuB,CAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CATD;;AAWA,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,GAA7B,EAAkC;AAC9B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAIJ,MAAM,IAAI,GAAV,IAAiBA,MAAM,GAAG,GAA9B,EAAmC;AAC/BC,MAAAA,GAAG,CAACI,IAAJ,CAASC,QAAQ,IAAIH,OAAO,CAACG,QAAD,CAA5B;AACH,KAFD,MAEO;AACHL,MAAAA,GAAG,CAACI,IAAJ,CAASC,QAAQ,IAAIF,MAAM,CAAC;AAACJ,QAAAA,MAAD;AAASM,QAAAA;AAAT,OAAD,CAA3B;AACH;AACJ,GANM,CAAP;AAOH;;AAED,SAASC,cAAT,GAA0B;AACtB,SAAO;AACHC,IAAAA,MAAM,EAAE,kBADL;AAEH,oBAAgB;AAFb,GAAP;AAIH","sourcesContent":["// import * as axios from 'axios'\r\n\r\nexport default (url, method, body) => {\r\n    // const options = {\r\n    //     method,\r\n    //     headers: requestHeaders( ),\r\n    //     body: method !== \"GET\" ? JSON.stringify( body ) : null,\r\n    // };\r\n    //\r\n    // return axios( url, options )\r\n    //     .then( res => parseStatus( res.status, res.json() ) );\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n    return new Promise((resolve, reject) => {\r\n        if (status >= 200 && status < 300) {\r\n            res.then(response => resolve(response));\r\n        } else {\r\n            res.then(response => reject({status, response}));\r\n        }\r\n    });\r\n}\r\n\r\nfunction requestHeaders() {\r\n    return {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}