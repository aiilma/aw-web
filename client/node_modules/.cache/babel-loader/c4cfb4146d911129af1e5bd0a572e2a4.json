{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\CompOrderForm\\\\Container.js\";\nimport React from 'react';\nimport { Field, withFormik } from 'formik';\nimport { connect } from \"react-redux\";\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\nimport { Spacer } from \"../../common/layout\";\nimport { FormWrapper, InnerFormSpacer, Title } from \"../../common/form_components\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { CompVariantCheckbox } from \"../../common/CompVariant\";\nimport OrderFormInputs from \"./Inputs/Inputs_bckp\";\n\nfunction Variant({\n  id,\n  name,\n  value\n}) {\n  return React.createElement(Field, {\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: id // checked={field.value}\n    // {...field}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n}\n\nconst TypeVariants = (_ref) => {\n  let typeVariant = _ref.typeVariant,\n      props = _objectWithoutProperties(_ref, [\"typeVariant\"]);\n\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    style: {\n      margin: '1rem 0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F:\"), React.createElement(Variant, {\n    id: \"long\",\n    name: \"long\",\n    value: typeVariant.long,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))));\n};\n\nconst OrderForm = props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        orderFormData = props.orderFormData,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit,\n        handleReset = props.handleReset;\n  return React.createElement(SecondaryLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(FormWrapper, {\n    maxWidth: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(InnerFormSpacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Title, {\n    text: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(TypeVariants, {\n    typeVariant: values.typeVariant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    onClick: handleReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Reset\")))));\n};\n\nconst getDefaultValues = state => {\n  let values = {\n    typeVariant: {\n      // long: state.typeVariant === 1,\n      // short: state.typeVariant === 2,\n      long: true,\n      short: false\n    }\n  }; // inputs\n\n  Object.keys(state.inputs).forEach(keyName => {\n    values[keyName] = '';\n  });\n  return values;\n};\n\nconst OrderFormContainer = withFormik({\n  mapPropsToValues: props => getDefaultValues(props.orderFormData),\n  // Custom sync validation\n  validate: values => {\n    const errors = {}; // if (!values.name) {\n    //     errors.name = 'Required';\n    // }\n\n    return errors;\n  },\n  handleSubmit: (values, _ref2) => {\n    let setSubmitting = _ref2.setSubmitting,\n        props = _objectWithoutProperties(_ref2, [\"setSubmitting\"]);\n\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false); // props.props.history.push(`${props.props.location.pathname}/success`)\n    }, 1000);\n  },\n  displayName: 'OrderForm'\n})(OrderForm);\n\nconst mapStateToProps = state => ({\n  orderFormData: state.compOrderForm\n});\n\nexport default connect(mapStateToProps, {})(OrderFormContainer);","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/CompOrderForm/Container.js"],"names":["React","Field","withFormik","connect","SecondaryLayout","Spacer","FormWrapper","InnerFormSpacer","Title","Grid","Box","FormLabel","FormGroup","CompVariantCheckbox","OrderFormInputs","Variant","id","name","value","TypeVariants","typeVariant","props","margin","long","OrderForm","values","touched","errors","orderFormData","handleChange","handleBlur","handleSubmit","handleReset","getDefaultValues","state","short","Object","keys","inputs","forEach","keyName","OrderFormContainer","mapPropsToValues","validate","setSubmitting","setTimeout","alert","JSON","stringify","displayName","mapStateToProps","compOrderForm"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Field, withFormik} from 'formik';\r\nimport {connect} from \"react-redux\";\r\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\r\nimport {Spacer} from \"../../common/layout\";\r\nimport {FormWrapper, InnerFormSpacer, Title} from \"../../common/form_components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport {CompVariantCheckbox} from \"../../common/CompVariant\";\r\nimport OrderFormInputs from \"./Inputs/Inputs_bckp\";\r\n\r\nfunction Variant({id, name, value}) {\r\n    return (\r\n        <Field name={name}>\r\n            <input\r\n                type=\"checkbox\"\r\n                id={id}\r\n                // checked={field.value}\r\n                // {...field}\r\n            />\r\n        </Field>\r\n    );\r\n}\r\n\r\nconst TypeVariants = ({typeVariant, ...props}) => {\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Box>\r\n                    <FormLabel component=\"legend\" style={{margin: '1rem 0',}}>Вариант отображения:</FormLabel>\r\n                    <Variant id=\"long\" name=\"long\" value={typeVariant.long}/>\r\n                    {/*<Variant id=\"short\" name=\"short\" value={typeVariant.short} />*/}\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nconst OrderForm = props => {\r\n    const {\r\n        values, touched, errors, orderFormData,\r\n        handleChange, handleBlur, handleSubmit, handleReset\r\n    } = props;\r\n\r\n    return (\r\n        <SecondaryLayout>\r\n            <Spacer/>\r\n            <FormWrapper maxWidth=\"xl\">\r\n                <InnerFormSpacer>\r\n                    <Title text=\"Форма заказа\"/>\r\n                    <form onSubmit={handleSubmit}>\r\n\r\n\r\n                        {/*type varient*/}\r\n                        <TypeVariants typeVariant={values.typeVariant}/>\r\n\r\n                        {/*inputs*/}\r\n\r\n                        <button type=\"submit\">Submit</button>\r\n                        <button onClick={handleReset}>Reset</button>\r\n\r\n\r\n                    </form>\r\n                </InnerFormSpacer>\r\n            </FormWrapper>\r\n        </SecondaryLayout>\r\n    );\r\n};\r\n\r\nconst getDefaultValues = (state) => {\r\n    let values = {\r\n        typeVariant: {\r\n            // long: state.typeVariant === 1,\r\n            // short: state.typeVariant === 2,\r\n            long: true,\r\n            short: false,\r\n        }\r\n    }\r\n\r\n    // inputs\r\n    Object.keys(state.inputs).forEach(keyName => {\r\n        values[keyName] = ''\r\n    })\r\n\r\n    return values\r\n}\r\n\r\nconst OrderFormContainer = withFormik({\r\n    mapPropsToValues: (props) => (getDefaultValues(props.orderFormData)),\r\n\r\n    // Custom sync validation\r\n    validate: values => {\r\n        const errors = {};\r\n\r\n        // if (!values.name) {\r\n        //     errors.name = 'Required';\r\n        // }\r\n\r\n        return errors;\r\n    },\r\n\r\n    handleSubmit: (values, {setSubmitting, ...props}) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n            // props.props.history.push(`${props.props.location.pathname}/success`)\r\n        }, 1000);\r\n    },\r\n\r\n    displayName: 'OrderForm',\r\n})(OrderForm);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    orderFormData: state.compOrderForm\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(OrderFormContainer)"]},"metadata":{},"sourceType":"module"}