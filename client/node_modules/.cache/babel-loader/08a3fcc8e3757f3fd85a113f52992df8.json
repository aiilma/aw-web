{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _extends from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { withFormik } from \"formik\";\nimport SuggestForm from \"./Form\";\nimport { withSnackbar } from \"notistack\";\nimport { withRouter } from \"react-router-dom\";\nimport { checkOnMax, checkOnMin, checkOnRequired } from \"../../../store/utils/form_helpers\";\nconst EnhancedForm = withFormik({\n  mapPropsToValues: (_ref) => {\n    let _ref$suggestForm = _ref.suggestForm,\n        typeVariant = _ref$suggestForm.typeVariant,\n        description = _ref$suggestForm.description,\n        props = _objectWithoutProperties(_ref, [\"suggestForm\"]);\n\n    return {\n      typeVariant,\n      description\n    };\n  },\n  // Custom sync validation\n  validate: (values, _ref2) => {\n    let props = _extends({}, _ref2);\n\n    const errors = {};\n\n    if (Array.isArray(values.typeVariant) && !values.typeVariant.length) {\n      errors[\"typeVariant\"] = \"Обязательно к заполнению\";\n    }\n\n    let minLimit = 10;\n    let maxLimit = 3072;\n\n    if (!checkOnRequired(values.description)) {\n      errors[\"description\"] = 'Обязательно к заполнению';\n    }\n\n    if (!checkOnMin(values.description, minLimit)) {\n      errors[\"description\"] = `Минимальная длина ${minLimit} символов`;\n    }\n\n    if (!checkOnMax(values.description, maxLimit)) {\n      errors[\"description\"] = `Превышена максимальная длина`;\n    }\n\n    return errors;\n  },\n  handleSubmit: (values, _ref3) => {\n    let setSubmitting = _ref3.setSubmitting,\n        resetForm = _ref3.resetForm,\n        props = _objectWithoutProperties(_ref3, [\"setSubmitting\", \"resetForm\"]);\n\n    const _props$props = props.props,\n          suggestForm = _props$props.suggestForm,\n          makeRequest = _props$props.makeRequest,\n          enqueueSnackbar = _props$props.enqueueSnackbar,\n          history = _props$props.history;\n\n    const data = _objectSpread({}, values);\n\n    setSubmitting(true); // send...\n\n    makeRequest(data).then(res => {\n      console.log(res);\n      setSubmitting(false);\n      resetForm(suggestForm); // history.push('/')\n\n      enqueueSnackbar('good', {\n        variant: 'success',\n        autoHideDuration: 5000\n      });\n    }).catch(err => {\n      console.log(err);\n      setSubmitting(false);\n      enqueueSnackbar('bad', {\n        variant: 'error',\n        autoHideDuration: 5000\n      });\n    });\n  },\n  enableReinitialize: true,\n  displayName: 'SuggestForm'\n})(SuggestForm);\nexport default withSnackbar(withRouter(EnhancedForm));","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/SuggestForm/EnhancedForm.js"],"names":["React","withFormik","SuggestForm","withSnackbar","withRouter","checkOnMax","checkOnMin","checkOnRequired","EnhancedForm","mapPropsToValues","suggestForm","typeVariant","description","props","validate","values","errors","Array","isArray","length","minLimit","maxLimit","handleSubmit","setSubmitting","resetForm","makeRequest","enqueueSnackbar","history","data","then","res","console","log","variant","autoHideDuration","catch","err","enableReinitialize","displayName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {withFormik} from \"formik\";\r\nimport SuggestForm from \"./Form\";\r\nimport {withSnackbar} from \"notistack\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {checkOnMax, checkOnMin, checkOnRequired} from \"../../../store/utils/form_helpers\";\r\n\r\nconst EnhancedForm = withFormik({\r\n    mapPropsToValues: ({suggestForm: {typeVariant, description}, ...props}) => {\r\n        return {\r\n            typeVariant,\r\n            description\r\n        }\r\n    },\r\n\r\n    // Custom sync validation\r\n    validate: (values, {...props}) => {\r\n        const errors = {};\r\n\r\n        if (Array.isArray(values.typeVariant) && !values.typeVariant.length) {\r\n            errors[\"typeVariant\"] = \"Обязательно к заполнению\"\r\n        }\r\n\r\n        let minLimit = 10\r\n        let maxLimit = 3072\r\n        if (!checkOnRequired(values.description)) {\r\n            errors[\"description\"] = 'Обязательно к заполнению'\r\n        }\r\n        if (!checkOnMin(values.description, minLimit)) {\r\n            errors[\"description\"] = `Минимальная длина ${minLimit} символов`\r\n        }\r\n        if (!checkOnMax(values.description, maxLimit)) {\r\n            errors[\"description\"] = `Превышена максимальная длина`\r\n        }\r\n\r\n        return errors;\r\n    },\r\n\r\n    handleSubmit: (values, {setSubmitting, resetForm, ...props}) => {\r\n        const {suggestForm, makeRequest, enqueueSnackbar, history} = props.props\r\n\r\n        const data = {\r\n            ...values\r\n        }\r\n\r\n        setSubmitting(true);\r\n        // send...\r\n        makeRequest(data).then((res) => {\r\n            console.log(res)\r\n            setSubmitting(false)\r\n\r\n            resetForm(suggestForm)\r\n            // history.push('/')\r\n\r\n            enqueueSnackbar('good', {\r\n                variant: 'success',\r\n                autoHideDuration: 5000,\r\n            });\r\n        }).catch(err => {\r\n            console.log(err)\r\n            setSubmitting(false)\r\n\r\n            enqueueSnackbar('bad', {\r\n                variant: 'error',\r\n                autoHideDuration: 5000,\r\n            });\r\n        })\r\n\r\n    },\r\n\r\n    enableReinitialize: true,\r\n\r\n    displayName: 'SuggestForm',\r\n})(SuggestForm)\r\n\r\nexport default withSnackbar(withRouter(EnhancedForm))"]},"metadata":{},"sourceType":"module"}