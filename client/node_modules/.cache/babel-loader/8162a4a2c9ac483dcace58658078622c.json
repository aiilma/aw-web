{"ast":null,"code":"import * as axios from 'axios';\nexport default ((url, method, body) => {\n  const options = {\n    method,\n    headers: requestHeaders(),\n    body: method !== \"GET\" ? JSON.stringify(body) : null\n  };\n  return axios.get(url, options).then(res => console.log(res.data)); // .then(res => parseStatus(res.status, res.data);\n});\n\nfunction parseStatus(status, res) {\n  return new Promise((resolve, reject) => {\n    if (status >= 200 && status < 300) {\n      res.then(response => resolve(response));\n    } else {\n      res.then(response => reject({\n        status,\n        response\n      }));\n    }\n  });\n}\n\nfunction requestHeaders() {\n  return {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n}","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/utils/fetch.js"],"names":["axios","url","method","body","options","headers","requestHeaders","JSON","stringify","get","then","res","console","log","data","parseStatus","status","Promise","resolve","reject","response","Accept"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,gBAAe,CAACC,GAAD,EAAMC,MAAN,EAAcC,IAAd,KAAuB;AAClC,QAAMC,OAAO,GAAG;AACZF,IAAAA,MADY;AAEZG,IAAAA,OAAO,EAAEC,cAAc,EAFX;AAGZH,IAAAA,IAAI,EAAED,MAAM,KAAK,KAAX,GAAmBK,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAnB,GAA0C;AAHpC,GAAhB;AAMA,SAAOH,KAAK,CAACS,GAAN,CAAUR,GAAV,EAAeG,OAAf,EACFM,IADE,CACGC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CADV,CAAP,CAPkC,CAS9B;AACP,CAVD;;AAYA,SAASC,WAAT,CAAqBC,MAArB,EAA6BL,GAA7B,EAAkC;AAC9B,SAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAIH,MAAM,IAAI,GAAV,IAAiBA,MAAM,GAAG,GAA9B,EAAmC;AAC/BL,MAAAA,GAAG,CAACD,IAAJ,CAASU,QAAQ,IAAIF,OAAO,CAACE,QAAD,CAA5B;AACH,KAFD,MAEO;AACHT,MAAAA,GAAG,CAACD,IAAJ,CAASU,QAAQ,IAAID,MAAM,CAAC;AAACH,QAAAA,MAAD;AAASI,QAAAA;AAAT,OAAD,CAA3B;AACH;AACJ,GANM,CAAP;AAOH;;AAED,SAASd,cAAT,GAA0B;AACtB,SAAO;AACHe,IAAAA,MAAM,EAAE,kBADL;AAEH,oBAAgB;AAFb,GAAP;AAIH","sourcesContent":["import * as axios from 'axios'\r\n\r\nexport default (url, method, body) => {\r\n    const options = {\r\n        method,\r\n        headers: requestHeaders(),\r\n        body: method !== \"GET\" ? JSON.stringify(body) : null,\r\n    };\r\n\r\n    return axios.get(url, options)\r\n        .then(res => console.log(res.data));\r\n        // .then(res => parseStatus(res.status, res.data);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n    return new Promise((resolve, reject) => {\r\n        if (status >= 200 && status < 300) {\r\n            res.then(response => resolve(response));\r\n        } else {\r\n            res.then(response => reject({status, response}));\r\n        }\r\n    });\r\n}\r\n\r\nfunction requestHeaders() {\r\n    return {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}