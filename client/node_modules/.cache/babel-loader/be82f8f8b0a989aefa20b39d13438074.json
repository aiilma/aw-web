{"ast":null,"code":"import { authLogin, authLogout, authLoginCompleted, authLogoutCompleted, authLoginFailed, authLogoutFailed } from \"./actions\";\nimport { fetch } from \"../../utils\"; // import {handleHTTPError} from \"../error/operations\";\n\nimport UserApi from \"../../utils/UserApi\";\nimport history from \"../../utils/history\";\n\nconst login = params => dispatch => {\n  dispatch(authLogin());\n  return fetch(`/airlock/csrf-cookie`, \"GET\").then(() => {\n    fetch(`/api/login/steam/callback${params}`, \"GET\").then(user => {\n      UserApi.authenticate(() => dispatch(authLoginCompleted(user)));\n    }).catch(err => {\n      dispatch(authLoginFailed()); // dispatch(handleHTTPError(err))\n    });\n  }).catch(err => {\n    dispatch(authLoginFailed()); // dispatch(handleHTTPError(err))\n  });\n};\n\nconst logout = () => dispatch => {\n  dispatch(authLogout());\n  history.push('/');\n  return fetch(`/api/logout`, \"POST\").then(res => {\n    UserApi.logout(() => {\n      dispatch(authLogoutCompleted()); // history.push('/')\n    });\n  }).catch(err => {\n    dispatch(authLogoutFailed(err)); // dispatch(handleHTTPError(err))\n  });\n};\n\nconst me = () => dispatch => {\n  dispatch(authLogin());\n  return fetch(`/api/user`, \"GET\").then(user => {\n    UserApi.authenticate(() => dispatch(authLoginCompleted(user)));\n    return user;\n  }).catch(err => {\n    dispatch(logout()); // dispatch(handleHTTPError(err))\n  });\n};\n\nexport { login, logout, me };","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/operations.js"],"names":["authLogin","authLogout","authLoginCompleted","authLogoutCompleted","authLoginFailed","authLogoutFailed","fetch","UserApi","history","login","params","dispatch","then","user","authenticate","catch","err","logout","push","res","me"],"mappings":"AAAA,SACIA,SADJ,EAEIC,UAFJ,EAGIC,kBAHJ,EAIIC,mBAJJ,EAKIC,eALJ,EAMIC,gBANJ,QAOO,WAPP;AAQA,SAAQC,KAAR,QAAoB,aAApB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,KAAK,GAAIC,MAAD,IAAaC,QAAD,IAAc;AACpCA,EAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AACA,SAAOM,KAAK,CAAE,sBAAF,EAAyB,KAAzB,CAAL,CACFM,IADE,CACG,MAAM;AACRN,IAAAA,KAAK,CAAE,4BAA2BI,MAAO,EAApC,EAAuC,KAAvC,CAAL,CACKE,IADL,CACWC,IAAD,IAAU;AACZN,MAAAA,OAAO,CAACO,YAAR,CAAqB,MAAMH,QAAQ,CAACT,kBAAkB,CAACW,IAAD,CAAnB,CAAnC;AACH,KAHL,EAIKE,KAJL,CAIYC,GAAD,IAAS;AACZL,MAAAA,QAAQ,CAACP,eAAe,EAAhB,CAAR,CADY,CAEZ;AACH,KAPL;AAQH,GAVE,EAWFW,KAXE,CAWIC,GAAG,IAAI;AACVL,IAAAA,QAAQ,CAACP,eAAe,EAAhB,CAAR,CADU,CAEV;AACH,GAdE,CAAP;AAeH,CAjBD;;AAmBA,MAAMa,MAAM,GAAG,MAAMN,QAAQ,IAAI;AAC7BA,EAAAA,QAAQ,CAACV,UAAU,EAAX,CAAR;AACAO,EAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACA,SAAOZ,KAAK,CAAE,aAAF,EAAgB,MAAhB,CAAL,CACFM,IADE,CACIO,GAAD,IAAS;AACXZ,IAAAA,OAAO,CAACU,MAAR,CAAe,MAAM;AACjBN,MAAAA,QAAQ,CAACR,mBAAmB,EAApB,CAAR,CADiB,CAEjB;AACH,KAHD;AAIH,GANE,EAOFY,KAPE,CAOIC,GAAG,IAAI;AACVL,IAAAA,QAAQ,CAACN,gBAAgB,CAACW,GAAD,CAAjB,CAAR,CADU,CAEV;AACH,GAVE,CAAP;AAWH,CAdD;;AAgBA,MAAMI,EAAE,GAAG,MAAMT,QAAQ,IAAI;AACzBA,EAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AACA,SAAOM,KAAK,CAAE,WAAF,EAAc,KAAd,CAAL,CACFM,IADE,CACIC,IAAD,IAAU;AACZN,IAAAA,OAAO,CAACO,YAAR,CAAqB,MAAMH,QAAQ,CAACT,kBAAkB,CAACW,IAAD,CAAnB,CAAnC;AACA,WAAOA,IAAP;AACH,GAJE,EAKFE,KALE,CAKKC,GAAD,IAAS;AACZL,IAAAA,QAAQ,CAACM,MAAM,EAAP,CAAR,CADY,CAEZ;AACH,GARE,CAAP;AASH,CAXD;;AAcA,SACIR,KADJ,EACWQ,MADX,EACmBG,EADnB","sourcesContent":["import {\r\n    authLogin,\r\n    authLogout,\r\n    authLoginCompleted,\r\n    authLogoutCompleted,\r\n    authLoginFailed,\r\n    authLogoutFailed,\r\n} from \"./actions\";\r\nimport {fetch} from \"../../utils\";\r\n// import {handleHTTPError} from \"../error/operations\";\r\nimport UserApi from \"../../utils/UserApi\";\r\nimport history from \"../../utils/history\";\r\n\r\nconst login = (params) => (dispatch) => {\r\n    dispatch(authLogin())\r\n    return fetch(`/airlock/csrf-cookie`, \"GET\")\r\n        .then(() => {\r\n            fetch(`/api/login/steam/callback${params}`, \"GET\")\r\n                .then((user) => {\r\n                    UserApi.authenticate(() => dispatch(authLoginCompleted(user)))\r\n                })\r\n                .catch((err) => {\r\n                    dispatch(authLoginFailed())\r\n                    // dispatch(handleHTTPError(err))\r\n                });\r\n        })\r\n        .catch(err => {\r\n            dispatch(authLoginFailed())\r\n            // dispatch(handleHTTPError(err))\r\n        });\r\n}\r\n\r\nconst logout = () => dispatch => {\r\n    dispatch(authLogout())\r\n    history.push('/')\r\n    return fetch(`/api/logout`, \"POST\")\r\n        .then((res) => {\r\n            UserApi.logout(() => {\r\n                dispatch(authLogoutCompleted())\r\n                // history.push('/')\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(authLogoutFailed(err))\r\n            // dispatch(handleHTTPError(err))\r\n        });\r\n}\r\n\r\nconst me = () => dispatch => {\r\n    dispatch(authLogin())\r\n    return fetch(`/api/user`, \"GET\")\r\n        .then((user) => {\r\n            UserApi.authenticate(() => dispatch(authLoginCompleted(user)))\r\n            return user\r\n        })\r\n        .catch((err) => {\r\n            dispatch(logout())\r\n            // dispatch(handleHTTPError(err))\r\n        });\r\n}\r\n\r\n\r\nexport {\r\n    login, logout, me\r\n}"]},"metadata":{},"sourceType":"module"}