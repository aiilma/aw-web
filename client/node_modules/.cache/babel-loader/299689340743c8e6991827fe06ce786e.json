{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\Compositions\\\\CompositionsContainer.js\";\nimport React, { Component } from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport { withRouter } from \"react-router-dom\";\nimport CompositionList from \"./CompositionList\";\nimport { connect } from \"react-redux\";\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\nimport Container from \"@material-ui/core/Container\";\nimport styled from \"styled-components\";\nimport { fetchList } from \"../../../store/ducks/compositions/operations\";\nimport Preloader from \"../../common/Preloader\";\nconst PageCaptionSpacer = styled.div`\n    padding: ${({\n  theme\n}) => theme.spacing(4, 0)};\n`;\n\nclass CompositionsContainer extends Component {\n  componentDidMount() {\n    if (this.props.compositions.length === 0) {\n      const q = this.props.location.search;\n      this.props.fetchList(q);\n    }\n\n    console.log(this.props.compositions);\n  }\n\n  render() {\n    return React.createElement(SecondaryLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(PageCaptionSpacer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      align: \"left\",\n      color: \"textPrimary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"\\u041B\\u0438\\u0441\\u0442\\u0438\\u043D\\u0433 \\u043A\\u043E\\u043C\\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u0439\"))), React.createElement(CompositionList, {\n      compositions: this.props.compositions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  compositions: store.compositions.compositions\n});\n\nexport default connect(mapStateToProps, {\n  fetchList\n})(withRouter(CompositionsContainer));","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/Compositions/CompositionsContainer.js"],"names":["React","Component","Typography","withRouter","CompositionList","connect","SecondaryLayout","Container","styled","fetchList","Preloader","PageCaptionSpacer","div","theme","spacing","CompositionsContainer","componentDidMount","props","compositions","length","q","location","search","console","log","render","mapStateToProps","store"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,SAAR,QAAwB,8CAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,MAAMC,iBAAiB,GAAGH,MAAM,CAACI,GAAI;eACtB,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAaA,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAoB;CADhD;;AAIA,MAAMC,qBAAN,SAAoCd,SAApC,CAA8C;AAE1Ce,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,MAAxB,KAAmC,CAAvC,EAA0C;AACtC,YAAMC,CAAC,GAAG,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,MAA9B;AACA,WAAKL,KAAL,CAAWR,SAAX,CAAqBW,CAArB;AACH;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,YAAvB;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAwC,MAAA,KAAK,EAAC,MAA9C;AAAqD,MAAA,KAAK,EAAC,aAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAFJ,CADJ,CADJ,EAUI,oBAAC,eAAD;AAAiB,MAAA,YAAY,EAAE,KAAKR,KAAL,CAAWC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ;AAcH;;AAzByC;;AA4B9C,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAChCT,EAAAA,YAAY,EAAES,KAAK,CAACT,YAAN,CAAmBA;AADD,CAAZ,CAAxB;;AAIA,eAAeb,OAAO,CAACqB,eAAD,EAAkB;AAACjB,EAAAA;AAAD,CAAlB,CAAP,CAAsCN,UAAU,CAACY,qBAAD,CAAhD,CAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport CompositionList from \"./CompositionList\";\r\nimport {connect} from \"react-redux\";\r\nimport SecondaryLayout from \"../../layout/SecondaryLayout\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport styled from \"styled-components\";\r\nimport {fetchList} from \"../../../store/ducks/compositions/operations\";\r\nimport Preloader from \"../../common/Preloader\";\r\n\r\nconst PageCaptionSpacer = styled.div`\r\n    padding: ${({theme}) => theme.spacing(4, 0)};\r\n`\r\n\r\nclass CompositionsContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.compositions.length === 0) {\r\n            const q = this.props.location.search\r\n            this.props.fetchList(q)\r\n        }\r\n        console.log(this.props.compositions)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SecondaryLayout>\r\n                <PageCaptionSpacer>\r\n                    <Container maxWidth=\"xl\">\r\n                        <Preloader />\r\n                        <Typography component=\"h1\" variant=\"h5\" align=\"left\" color=\"textPrimary\">\r\n                            Листинг композиций\r\n                        </Typography>\r\n                    </Container>\r\n                </PageCaptionSpacer>\r\n\r\n                <CompositionList compositions={this.props.compositions}/>\r\n            </SecondaryLayout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    compositions: store.compositions.compositions\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchList})(withRouter(CompositionsContainer))"]},"metadata":{},"sourceType":"module"}