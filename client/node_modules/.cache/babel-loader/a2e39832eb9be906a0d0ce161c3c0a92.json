{"ast":null,"code":"import { authCheck, authLogout, authLogin } from \"./actions\";\nimport Http from '../../utils/Http';\n\nconst login = response => {\n  return dispatch => new Promise((resolve, reject) => {\n    if (response.success) {\n      const creds = response.data;\n      dispatch(authLogin(creds));\n      return resolve();\n    } else {\n      return reject();\n    }\n  });\n};\n\nconst logout = () => {\n  return dispatch => new Promise((resolve, reject) => {\n    dispatch(authLogout());\n    return resolve();\n    Http.post('api/auth/logout').then(() => {\n      dispatch(authLogout());\n      return resolve();\n    }).catch(err => {\n      const statusCode = err.response.status;\n      const data = {\n        error: null,\n        statusCode\n      };\n\n      if (statusCode === 401 || statusCode === 422) {\n        // status 401 means unauthorized\n        // status 422 means unprocessable entity\n        data.error = err.response.data.message;\n      }\n\n      return reject(data);\n    });\n  });\n};\n\nexport { login, logout };","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/operations.js"],"names":["authCheck","authLogout","authLogin","Http","login","response","dispatch","Promise","resolve","reject","success","creds","data","logout","post","then","catch","err","statusCode","status","error","message"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,UAAnB,EAA+BC,SAA/B,QAA+C,WAA/C;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,KAAK,GAAIC,QAAD,IAAc;AAExB,SAAOC,QAAQ,IACX,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7B,QAAIJ,QAAQ,CAACK,OAAb,EAAsB;AAAA,YACLC,KADK,GACIN,QADJ,CACXO,IADW;AAElBN,MAAAA,QAAQ,CAACJ,SAAS,CAACS,KAAD,CAAV,CAAR;AACA,aAAOH,OAAO,EAAd;AACH,KAJD,MAIO;AACH,aAAOC,MAAM,EAAb;AACH;AACJ,GARD,CADJ;AAYH,CAdD;;AAgBA,MAAMI,MAAM,GAAG,MAAM;AACjB,SAAOP,QAAQ,IACX,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7BH,IAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACA,WAAOO,OAAO,EAAd;AAEAL,IAAAA,IAAI,CAACW,IAAL,CAAU,iBAAV,EACKC,IADL,CACU,MAAM;AACRT,MAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACA,aAAOO,OAAO,EAAd;AACH,KAJL,EAKKQ,KALL,CAKWC,GAAG,IAAI;AACV,YAAMC,UAAU,GAAGD,GAAG,CAACZ,QAAJ,CAAac,MAAhC;AACA,YAAMP,IAAI,GAAG;AACTQ,QAAAA,KAAK,EAAE,IADE;AAETF,QAAAA;AAFS,OAAb;;AAIA,UAAIA,UAAU,KAAK,GAAf,IAAsBA,UAAU,KAAK,GAAzC,EAA8C;AAC1C;AACA;AACAN,QAAAA,IAAI,CAACQ,KAAL,GAAaH,GAAG,CAACZ,QAAJ,CAAaO,IAAb,CAAkBS,OAA/B;AACH;;AACD,aAAOZ,MAAM,CAACG,IAAD,CAAb;AACH,KAjBL;AAkBH,GAtBD,CADJ;AAyBH,CA1BD;;AA6BA,SACIR,KADJ,EACWS,MADX","sourcesContent":["import {authCheck, authLogout, authLogin} from \"./actions\";\r\nimport Http from '../../utils/Http'\r\n\r\nconst login = (response) => {\r\n\r\n    return dispatch => (\r\n        new Promise((resolve, reject) => {\r\n            if (response.success) {\r\n                const {data: creds} = response\r\n                dispatch(authLogin(creds));\r\n                return resolve();\r\n            } else {\r\n                return reject();\r\n            }\r\n        })\r\n    )\r\n\r\n}\r\n\r\nconst logout = () => {\r\n    return dispatch => (\r\n        new Promise((resolve, reject) => {\r\n            dispatch(authLogout())\r\n            return resolve()\r\n\r\n            Http.post('api/auth/logout')\r\n                .then(() => {\r\n                    dispatch(authLogout())\r\n                    return resolve()\r\n                })\r\n                .catch(err => {\r\n                    const statusCode = err.response.status;\r\n                    const data = {\r\n                        error: null,\r\n                        statusCode,\r\n                    };\r\n                    if (statusCode === 401 || statusCode === 422) {\r\n                        // status 401 means unauthorized\r\n                        // status 422 means unprocessable entity\r\n                        data.error = err.response.data.message;\r\n                    }\r\n                    return reject(data);\r\n                })\r\n        })\r\n    )\r\n}\r\n\r\n\r\nexport {\r\n    login, logout\r\n}"]},"metadata":{},"sourceType":"module"}