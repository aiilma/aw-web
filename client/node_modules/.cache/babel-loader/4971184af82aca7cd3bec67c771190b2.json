{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\";\nimport UserApi from \"../../utils/UserApi\";\nconst user = {\n  id: null,\n  nickname: null,\n  steamid: null,\n  avatar: null,\n  createdAt: null,\n  updatedAt: null\n};\nconst initialState = {\n  user,\n  isLoading: true,\n  error: null\n};\nexport default function authReducer(state = initialState, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case types.STEAM_LOGIN:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case types.STEAM_LOGIN_COMPLETED:\n      return authLogin(state, payload);\n\n    case types.STEAM_LOGIN_FAILED:\n      return _objectSpread({}, state, {\n        isLoading: false\n      });\n\n    case types.STEAM_LOGOUT:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case types.STEAM_LOGOUT_COMPLETED:\n      return authLogout(state, payload);\n\n    case types.STEAM_LOGOUT_FAILED:\n      return _objectSpread({}, state, {\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n}\n;\n\nconst authLogin = (state, payload) => {\n  const user = payload;\n  UserApi.authenticate();\n  return _objectSpread({}, state, {\n    isLoading: false,\n    user: _objectSpread({}, user, {\n      createdAt: user.created_at,\n      visitedAt: user.visited_at\n    })\n  });\n};\n\nconst authLogout = (state, payload) => {\n  UserApi.logout();\n  return _objectSpread({}, state, {\n    isLoading: false,\n    user\n  });\n};","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/reducers.js"],"names":["types","UserApi","user","id","nickname","steamid","avatar","createdAt","updatedAt","initialState","isLoading","error","authReducer","state","type","payload","STEAM_LOGIN","STEAM_LOGIN_COMPLETED","authLogin","STEAM_LOGIN_FAILED","STEAM_LOGOUT","STEAM_LOGOUT_COMPLETED","authLogout","STEAM_LOGOUT_FAILED","authenticate","created_at","visitedAt","visited_at","logout"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,EAAE,EAAE,IADK;AAETC,EAAAA,QAAQ,EAAE,IAFD;AAGTC,EAAAA,OAAO,EAAE,IAHA;AAITC,EAAAA,MAAM,EAAE,IAJC;AAKTC,EAAAA,SAAS,EAAE,IALF;AAMTC,EAAAA,SAAS,EAAE;AANF,CAAb;AASA,MAAMC,YAAY,GAAG;AACjBP,EAAAA,IADiB;AAEjBQ,EAAAA,SAAS,EAAE,IAFM;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGJ,YAA7B,EAA2C;AAACK,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAA3C,EAAmE;AAC9E,UAAQD,IAAR;AACI,SAAKd,KAAK,CAACgB,WAAX;AACI,+BACOH,KADP;AAEIH,QAAAA,SAAS,EAAE;AAFf;;AAIJ,SAAKV,KAAK,CAACiB,qBAAX;AACI,aAAOC,SAAS,CAACL,KAAD,EAAQE,OAAR,CAAhB;;AACJ,SAAKf,KAAK,CAACmB,kBAAX;AACI,+BACON,KADP;AAEIH,QAAAA,SAAS,EAAE;AAFf;;AAIJ,SAAKV,KAAK,CAACoB,YAAX;AACI,+BACOP,KADP;AAEIH,QAAAA,SAAS,EAAE;AAFf;;AAIJ,SAAKV,KAAK,CAACqB,sBAAX;AACI,aAAOC,UAAU,CAACT,KAAD,EAAQE,OAAR,CAAjB;;AACJ,SAAKf,KAAK,CAACuB,mBAAX;AACI,+BACOV,KADP;AAEIH,QAAAA,SAAS,EAAE;AAFf;;AAIJ;AACI,aAAOG,KAAP;AA1BR;AA4BH;AAAA;;AAED,MAAMK,SAAS,GAAG,CAACL,KAAD,EAAQE,OAAR,KAAoB;AAClC,QAAMb,IAAI,GAAGa,OAAb;AACAd,EAAAA,OAAO,CAACuB,YAAR;AAEA,2BACOX,KADP;AAEIH,IAAAA,SAAS,EAAE,KAFf;AAGIR,IAAAA,IAAI,oBACGA,IADH;AAEAK,MAAAA,SAAS,EAAEL,IAAI,CAACuB,UAFhB;AAGAC,MAAAA,SAAS,EAAExB,IAAI,CAACyB;AAHhB;AAHR;AASH,CAbD;;AAeA,MAAML,UAAU,GAAG,CAACT,KAAD,EAAQE,OAAR,KAAoB;AACnCd,EAAAA,OAAO,CAAC2B,MAAR;AAEA,2BACOf,KADP;AAEIH,IAAAA,SAAS,EAAE,KAFf;AAGIR,IAAAA;AAHJ;AAKH,CARD","sourcesContent":["import * as types from \"./types\";\r\nimport UserApi from \"../../utils/UserApi\"\r\n\r\nconst user = {\r\n    id: null,\r\n    nickname: null,\r\n    steamid: null,\r\n    avatar: null,\r\n    createdAt: null,\r\n    updatedAt: null\r\n};\r\n\r\nconst initialState = {\r\n    user,\r\n    isLoading: true,\r\n    error: null\r\n};\r\n\r\nexport default function authReducer(state = initialState, {type, payload = null}) {\r\n    switch (type) {\r\n        case types.STEAM_LOGIN:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case types.STEAM_LOGIN_COMPLETED:\r\n            return authLogin(state, payload);\r\n        case types.STEAM_LOGIN_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n        case types.STEAM_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case types.STEAM_LOGOUT_COMPLETED:\r\n            return authLogout(state, payload);\r\n        case types.STEAM_LOGOUT_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst authLogin = (state, payload) => {\r\n    const user = payload;\r\n    UserApi.authenticate()\r\n\r\n    return {\r\n        ...state,\r\n        isLoading: false,\r\n        user: {\r\n            ...user,\r\n            createdAt: user.created_at,\r\n            visitedAt: user.visited_at,\r\n        }\r\n    }\r\n};\r\n\r\nconst authLogout = (state, payload) => {\r\n    UserApi.logout()\r\n\r\n    return {\r\n        ...state,\r\n        isLoading: false,\r\n        user\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}