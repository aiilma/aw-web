{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { AxiosInstance as Http } from \"axios\";\nimport * as types from \"./types\";\nconst user = {\n  user_id: null,\n  steamid: null,\n  nickname: null,\n  avatar: null,\n  balance: null,\n  group: null\n};\nconst initialState = {\n  isAuthenticated: false,\n  token: null,\n  user\n};\n\nfunction authReducer(state = initialState, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case types.AUTH_LOGIN:\n      // Http.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\n      return _objectSpread({}, state, {\n        isAuthenticated: payload.isAuthenticated,\n        token: payload.token,\n        user: {\n          user_id: payload.user.user_id,\n          steamid: payload.user.steamid,\n          nickname: payload.user.nickname,\n          avatar: payload.user.avatar,\n          balance: payload.user.balance,\n          group: payload.user.group\n        }\n      });\n\n    case types.AUTH_SET_USER:\n      return _objectSpread({}, state, {\n        isAuthenticated: payload.isAuthenticated,\n        token: payload.token,\n        user: {\n          user_id: payload.user.user_id,\n          steamid: payload.user.steamid,\n          nickname: payload.user.nickname,\n          avatar: payload.user.avatar,\n          balance: payload.user.balance,\n          group: payload.user.group\n        }\n      });\n    // case types.AUTH_CHECK:\n    //     state = {\n    //         ...state,\n    //         isAuthenticated: !!localStorage.getItem('jwt_token'),\n    //     }\n    //\n    //     if (state.isAuthenticated) {\n    //         Http.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\n    //     }\n    //\n    //     return state;\n\n    case types.AUTH_LOGOUT:\n      return _objectSpread({}, state, {\n        isAuthenticated: payload.isAuthenticated,\n        token: payload.token,\n        user: {}\n      });\n\n    default:\n      return state;\n  }\n}\n\n;\nexport default authReducer;","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/reducers.js"],"names":["AxiosInstance","Http","types","user","user_id","steamid","nickname","avatar","balance","group","initialState","isAuthenticated","token","authReducer","state","type","payload","AUTH_LOGIN","AUTH_SET_USER","AUTH_LOGOUT"],"mappings":";AAAA,SAAQA,aAAa,IAAIC,IAAzB,QAAoC,OAApC;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE,IADA;AAETC,EAAAA,OAAO,EAAE,IAFA;AAGTC,EAAAA,QAAQ,EAAE,IAHD;AAITC,EAAAA,MAAM,EAAE,IAJC;AAKTC,EAAAA,OAAO,EAAE,IALA;AAMTC,EAAAA,KAAK,EAAE;AANE,CAAb;AASA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBT,EAAAA;AAHiB,CAArB;;AAMA,SAASU,WAAT,CAAqBC,KAAK,GAAGJ,YAA7B,EAA2C;AAACK,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAA3C,EAAmE;AAC/D,UAAQD,IAAR;AACI,SAAKb,KAAK,CAACe,UAAX;AACI;AACA,+BACOH,KADP;AAEIH,QAAAA,eAAe,EAAEK,OAAO,CAACL,eAF7B;AAGIC,QAAAA,KAAK,EAAEI,OAAO,CAACJ,KAHnB;AAIIT,QAAAA,IAAI,EAAE;AACFC,UAAAA,OAAO,EAAEY,OAAO,CAACb,IAAR,CAAaC,OADpB;AAEFC,UAAAA,OAAO,EAAEW,OAAO,CAACb,IAAR,CAAaE,OAFpB;AAGFC,UAAAA,QAAQ,EAAEU,OAAO,CAACb,IAAR,CAAaG,QAHrB;AAIFC,UAAAA,MAAM,EAAES,OAAO,CAACb,IAAR,CAAaI,MAJnB;AAKFC,UAAAA,OAAO,EAAEQ,OAAO,CAACb,IAAR,CAAaK,OALpB;AAMFC,UAAAA,KAAK,EAAEO,OAAO,CAACb,IAAR,CAAaM;AANlB;AAJV;;AAaJ,SAAKP,KAAK,CAACgB,aAAX;AACI,+BACOJ,KADP;AAEIH,QAAAA,eAAe,EAAEK,OAAO,CAACL,eAF7B;AAGIC,QAAAA,KAAK,EAAEI,OAAO,CAACJ,KAHnB;AAIIT,QAAAA,IAAI,EAAE;AACFC,UAAAA,OAAO,EAAEY,OAAO,CAACb,IAAR,CAAaC,OADpB;AAEFC,UAAAA,OAAO,EAAEW,OAAO,CAACb,IAAR,CAAaE,OAFpB;AAGFC,UAAAA,QAAQ,EAAEU,OAAO,CAACb,IAAR,CAAaG,QAHrB;AAIFC,UAAAA,MAAM,EAAES,OAAO,CAACb,IAAR,CAAaI,MAJnB;AAKFC,UAAAA,OAAO,EAAEQ,OAAO,CAACb,IAAR,CAAaK,OALpB;AAMFC,UAAAA,KAAK,EAAEO,OAAO,CAACb,IAAR,CAAaM;AANlB;AAJV;AAaJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKP,KAAK,CAACiB,WAAX;AACI,+BACOL,KADP;AAEIH,QAAAA,eAAe,EAAEK,OAAO,CAACL,eAF7B;AAGIC,QAAAA,KAAK,EAAEI,OAAO,CAACJ,KAHnB;AAIIT,QAAAA,IAAI,EAAE;AAJV;;AAMJ;AACI,aAAOW,KAAP;AAjDR;AAmDH;;AAAA;AAED,eAAeD,WAAf","sourcesContent":["import {AxiosInstance as Http} from \"axios\";\r\nimport * as types from \"./types\";\r\n\r\nconst user = {\r\n    user_id: null,\r\n    steamid: null,\r\n    nickname: null,\r\n    avatar: null,\r\n    balance: null,\r\n    group: null,\r\n};\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    token: null,\r\n    user\r\n};\r\n\r\nfunction authReducer(state = initialState, {type, payload = null}) {\r\n    switch (type) {\r\n        case types.AUTH_LOGIN:\r\n            // Http.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload.isAuthenticated,\r\n                token: payload.token,\r\n                user: {\r\n                    user_id: payload.user.user_id,\r\n                    steamid: payload.user.steamid,\r\n                    nickname: payload.user.nickname,\r\n                    avatar: payload.user.avatar,\r\n                    balance: payload.user.balance,\r\n                    group: payload.user.group,\r\n                }\r\n            }\r\n        case types.AUTH_SET_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload.isAuthenticated,\r\n                token: payload.token,\r\n                user: {\r\n                    user_id: payload.user.user_id,\r\n                    steamid: payload.user.steamid,\r\n                    nickname: payload.user.nickname,\r\n                    avatar: payload.user.avatar,\r\n                    balance: payload.user.balance,\r\n                    group: payload.user.group,\r\n                }\r\n            }\r\n        // case types.AUTH_CHECK:\r\n        //     state = {\r\n        //         ...state,\r\n        //         isAuthenticated: !!localStorage.getItem('jwt_token'),\r\n        //     }\r\n        //\r\n        //     if (state.isAuthenticated) {\r\n        //         Http.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('jwt_token')}`;\r\n        //     }\r\n        //\r\n        //     return state;\r\n        case types.AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload.isAuthenticated,\r\n                token: payload.token,\r\n                user: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer"]},"metadata":{},"sourceType":"module"}