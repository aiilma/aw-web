{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\components\\\\HomePage\\\\BoxList.js\";\nimport React from 'react';\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\"; // import {useStyles} from \"./Home.style\";\n\nconst BoxVariant = props => {\n  // const classes = useStyles();\n  const classes = {};\n  const image = props.image;\n  return React.createElement(ButtonBase, {\n    component: Link,\n    to: image.to,\n    focusRipple: true,\n    className: classes.image,\n    focusVisibleClassName: classes.focusVisible,\n    p: 1,\n    m: 5,\n    style: {\n      transform: `rotate(${image.rotate}deg)`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.imageSrc,\n    style: {\n      backgroundImage: `url(${image.url})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: classes.imageBackdrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: classes.imageButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"span\",\n    variant: \"subtitle1\",\n    color: \"inherit\",\n    className: classes.imageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, image.title)));\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    minWidth: 300,\n    width: '100%'\n  },\n  image: {\n    position: 'relative',\n    height: 200,\n    width: '25%',\n    [theme.breakpoints.down('xs')]: {\n      width: '100% !important',\n      // Overrides inline-style\n      height: 100\n    },\n    '&:hover, &$focusVisible': {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15\n      },\n      '& $imageMarked': {\n        opacity: 0\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor'\n      }\n    }\n  },\n  focusVisible: {},\n  imageButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.common.white\n  },\n  imageSrc: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%'\n  },\n  imageBackdrop: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create('opacity')\n  },\n  imageTitle: {\n    position: 'relative',\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: 'absolute',\n    bottom: -2,\n    left: 'calc(50% - 9px)',\n    transition: theme.transitions.create('opacity')\n  }\n}));\n\nconst BoxList = props => {\n  const images = props.images;\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.root,\n    m: 1,\n    p: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, images.map(image => React.createElement(ButtonBase, {\n    focusRipple: true,\n    key: image.title,\n    className: classes.image,\n    focusVisibleClassName: classes.focusVisible,\n    style: {\n      width: image.width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.imageSrc,\n    style: {\n      backgroundImage: `url(${image.url})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: classes.imageBackdrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: classes.imageButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"span\",\n    variant: \"subtitle1\",\n    color: \"inherit\",\n    className: classes.imageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, image.title, React.createElement(\"span\", {\n    className: classes.imageMarked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }))))));\n};\n\nexport default BoxList;","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/components/HomePage/BoxList.js"],"names":["React","ButtonBase","Link","Typography","makeStyles","BoxVariant","props","classes","image","to","focusVisible","transform","rotate","imageSrc","backgroundImage","url","imageBackdrop","imageButton","imageTitle","title","useStyles","theme","root","display","flexWrap","minWidth","width","position","height","breakpoints","down","zIndex","opacity","border","left","right","top","bottom","alignItems","justifyContent","color","palette","common","white","backgroundSize","backgroundPosition","backgroundColor","black","transition","transitions","create","padding","spacing","imageMarked","BoxList","images","map"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n// import {useStyles} from \"./Home.style\";\r\n\r\nconst BoxVariant = (props) => {\r\n    // const classes = useStyles();\r\n    const classes = {};\r\n    const {image} = props\r\n\r\n    return (\r\n        <ButtonBase\r\n            component={Link} to={image.to}\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n            p={1}\r\n            m={5}\r\n            style={{transform: `rotate(${image.rotate}deg)`}}>\r\n                                          <span\r\n                                              className={classes.imageSrc}\r\n                                              style={{\r\n                                                  backgroundImage: `url(${image.url})`,\r\n                                              }}\r\n                                          />\r\n            <span className={classes.imageBackdrop}/>\r\n            <span className={classes.imageButton}>\r\n                                            <Typography\r\n                                                component=\"span\"\r\n                                                variant=\"subtitle1\"\r\n                                                color=\"inherit\"\r\n                                                className={classes.imageTitle}\r\n                                            >{image.title}</Typography>\r\n                                        </span>\r\n        </ButtonBase>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        minWidth: 300,\r\n        width: '100%',\r\n    },\r\n    image: {\r\n        position: 'relative',\r\n        height: 200,\r\n        width: '25%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100% !important', // Overrides inline-style\r\n            height: 100,\r\n        },\r\n        '&:hover, &$focusVisible': {\r\n            zIndex: 1,\r\n            '& $imageBackdrop': {\r\n                opacity: 0.15,\r\n            },\r\n            '& $imageMarked': {\r\n                opacity: 0,\r\n            },\r\n            '& $imageTitle': {\r\n                border: '4px solid currentColor',\r\n            },\r\n        },\r\n    },\r\n    focusVisible: {},\r\n    imageButton: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: theme.palette.common.white,\r\n    },\r\n    imageSrc: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center 40%',\r\n    },\r\n    imageBackdrop: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundColor: theme.palette.common.black,\r\n        opacity: 0.4,\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n    imageTitle: {\r\n        position: 'relative',\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n    },\r\n    imageMarked: {\r\n        height: 3,\r\n        width: 18,\r\n        backgroundColor: theme.palette.common.white,\r\n        position: 'absolute',\r\n        bottom: -2,\r\n        left: 'calc(50% - 9px)',\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n}));\r\n\r\nconst BoxList = (props) => {\r\n    const {images} = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root} m={1} p={1}>\r\n            {/*{images.map(image => <BoxVariant key={image.title} image={image}/>)}*/}\r\n            {images.map(image => (\r\n                <ButtonBase\r\n                    focusRipple\r\n                    key={image.title}\r\n                    className={classes.image}\r\n                    focusVisibleClassName={classes.focusVisible}\r\n                    style={{\r\n                        width: image.width,\r\n                    }}\r\n                >\r\n          <span\r\n              className={classes.imageSrc}\r\n              style={{\r\n                  backgroundImage: `url(${image.url})`,\r\n              }}\r\n          />\r\n                    <span className={classes.imageBackdrop} />\r\n                    <span className={classes.imageButton}>\r\n            <Typography\r\n                component=\"span\"\r\n                variant=\"subtitle1\"\r\n                color=\"inherit\"\r\n                className={classes.imageTitle}\r\n            >\r\n              {image.title}\r\n                <span className={classes.imageMarked} />\r\n            </Typography>\r\n          </span>\r\n                </ButtonBase>\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoxList"]},"metadata":{},"sourceType":"module"}