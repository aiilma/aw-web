{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\";\nconst initialState = {\n  message: '',\n  isError: false\n};\nexport default function errorReducer(state = initialState, {\n  type,\n  payload = null\n}) {\n  switch (type) {\n    case types.SET_HTTP_ERROR:\n      return executeError(state, payload);\n\n    case types.RESET_HTTP_ERROR:\n      return resetError(state, payload);\n\n    default:\n      return state;\n  }\n}\n;\n\nconst executeError = (state, payload) => {\n  return _objectSpread({}, state, {\n    isError: true,\n    message: payload.message\n  });\n};\n\nconst resetError = (state, payload) => {\n  return _objectSpread({}, state, {\n    isError: false,\n    message: ''\n  });\n};","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/error/reducers.js"],"names":["types","initialState","message","isError","errorReducer","state","type","payload","SET_HTTP_ERROR","executeError","RESET_HTTP_ERROR","resetError"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGJ,YAA9B,EAA4C;AAACK,EAAAA,IAAD;AAAOC,EAAAA,OAAO,GAAG;AAAjB,CAA5C,EAAoE;AAC/E,UAAQD,IAAR;AACI,SAAKN,KAAK,CAACQ,cAAX;AACI,aAAOC,YAAY,CAACJ,KAAD,EAAQE,OAAR,CAAnB;;AACJ,SAAKP,KAAK,CAACU,gBAAX;AACI,aAAOC,UAAU,CAACN,KAAD,EAAQE,OAAR,CAAjB;;AACJ;AACI,aAAOF,KAAP;AANR;AAQH;AAAA;;AAED,MAAMI,YAAY,GAAG,CAACJ,KAAD,EAAQE,OAAR,KAAoB;AACrC,2BACOF,KADP;AAEIF,IAAAA,OAAO,EAAE,IAFb;AAGID,IAAAA,OAAO,EAAEK,OAAO,CAACL;AAHrB;AAKH,CAND;;AAQA,MAAMS,UAAU,GAAG,CAACN,KAAD,EAAQE,OAAR,KAAoB;AACnC,2BACOF,KADP;AAEIF,IAAAA,OAAO,EAAE,KAFb;AAGID,IAAAA,OAAO,EAAE;AAHb;AAKH,CAND","sourcesContent":["import * as types from \"./types\";\r\n\r\nconst initialState = {\r\n    message: '',\r\n    isError: false,\r\n}\r\n\r\nexport default function errorReducer(state = initialState, {type, payload = null}) {\r\n    switch (type) {\r\n        case types.SET_HTTP_ERROR:\r\n            return executeError(state, payload);\r\n        case types.RESET_HTTP_ERROR:\r\n            return resetError(state, payload);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst executeError = (state, payload) => {\r\n    return {\r\n        ...state,\r\n        isError: true,\r\n        message: payload.message\r\n    };\r\n}\r\n\r\nconst resetError = (state, payload) => {\r\n    return {\r\n        ...state,\r\n        isError: false,\r\n        message: ''\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}