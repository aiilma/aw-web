{"ast":null,"code":"import * as types from \"./types\";\nexport const login = data => {\n  if (data.success) {\n    const user = data.data.user;\n    console.log(user);\n    let userData = {\n      user_id: data.user.user_id,\n      steamid: data.user.steamid,\n      nickname: data.user.nickname,\n      avatar: data.user.avatar,\n      balance: data.user.balance,\n      group: data.user.group,\n      token: data.token,\n      timestamp: new Date().toString()\n    }; // save app state with user date in local storage\n\n    localStorage[\"user\"] = JSON.stringify(userData);\n    return authLogin({\n      user: userData\n    });\n  } else alert(\"failed\");\n};\nexport const logout = () => {\n  const userData = {}; // save app state with user date in local storage\n\n  localStorage[\"user\"] = JSON.stringify(userData);\n  return authLogout();\n};\n\nfunction authLogin() {\n  return {\n    type: types.AUTH_LOGIN\n  };\n}\n\nfunction authLogout(payload) {\n  return {\n    type: types.AUTH_LOGOUT,\n    payload\n  };\n}","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/store/ducks/auth/actions.js"],"names":["types","login","data","success","user","console","log","userData","user_id","steamid","nickname","avatar","balance","group","token","timestamp","Date","toString","localStorage","JSON","stringify","authLogin","alert","logout","authLogout","type","AUTH_LOGIN","payload","AUTH_LOGOUT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU;AAC3B,MAAIA,IAAI,CAACC,OAAT,EAAkB;AAAA,UACPC,IADO,GACCF,IAAI,CAACA,IADN,CACPE,IADO;AAEdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAIG,QAAQ,GAAG;AACXC,MAAAA,OAAO,EAAEN,IAAI,CAACE,IAAL,CAAUI,OADR;AAEXC,MAAAA,OAAO,EAAEP,IAAI,CAACE,IAAL,CAAUK,OAFR;AAGXC,MAAAA,QAAQ,EAAER,IAAI,CAACE,IAAL,CAAUM,QAHT;AAIXC,MAAAA,MAAM,EAAET,IAAI,CAACE,IAAL,CAAUO,MAJP;AAKXC,MAAAA,OAAO,EAAEV,IAAI,CAACE,IAAL,CAAUQ,OALR;AAMXC,MAAAA,KAAK,EAAEX,IAAI,CAACE,IAAL,CAAUS,KANN;AAOXC,MAAAA,KAAK,EAAEZ,IAAI,CAACY,KAPD;AAQXC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,QAAX;AARA,KAAf,CAHc,CAcd;;AACAC,IAAAA,YAAY,CAAC,MAAD,CAAZ,GAAuBC,IAAI,CAACC,SAAL,CAAeb,QAAf,CAAvB;AAEA,WAAOc,SAAS,CAAC;AACbjB,MAAAA,IAAI,EAAEG;AADO,KAAD,CAAhB;AAGH,GApBD,MAoBOe,KAAK,CAAC,QAAD,CAAL;AACV,CAtBM;AAwBP,OAAO,MAAMC,MAAM,GAAG,MAAM;AACxB,QAAMhB,QAAQ,GAAG,EAAjB,CADwB,CAExB;;AACAW,EAAAA,YAAY,CAAC,MAAD,CAAZ,GAAuBC,IAAI,CAACC,SAAL,CAAeb,QAAf,CAAvB;AACA,SAAOiB,UAAU,EAAjB;AACH,CALM;;AAOP,SAASH,SAAT,GAAqB;AACjB,SAAO;AACHI,IAAAA,IAAI,EAAEzB,KAAK,CAAC0B;AADT,GAAP;AAGH;;AAED,SAASF,UAAT,CAAoBG,OAApB,EAA6B;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAEzB,KAAK,CAAC4B,WADT;AAEHD,IAAAA;AAFG,GAAP;AAIH","sourcesContent":["import * as types from \"./types\";\r\n\r\nexport const login = (data) => {\r\n    if (data.success) {\r\n        const {user} = data.data\r\n        console.log(user)\r\n        let userData = {\r\n            user_id: data.user.user_id,\r\n            steamid: data.user.steamid,\r\n            nickname: data.user.nickname,\r\n            avatar: data.user.avatar,\r\n            balance: data.user.balance,\r\n            group: data.user.group,\r\n            token: data.token,\r\n            timestamp: new Date().toString()\r\n        };\r\n\r\n        // save app state with user date in local storage\r\n        localStorage[\"user\"] = JSON.stringify(userData);\r\n\r\n        return authLogin({\r\n            user: userData\r\n        })\r\n    } else alert(\"failed\");\r\n}\r\n\r\nexport const logout = () => {\r\n    const userData = {}\r\n    // save app state with user date in local storage\r\n    localStorage[\"user\"] = JSON.stringify(userData);\r\n    return authLogout()\r\n}\r\n\r\nfunction authLogin() {\r\n    return {\r\n        type: types.AUTH_LOGIN\r\n    }\r\n}\r\n\r\nfunction authLogout(payload) {\r\n    return {\r\n        type: types.AUTH_LOGOUT,\r\n        payload\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}