{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\php\\\\Laravel\\\\aw.client\\\\src\\\\views\\\\pages\\\\CompOrderForm\\\\Container.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { clearCompForm, fetchCompForm } from \"../../../store/ducks/comp-order-form/actions\";\nimport EnhancedForm from \"./EnhancedForm\";\nimport { Preloader } from \"../../common/layout\";\n\nclass CompFormContainer extends Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          fetchCompForm = _this$props.fetchCompForm,\n          match = _this$props.match;\n    const alias = match.params.alias;\n    fetchCompForm(alias);\n  }\n\n  componentWillUnmount() {\n    const clearCompForm = this.props.clearCompForm;\n    clearCompForm();\n  }\n\n  handleBack() {\n    this.props.history.goBack();\n  }\n\n  render() {\n    return React.createElement(EnhancedForm, {\n      orderFormData: this.props.orderFormData,\n      handleBack: this.handleBack.bind(this),\n      onSubmit: (values, actions) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          actions.setSubmitting(false);\n        }, 1000);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  orderFormData: state.compOrderForm\n});\n\nexport default connect(mapStateToProps, {\n  fetchCompForm,\n  clearCompForm\n})(CompFormContainer);","map":{"version":3,"sources":["D:/Projects/php/Laravel/aw.client/src/views/pages/CompOrderForm/Container.js"],"names":["React","Component","connect","clearCompForm","fetchCompForm","EnhancedForm","Preloader","CompFormContainer","componentDidMount","props","match","alias","params","componentWillUnmount","handleBack","history","goBack","render","orderFormData","bind","values","actions","setTimeout","alert","JSON","stringify","setSubmitting","mapStateToProps","state","compOrderForm"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,8CAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;;AAGA,MAAMC,iBAAN,SAAgCN,SAAhC,CAA0C;AAEtCO,EAAAA,iBAAiB,GAAG;AAAA,wBACe,KAAKC,KADpB;AAAA,UACTL,aADS,eACTA,aADS;AAAA,UACMM,KADN,eACMA,KADN;AAEhB,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACAP,IAAAA,aAAa,CAACO,KAAD,CAAb;AACH;;AAEDE,EAAAA,oBAAoB,GAAG;AAAA,UACZV,aADY,GACK,KAAKM,KADV,CACZN,aADY;AAEnBA,IAAAA,aAAa;AAChB;;AAEDW,EAAAA,UAAU,GAAG;AACT,SAAKL,KAAL,CAAWM,OAAX,CAAmBC,MAAnB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,YAAD;AACI,MAAA,aAAa,EAAE,KAAKR,KAAL,CAAWS,aAD9B;AAEI,MAAA,UAAU,EAAE,KAAKJ,UAAL,CAAgBK,IAAhB,CAAqB,IAArB,CAFhB;AAGI,MAAA,QAAQ,EAAE,CAACC,MAAD,EAASC,OAAT,KAAqB;AAC3BC,QAAAA,UAAU,CAAC,MAAM;AACbC,UAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAC,UAAAA,OAAO,CAACK,aAAR,CAAsB,KAAtB;AACH,SAHS,EAGP,IAHO,CAAV;AAIH,OARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAYH;;AA9BqC;;AAkC1C,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCV,EAAAA,aAAa,EAAEU,KAAK,CAACC;AADW,CAAZ,CAAxB;;AAIA,eAAe3B,OAAO,CAACyB,eAAD,EAAkB;AAACvB,EAAAA,aAAD;AAAgBD,EAAAA;AAAhB,CAAlB,CAAP,CAAyDI,iBAAzD,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {clearCompForm, fetchCompForm} from \"../../../store/ducks/comp-order-form/actions\";\r\nimport EnhancedForm from \"./EnhancedForm\";\r\nimport {Preloader} from \"../../common/layout\";\r\n\r\n\r\nclass CompFormContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        const {fetchCompForm, match} = this.props\r\n        const alias = match.params.alias\r\n        fetchCompForm(alias)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {clearCompForm} = this.props\r\n        clearCompForm()\r\n    }\r\n\r\n    handleBack() {\r\n        this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <EnhancedForm\r\n                orderFormData={this.props.orderFormData}\r\n                handleBack={this.handleBack.bind(this)}\r\n                onSubmit={(values, actions) => {\r\n                    setTimeout(() => {\r\n                        alert(JSON.stringify(values, null, 2));\r\n                        actions.setSubmitting(false);\r\n                    }, 1000);\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    orderFormData: state.compOrderForm\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchCompForm, clearCompForm})(CompFormContainer)"]},"metadata":{},"sourceType":"module"}